zz_valyria_spell_failure_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = spell_failure
		desc = spell_failure_txt
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = spell_failure_txt
		scope:secondary_recipient  = {
			random_list = {
				50 = {
					increase_wounds_effect = { REASON = fire_magic }
				}
				25 = {
					add_trait_force_tooltip = scaly
				}
				25 = {
					modifier = {
						add = zz_spellcast_value
					}
				}
			}
		}
	}
}

zz_valyria_magic_duel_stress_effect = { 
	if = {
		limit = {
			has_trait = compassionate
			has_trait = wrathful
			has_trait = sadistic
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	else_if = {
		limit = {
			OR = {
				has_relation_rival = scope:recipient
				has_relation_nemesis = scope:recipient
			}
		}
		add_stress = major_stress_loss
		stress_impact = {
			forgiving = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
}


zz_vayria_magic_duel_contest_effect = {
	zz_valyria_magic_duel_stress_effect = yes 
	if = {
		limit = {
			scope:weaken_spell_flag = yes
		}
		scope:secondary_recipient = {
			duel = {
				skill = learning 
				target = scope:recipient
				75 = {
					modifier = {
						add = zz_fire_damage_scaling_value
					}
					add_dread = medium_dread_gain
					scope:recipient = {
						if = {
							limit = {
								scope:strike_imprison_flag = yes
							}
							increase_wounds_effect = { REASON = fire_magic }
							add_trait = burned
							add_trait_xp = {
								trait = burned
								value = { 5 200 }
							}
							add_stress = massive_stress_gain
							imprison_character_effect = {
								TARGET = scope:recipient
								IMPRISONER = scope:actor
							}
						}
						else = {
							show_as_tooltip = {
								add_trait = wounded_3
								add_stress = massive_stress_gain
							}
							scope:actor = {
								if = {
									limit = {
										NOR = {
											has_imprisonment_reason = scope:recipient
											has_banish_reason = scope:recipient
											has_execute_reason = scope:recipient
										}
									}
									add_tyranny = minor_tyranny_gain
								}
							}
							custom_tooltip = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame.tyranny
						}
					}
				}
				25 = {
					
				}
			}
		}
	}	
	if = {
		limit = {
			scope:weaken_spell_flag = no
		}
		scope:secondary_recipient = {
			duel = {
				skill = learning 
				target = scope:recipient
				75 = {
					modifier = {
						add = zz_fire_damage_scaling_value
					}
					scope:actor = { 
						add_dread = major_dread_gain
						if = {
							limit = {
								has_execute_reason = scope:recipient
							}
							custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
						}
						else = {
							add_tyranny = execution_tyranny_gain
							add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
							if = {
								limit = {
									NOT = {	has_trait = murderer	}
								}
								add_trait = murderer
							}
							hidden_effect = {
								if = {
									limit = {
										exists = scope:recipient.primary_heir
										scope:recipient.primary_heir = {
											any_close_family_member = {
												this = scope:recipient
											}
											NOR = {
												has_relation_rival = scope:actor
												has_relation_nemesis = scope:actor
												has_trait = craven
												has_trait = forgiving
											}
										}
									}
									set_relation_rival = scope:recipient.primary_heir
								}
								else_if = {
									limit = {
										scope:recipient.age<16
										exists = scope:recipient.father
										scope:recipient.father = {
											is_alive = yes
											is_landed = yes
											is_ruler = yes
											NOR = {
												has_relation_rival = scope:actor
												has_relation_nemesis = scope:actor
												has_trait = craven
												has_trait = forgiving
											}
										}
									}
									set_relation_rival = scope:recipient.father
								}
							}
						}
					}
					if  = { 
						limit = {
							scope:recipient = { 
								NOT = {
									is_at_war_with = scope:actor
								}	
							}
						}
						execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:secondary_recipient }
					}
					scope:recipient = {
						add_trait_xp = {
							trait = burned
							value = { 5 200 }
						}
						death = {
							death_reason = death_fire_magic
							killer = scope:secondary_recipient
						}
					}
				}
				25 = {

				}
			}
		}
	}	
}

zz_valyria_magic_apply_county_modifier_effect = {
	if = { 
		limit = { 
			scope:secondary_recipient = { 
				any_equipped_character_artifact = { 
					has_variable = glass_candle
				}
			}	
		}
		add_county_modifier = {
			modifier = $MODIFIER$
			years = $BOOSTED_DURATION$
		}		
	}
	else = { 
		add_county_modifier = {
			modifier = $MODIFIER$
			years = $DURATION$
		}		
	}

}
zz_valyria_magic_apply_character_modifier_effect = {
	if = { 
		limit = { 
			scope:secondary_recipient = { 
				any_equipped_character_artifact = { 
					has_variable = glass_candle
				}
			}	
		}
		add_character_modifier = {
			modifier = $MODIFIER$
			years = $BOOSTED_DURATION$
		}	
	}
	else = { 
		add_character_modifier = {
			modifier = $MODIFIER$
			years = $DURATION$
		}	
	}
}



zz_old_strike_effect = { 
	if = {
		limit = {
			has_trait = compassionate
			has_trait = wrathful
			has_trait = sadistic
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	else_if = {
		limit = {
			OR = {
				has_relation_rival = scope:recipient
				has_relation_nemesis = scope:recipient
			}
		}
		add_stress = major_stress_loss
		stress_impact = {
			forgiving = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	if = {
		limit = {
			scope:weaken_spell_flag = yes
		}
		add_dread = medium_dread_gain
		scope:recipient = {
			if = {
				limit = {
					scope:flame_strike_imprison_flag = yes
				}
				increase_wounds_effect = { REASON = fire_magic }
				add_trait = burned
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				add_stress = massive_stress_gain
				imprison_character_effect = {
					TARGET = scope:recipient
					IMPRISONER = scope:actor
				}
			}
			else = {
				show_as_tooltip = {
					add_trait = wounded_3
					add_stress = massive_stress_gain
				}
				scope:actor = {
					if = {
						limit = {
							NOR = {
								has_imprisonment_reason = scope:recipient
								has_banish_reason = scope:recipient
								has_execute_reason = scope:recipient
							}
						}
						add_tyranny = minor_tyranny_gain
					}
				}
				custom_tooltip = power_strike_spare_ct
			}
		}
	}
	else = {
		add_dread = major_dread_gain
		if = {
			limit = {
				scope:secondary_recipient = {
					is_in_army = yes
					exists = commanding_army
					commanding_army = {
						is_army_in_combat = yes
					}
				}
				scope:recipient = {
					is_in_army = yes
					OR = {
						AND = {
							exists = commanding_army
							commanding_army = {
								is_army_in_combat = yes
							}
							NOT = {
								commanding_army = scope:secondary_recipient.commanding_army
							}
							commanding_army.location = scope:secondary_recipient.commanding_army.location
						}
						AND = {
							exists = liege_or_court_owner
							liege_or_court_owner = {
								any_army = {
									is_army_in_combat = yes
									NOT = {
										THIS = scope:secondary_recipient.commanding_army
									}
									location = scope:secondary_recipient.commanding_army.location
								}
							}
						}
					}
				}
			}
			scope:secondary_recipient = {
				add_character_flag = mage_during_battle_flag
			}
		}
		else = {
			if = {
				limit = {
					has_execute_reason = scope:recipient
				}
				custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
			}
			else = {
				add_tyranny = execution_tyranny_gain
				add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
				if = {
					limit = {
						NOT = {	has_trait = murderer	}
					}
					add_trait = murderer
				}
				hidden_effect = {
					if = {
						limit = {
							exists = scope:recipient.primary_heir
							scope:recipient.primary_heir = {
								any_close_family_member = {
									this = scope:recipient
								}
								NOR = {
									has_relation_rival = scope:actor
									has_relation_nemesis = scope:actor
									has_relation_magic_minion  = scope:actor
									has_trait = craven
									has_trait = forgiving
								}
							}
						}
						set_relation_rival = scope:recipient.primary_heir
					}
					else_if = {
						limit = {
							scope:recipient.age<16
							exists = scope:recipient.father
							scope:recipient.father = {
								is_alive = yes
								is_landed = yes
								is_ruler = yes
								NOR = {
									has_relation_rival = scope:actor
									has_relation_nemesis = scope:actor
									has_relation_magic_minion = scope:actor
									has_trait = craven
									has_trait = forgiving
								}
							}
						}
						set_relation_rival = scope:recipient.father
					}
				}
			}
		}
	}				
	if = {
		limit = {
			scope:weaken_spell_flag = no
		}
		if = {
			limit = {
				scope:secondary_recipient = {
					has_character_flag = mage_during_battle_flag
				}
			}
			scope:recipient = {
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				death = {
					death_reason = death_battle
					killer = scope:secondary_recipient
				}
			}
			scope:secondary_recipient = {
				remove_character_flag = mage_during_battle_flag
			}
		}
		else = {
			execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:secondary_recipient }
			scope:recipient = {
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				death = {
					death_reason = death_execution
					killer = scope:secondary_recipient
				}
			}
		}
	}	
}


zz_valyria_mana_gain = {
	if = {
		limit = {
			has_trait = zz_magister
			has_trait_xp = {
				trait = zz_magister
				track = drops_of_power
				value < 100
			}
		}
		add_trait_xp = {
			trait = zz_magister
			track = drops_of_power
			value =  $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_01
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_01
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_02
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_02
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_03
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_03
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_04
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_04
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_05
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_05
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit ={
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_06
				value  < 100
			}
		}
		add_trait_xp = {
			trait = starwalker
			track = stores_of_power_06
			value = $MANAGAIN$
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = zz_valyria_magic_drops_power
			}
		}
		add_character_modifier = zz_valyria_magic_drops_power
	}
}

zz_valyria_mana_spend = {
	if = {
		limit = {
			OR = {
				has_character_modifier = zz_valyria_magic_drops_power
			}
		}
		remove_character_modifier = zz_valyria_magic_drops_power
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_06
				value >=$MANACOST$
			}
		}
		
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_06
				value = -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_05
				value >=$MANACOST$
			}
		}
		
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_05
				value = -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_04
				value >=$MANACOST$
			}
		}
		
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_04
				value = -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_03
				value >=$MANACOST$
			}
		}
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_03
				value = -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_02
				value >=$MANACOST$
			}
		}
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_02
				value =  -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = starwalker 
			has_trait_xp = {
				trait = starwalker
				track = stores_of_power_01
				value >=$MANACOST$
			}
		}
		hidden_effect = {
			add_trait_xp = {
				trait = starwalker
				track = stores_of_power_01
				value = -$MANACOST$  
			}
		}
	}
	else_if  = { 
		limit =  { 
			has_trait = zz_magister 
		}
		hidden_effect = {
			add_trait_xp = {
				trait = zz_magister
				track = drops_of_power
				value = -$MANACOST$  
			}
		}
	}
}

zz_valyria_gain_spell_experience = { 
	add_trait_xp = { 
		trait = zz_magister 
		track = $XPTRACK$ 
		value = $XPGAIN$ 
	}
}

zz_valyria_magic_cast_xp_gain = {
	zz_valyria_gain_spell_experience = {
		XPGAIN = 1 
		XPTRACK = secrets_of_the_higher_mysteries
	}
	zz_valyria_gain_spell_experience = {
		XPGAIN = 1 
		XPTRACK = $SKILL$
	}
}

zz_valyria_magic_cast_effect = { 
	scope:secondary_recipient = {
		remove_variable = casttype
	}
	if = {
		limit = {
			NOT = {
				any_equipped_character_artifact = { 
					has_variable = $SPELL$
				}
			}
		}
		scope:secondary_recipient = {
			zz_valyria_magic_cast_xp_gain = {
				SKILL = $SKILL$
			}
			zz_valyria_mana_spend = {
				MANACOST = $MANACOST$
			} 
		}
		random_list = { 
			40 = { 
				modifier = {
					add = zz_spellcast_value
				}
				$SPELL$_effect = yes
			}
			60 = { 
				zz_valyria_spell_failure_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			any_equipped_character_artifact = { 
				has_variable = $SPELL$
			}
		}
		if = { 
			limit = {
				any_equipped_character_artifact = { 
					has_variable = scroll
				}
			}
			random_equipped_character_artifact = {
				limit = {
					has_variable = scroll
				}
				save_scope_as = item
				scope:secondary_recipient = {
					set_variable = {
						name = casttype 
						value = flag:scroll
					}
				}
				$SPELL$_effect = yes
			}
		}
		else = {
			random_equipped_character_artifact = {
				limit = {
					has_variable = potion
				}
				save_scope_as = item
				scope:secondary_recipient = {
					set_variable = {
						name = casttype 
						value = flag:potion
					}
				}
			}
			$SPELL$_effect = yes
		}
	}
}

zz_valyria_populate_mage_list = { 
	if = { 
		limit = {
			has_trait = zz_magister
		}
		add_to_list = characters
	}
	every_living_mage = { 
		limit = { 
			liege_or_court_owner ?= scope:actor 
		}
		add_to_list = characters
	}
}

zz_valyria_populate_mage_list_can_teach = { 
	if = { 
		limit = {
			has_trait = zz_magister
			NOT = {
				THIS = scope:recipient
			}
			NOT = { 
				has_character_flag = zz_valyria_magic_taught_magic 
			}
		}
		add_to_list = characters
	}
	every_living_mage = { 
		limit = { 
			NOT = {
				THIS = scope:recipient
			}
			liege_or_court_owner ?= scope:actor 
			NOT = { 
				has_character_flag = zz_valyria_magic_taught_magic 
			}
		}
		add_to_list = characters
	}
}


zz_valyria_populate_spell_caster_list = {
	if = { 
		limit = {
			zz_valyria_valid_caster = {
				SPELL = $SPELL$
				MANACOST = $MANACOST$
			}
		}
		add_to_list = characters
	}
	every_living_mage = { 
		limit = { 
			liege_or_court_owner ?= scope:actor 
			zz_valyria_valid_caster = {
				SPELL = $SPELL$
				MANACOST = $MANACOST$
			}
		}
		add_to_list = characters
	}
}

zz_valyria_populate_spell_recipient_list = {
	scope:recipient = {
		add_to_list = characters
	}
	scope:actor = {
		add_to_list = characters
		every_courtier = {
			add_to_list = characters
		}
		every_child = {
			add_to_list = characters
		}
	}
}

zz_dragon_dreams = {
	remove_character_flag = dreamt
}





zz_add_spell = {
	if = {
		limit = {
			NOR  = {
				any_memory = {
					has_memory_type = $SPELL$
				}
				has_character_flag = $SPELL$_flag
			}
		}
		save_scope_as = spell_learner
		send_interface_message = {
			type = event_generic_neutral
			title = learn.$SPELL$.t
			desc = learn.$SPELL$.desc
			left_icon = scope:spell_learner
			right_icon = scope:spell_learner
			custom_tooltip = learn.$SPELL$.desc
			#add_character_flag =  $SPELL$_flag
			scope:spell_learner = {
				create_character_memory = {
					type = $SPELL$
				}
				scope:new_memory = {
					set_variable = {
						name = learning_location
						value = scope:spell_learner.location
					}
				}
				scope:activity ?= {
					add_activity_log_entry = {
						key = learn.$SPELL$.t
						score = 25
						tags = { good learning activity }
						character = root
						#Effect
						custom_tooltip = learn.$SPELL$.t
					}
				}
			}
		}		
	}
}


zz_gain_blood_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
			}
		}
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
			}
		}
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
			}
		}
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
			}
		}	
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
			}
		}	
		100 = {
			trigger = {
				NOT = {
					
				}
			}
			modifier = {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
				}
				add = -100
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_11_mysteries_of_longevity
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_11_mysteries_of_longevity
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_12_mysteries_of_vitality
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_12_mysteries_of_vitality
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_13_mysteries_of_resilience
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_13_mysteries_of_resilience
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_15_mysteries_of_fertility
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_15_mysteries_of_fertility
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_16_mysteries_of_blood_control
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_16_mysteries_of_blood_control
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_17_mysteries_of_vital_consumption
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_17_mysteries_of_vital_consumption
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_18_mysteries_of_draconic_genetics
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_18_mysteries_of_draconic_genetics
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_19_mysteries_of_sex_selection
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_19_mysteries_of_sex_selection
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection
			}
		}
	}
}

zz_gain_shadow_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_05_mysteries_cloying_shadow
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_05_mysteries_cloying_shadow
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_06_mysteries_of_feeble_daggers
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_06_mysteries_of_feeble_daggers
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_07_mysteries_of_the_weakened_vigilience
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_07_mysteries_of_the_weakened_vigilience
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_08_mysteries_of_the_revealed_shadows
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_shadow_magic_08_mysteries_of_the_revealed_shadows
			}
		}
	}
}

zz_gain_dream_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_06_mysteries_of_education_reformation
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_06_mysteries_of_education_reformation
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_07_mysteries_of_dreaming_fascination
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_07_mysteries_of_dreaming_fascination
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_09_mysteries_of_minor_scrying
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_09_mysteries_of_minor_scrying
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_10_mysteries_dreams_of_mystic_power
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_dream_magic_10_mysteries_dreams_of_mystic_power
			}
		}
	}
}

zz_gain_alchemy_spell = { 
	random_list = { 
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
			}
		}
	}
}
zz_gain_fire_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_04_mysteries_of_flaming_purification
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_fire_magic_04_mysteries_of_flaming_purification
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_05_mysteries_of_flaming_blades
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_fire_magic_05_mysteries_of_flaming_blades
			}
		}
	}
}

zz_gain_water_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
					}		
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
					}		
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
					}		
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
					}		
				}
			}

			zz_add_spell  = {
				SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
			}
		}

		
	}
}

zz_gain_air_magic_spell = { 
	random_list = {
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
					}		
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_03_mysteries_of_the_wall_of_the_wind
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_air_magic_03_mysteries_of_the_wall_of_the_wind
			}
		}
		100 = {
			trigger = {
				NOT = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_04_mysteries_of_the_hurricane
					}
				}
			}
			zz_add_spell  = {
				SPELL = zz_valyria_magic_air_magic_04_mysteries_of_the_hurricane
			}
		}
	}
}

zz_random_gain_magic_spell = {
	random_list = {
		100 = {
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_11_mysteries_of_longevity				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_12_mysteries_of_vitality				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_13_mysteries_of_resilience				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_15_mysteries_of_fertility				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_16_mysteries_of_blood_control				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_17_mysteries_of_vital_consumption				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_18_mysteries_of_draconic_genetics				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_19_mysteries_of_sex_selection				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection				
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection				
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:blood_magic 
				add = 10000
			}
			zz_gain_blood_magic_spell = yes 
		}
		100 = { 
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_05_mysteries_cloying_shadow
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_06_mysteries_of_feeble_daggers
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_07_mysteries_of_the_weakened_vigilience
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_08_mysteries_of_the_revealed_shadows
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:shadow_magic 
				add = 10000
			}
			zz_gain_shadow_magic_spell = yes 
		}
		100 = { 
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_dream_magic_06_mysteries_of_education_reformation
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_dream_magic_07_mysteries_of_dreaming_fascination
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_dream_magic_09_mysteries_of_minor_scrying
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_dream_magic_10_mysteries_dreams_of_mystic_power
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:dream_magic 
				add = 10000
			}
			zz_gain_dream_magic_spell = yes 
		}
		100 = { 
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:alchemy_magic 
				add = 10000
			}
			zz_gain_alchemy_spell = yes 
		}
		100 = { 
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_04_mysteries_of_flaming_purification
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_05_mysteries_of_flaming_blades
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:fire_magic 
				add = 10000
			}
			zz_gain_fire_magic_spell = yes
		}
		100 = {
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
					}
					zz_valyria_knows_spell = {
						SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
					}
				}
			}
			modifier = { 
				var:current_school_of_magic ?= flag:water_magic 
				add = 10000
			}
			
			zz_gain_water_magic_spell  = yes 
		}
		100 = { 
			trigger = {
				NAND = {
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_03_mysteries_of_the_wall_of_the_wind
					}
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_04_mysteries_of_the_hurricane
					}
				}
			}

			modifier = { 
				var:current_school_of_magic ?= flag:air_magic 
				add = 10000
			}
			zz_gain_air_magic_spell = yes
		}			
	}
}

