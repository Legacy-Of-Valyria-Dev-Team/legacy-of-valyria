agot_on_title_gain = {
	effect = {
		#Apply silent sister laws
		if = {
			limit = { scope:title = title:d_the_silent_sisterhood }
			if = {
				limit = { NOT = { has_realm_law = female_only_law } }
				add_realm_law_skip_effects = female_only_law
			}
			if = {
				limit = { NOT = { has_government = silent_sisterhood_government } }
				change_government = silent_sisterhood_government
			}
			scope:title = {
				if = {
					limit = { NOT = { has_title_law = silent_sisterhood_succession_law } }
					add_title_law = silent_sisterhood_succession_law
				}
			}
		}

		#Night's Watch titles set to black
		if = {
			limit = {
				exists = scope:previous_holder
				scope:previous_holder = {
					government_has_flag = government_is_nw
				}
				has_variable = lc_primary_title
				var:lc_primary_title = scope:title
			}
			save_scope_as = new_lc

			# Set all Night's Watch titles to black
			every_held_title = {
				set_coa = c_castle_black
			}

			# Move old LC courtiers to the new LC
			every_in_list = {
				variable = lc_courtiers
				limit = {
					NOR = {
						is_ruler = yes
						AND = {
							exists = employer
							employer = { has_trait = nightswatch }
						}
						AND = {
							exists = employer
							employer = root
						}
					}
				}
				scope:new_lc = { add_courtier ?= prev }
			}

			# Clear variables
			remove_variable = lc_primary_title
			clear_variable_list = lc_courtiers
			remove_global_variable = nights_watch_temp_realm_succession_law_active

			# Ensure Night's Watch government and succession
			if = {
				limit = {
					NOT = { government_has_flag = government_is_nw }
				}
				change_government = nights_watch_government
				add_realm_law_skip_effects = nights_watch_realm_succession_law
			}

			trigger_event = { id = agot_nights_watch.0026 days = 1 }
		}

		#Ruin Handling
		if = {
			limit = {
				OR = {
					scope:title = title:c_ruins
					liege ?= { has_title = title:c_ruins }
				}
			}
			add_trait = ruin
		}
		# AGOT Added, ruins + dragon storage stuff
		if = {
			limit = {
				scope:title = title:c_ruins
			}

			#Death
			if = {
				limit = {
					any_courtier = {
						has_character_flag = dragon_dna_dummy
					}
				}
				debug_log = "AGOT RUIN DIED. TITLE ON_ACTION IF STATEMENT FIRED."
				random_courtier = {
					limit = {
						has_character_flag = dragon_dna_dummy
					}
					every_owned_story = {
						limit = {
							story_type = story_dragon_variable_storage
						}
						make_story_owner = title:c_ruins.holder
						debug_log = "AGOT RUIN DIED. RUINS TRANSFERRED TO RUIN HOLDER."
					}
					death = {
						death_reason = death_vanished
					}
				}
			}

			#Something dumb happened
			if = {
				limit = {
					scope:previous_holder = {
						is_alive = yes
						any_owned_story = {
							story_type = story_dragon_variable_storage
						}
					}
				}
				scope:previous_holder = {
					get_title = title:c_ruins
				}
			}
		}

		#Remove Exiled From Westeros
		if = {
			limit = {
				has_character_flag = exiled_from_westeros
				scope:title = {
					title_province ?= {
						geographical_region = world_westeros_seven_kingdoms
					}
				}
			}
			remove_character_flag = exiled_from_westeros
			if = {
				limit = {
					any_courtier_or_guest = {
						has_character_flag = exiled_from_westeros
					}
				}
				every_courtier_or_guest = {
					limit = {
						has_character_flag = exiled_from_westeros
					}
					remove_character_flag = exiled_from_westeros
				}
			}
		}

		#Ruins COAs
		every_held_title = {
			limit = {
				tier = tier_barony
				title_province = { has_holding_type = ruin_holding }
			}
			set_coa = ruins_coa
		}

		#BTW Struggle
		if = {
			limit = {
				# We are only interested in the title within the Struggle Region
				title:e_beyond_the_wall = {
					any_in_de_jure_hierarchy = {
						this = 	scope:title
					}
				}
				# Only for usurpation
				scope:transfer_type = flag:usurped

				root = {
					any_character_struggle = {
						involvement = involved
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_usurp_title_btw
							CHAR = root
						}
					}
				}
			}
			root = {
				every_character_struggle = {
					involvement = involved
					limit = {
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_usurp_title_btw
							CHAR = root
						}
					}
					activate_struggle_catalyst = {
						catalyst = catalyst_usurp_title_btw
						character = root
					}
				}
			}
		}

		#Am I Bronn?
		if = {
			limit = {
				root = character:Blackwater_1
				NOT = {
					house = house:house_Blackwater
				}
			}
			house = { save_scope_as = old_house }
			set_house = house:house_Blackwater
			every_child = {
				limit = { house = scope:old_house }
				set_house = house:house_Blackwater
				every_child = {
					limit = { house = scope:old_house }
					set_house = house:house_Blackwater
					every_child = {
						limit = { house = scope:old_house }
						set_house = house:house_Blackwater
					}
				}
			}
		}

		#Am I Davos?
		if = {
			limit = {
				root = character:Seaworth_1
				NOT = {
					house = house:house_Seaworth
				}
			}
			house = { save_scope_as = old_house }
			set_house = house:house_Seaworth
			every_child = {
				limit = { house = scope:old_house }
				set_house = house:house_Seaworth
				every_child = {
					limit = { house = scope:old_house }
					set_house = house:house_Seaworth
					every_child = {
						limit = { house = scope:old_house }
						set_house = house:house_Seaworth
					}
				}
			}
		}

		#Am I Hard Hugh Hammer?
		if = {
			limit = {
				root = character:Hammer_1
				NOT = {
					house = house:house_Hammer
				}
			}
			house = { save_scope_as = old_house }
			set_house = house:house_Hammer
			every_child = {
				limit = { house = scope:old_house }
				set_house = house:house_Hammer
				every_child = {
					limit = { house = scope:old_house }
					set_house = house:house_Hammer
					every_child = {
						limit = { house = scope:old_house }
						set_house = house:house_Hammer
					}
				}
			}
		}

		#Am I Ulf White?
		if = {
			limit = {
				root = character:White_1
				NOT = {
					house = house:house_White
				}
			}
			house = { save_scope_as = old_house }
			set_house = house:house_White
			every_child = {
				limit = { house = scope:old_house }
				set_house = house:house_White
				every_child = {
					limit = { house = scope:old_house }
					set_house = house:house_White
					every_child = {
						limit = { house = scope:old_house }
						set_house = house:house_White
					}
				}
			}
		}

		#Am I Nettles?
		if = {
			limit = {
				root = character:Farseed_1
				NOT = {
					house = house:house_Farseed
				}
			}
			house = { save_scope_as = old_house }
			set_house = house:house_Farseed
			every_child = {
				limit = { house = scope:old_house }
				set_house = house:house_Farseed
				every_child = {
					limit = { house = scope:old_house }
					set_house = house:house_Farseed
					every_child = {
						limit = { house = scope:old_house }
						set_house = house:house_Farseed
					}
				}
			}
		}

		#Stannis Rooloo Event
		if = {
			limit = {
				root = character:Baratheon_3
				agot_has_historical_events_trigger = yes
				NOT = { has_character_flag = rooloo_blocker }
			}
			random_list = {
				0 = {
					trigger_event = { id = agot_filler_rhllor.0001 days = { 4000 5500 } } # R'hllor Conversion
					modifier = {
						add = agot_historic_event_chance
					}
				}
				0 = {
					add_character_flag = rooloo_blocker
					modifier = {
						add = agot_nonhistoric_event_chance
						has_game_rule = agot_story_random_events_random_outcomes
					}
				}
			}
		}

		#Iron Throne
		if = {
			limit = { scope:title = title:e_the_iron_throne }
			remove_character_flag = mw_gave_up_crown_after_megawar # To deal if a person who gives it up gets it again
			# Prince title needs to be king if gained
			if = {
				limit = {
					has_nickname = nick_the_rogue_prince
				}
				give_nickname = nick_the_rogue_king
			}
		}
		#Pirates
		if = {
			limit = {
				scope:transfer_type = flag:created
				is_alive = yes
				has_government = pirate_government
				scope:title.tier > tier_county
			}
			scope:title = { add_title_law = pirate_succession_law }
		}

		#Slavery
		if = {
			limit = {
				agot_has_slave_population_trigger = yes
			}
			trigger_event = {
				id = agot_slavery.0001
				days = 1
			}
		}

		#Free Cities
		if = {
			limit = {
				scope:title = { has_title_law = magisterial_life_succession_law }
			}

			scope:title = { save_scope_as = term_limit_country }

			if = {
				limit = {
					OR = {
						scope:term_limit_country.title_capital_county = { has_title_law = magisterial_life_succession_attached_titles_law }
						scope:term_limit_country.title_capital_county.duchy = { has_title_law = magisterial_life_succession_attached_titles_law }
					}
				}
				create_title_and_vassal_change = {
					type = election
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				if = {
					limit = {
						scope:term_limit_country.title_capital_county = { has_title_law = magisterial_life_succession_attached_titles_law }
						NOT = { has_title = scope:term_limit_country.title_capital_county }
					}
					scope:term_limit_country.title_capital_county = {
						change_title_holder = {
							holder = root
							change = scope:title_change
						}
					}
				}
				if = {
					limit = {
						scope:term_limit_country.title_capital_county.duchy = { has_title_law = magisterial_life_succession_attached_titles_law }
						NOT = { has_title = scope:term_limit_country.title_capital_county.duchy }
					}
					scope:term_limit_country.title_capital_county.duchy = {
						change_title_holder = {
							holder = root
							change = scope:title_change
						}
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}

		#Free Cities
		if = {
			limit = {
				scope:title = { has_title_law = magisterial_limited_succession_law }
			}

			scope:title = { save_scope_as = term_limit_country }

			if = {
				limit = {
					OR = {
						scope:term_limit_country.title_capital_county = { has_title_law = magisterial_limited_succession_attached_titles_law }
						scope:term_limit_country.title_capital_county.duchy = { has_title_law = magisterial_limited_succession_attached_titles_law }
					}
				}

				create_title_and_vassal_change = {
					type = election
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				if = {
					limit = {
						scope:term_limit_country.title_capital_county = { has_title_law = magisterial_limited_succession_attached_titles_law }
						NOT = { has_title = scope:term_limit_country.title_capital_county }
					}
					scope:term_limit_country.title_capital_county = {
						change_title_holder = {
							holder = root
							change = scope:title_change
						}
					}
				}
				if = {
					limit = {
						scope:term_limit_country.title_capital_county.duchy = { has_title_law = magisterial_limited_succession_attached_titles_law }
						NOT = { has_title = scope:term_limit_country.title_capital_county.duchy }
					}
					scope:term_limit_country.title_capital_county.duchy = {
						change_title_holder = {
							holder = root
							change = scope:title_change
						}
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}

		#Governments
		if = {
			limit = {
				has_government = ruins_government
				NOT = { top_liege = title:c_ruins.holder }
				any_held_county = {
					any_county_province = {
						has_holding_type = castle_holding
						barony = {
							NOT = { is_capital_barony = yes }
						}
					}
				}
			}
			random_held_county = {
				limit = {
					any_county_province = {
						has_holding_type = castle_holding
					}
				}
				random_county_province = {
					limit = {
						has_holding_type = castle_holding
					}
					county.holder = { save_scope_as = county_holder }

					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					barony = {
						change_title_holder = {
							holder = scope:county_holder
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change

					barony = { set_capital_barony = yes }
					root = { set_realm_capital = prev.county }
				}
			}
		}
		else_if = { # Things that don't change government
			limit = {
				OR = {
					has_government = ruins_government # Ruins don't change government
					scope:transfer_type = flag:created # Creating a title doesn't change government
					any_held_title = { # If gained a title of existing tier or lower, don't change government
						tier >= scope:title.tier
						count > 1
					}
				}
			}
			#Do Nothing
		}
		# If we pass this, then we didn't make the title and it's higher than any of our others
		else_if = {
			limit = {
				NOT = { has_government = pirate_government }
				agot_is_valid_pirate_government_target = yes
				scope:title = {
					kingdom = title:k_the_stepstones
				}
			}
			change_government = pirate_government
		}
		else_if = {
			limit = {
				NOT = { has_government = free_city_government }
				agot_is_valid_free_city_government_target = yes
				top_liege.primary_title ?= {
					OR = {
						has_title_law = magisterial_life_succession_law
						has_title_law = magisterial_limited_succession_law
					}
				}
			}
			change_government = free_city_government
		}
		else_if = {
			limit = {
				NOT = { has_government = lp_feudal_government }
			}
			if = { # If can just change, do so
				limit = { agot_is_valid_lp_feudal_government_target = yes }
				change_government = lp_feudal_government
			}
			if = { # Now, special case for weird inheritence of IT by non-feudal
				limit = { # If I have gotten the Iron Throne + capital and I am not feudal
					scope:title = title:e_the_iron_throne
					has_title = title:e_the_iron_throne.title_capital_county
					NOR = {
						has_government = theocracy_government
						has_government = republic_government
						has_government = kingsguard_government
						has_government = ruins_government
						government_has_flag = government_is_administrative
					}
				}
				set_realm_capital = scope:title.title_capital_county
				change_government = lp_feudal_government
			}
		}

		#Dragonpits
		if = {
			limit = {
				has_variable_list = banned_dragonpit_locations
				is_target_in_variable_list = {
					name = banned_dragonpit_locations
					target = scope:title
				}
			}
			remove_list_variable = {
				name = banned_dragonpit_locations
				target = scope:title
			}
		}
	}
}

agot_on_title_gain_inheritance = {
	effect = {
		if = {
			limit = {
				scope:title = {
					OR = {
						is_outpost_county = yes
						is_command_county = yes
					}
				}
			}

			create_title_and_vassal_change = {
				type = returned
				save_scope_as = title_change
				add_claim_on_loss = no
			}

			scope:title = {
				change_title_holder = {
					holder = duchy.holder
					change = scope:title_change
				}
			}

			resolve_title_and_vassal_change = scope:title_change
		}

		#AGOT Added
		if = {
			limit = { scope:title = title:d_the_silent_sisterhood }
			if = {
				limit = { NOT = { has_realm_law = female_only_law } }
				add_realm_law_skip_effects = female_only_law
			}
			if = {
				limit = { NOT = { has_government = silent_sisterhood_government } }
				change_government = silent_sisterhood_government
			}
			scope:title = {
				if = {
					limit = { NOT = { has_title_law = silent_sisterhood_succession_law } }
					add_title_law = silent_sisterhood_succession_law
				}
			}
		}
	}
}

agot_on_title_gain_usurpation = {
	effect = {
		#AGOT Added
		if = {
			limit = { # BTW
				# We are only interested in the title within the Struggle Region
				title:e_beyond_the_wall = {
					any_in_de_jure_hierarchy = {
						this = 	scope:title
					}
				}
				# Only for usurpation
				scope:transfer_type = flag:usurped

				root = {
					any_character_struggle = {
						involvement = involved
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_usurp_title_btw
							CHAR = root
						}
					}
				}
			}
			root = {
				every_character_struggle = {
					involvement = involved
					limit = {
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_usurp_title_btw
							CHAR = root
						}
					}
					activate_struggle_catalyst = {
						catalyst = catalyst_usurp_title_btw
						character = root
					}
				}
			}
		}
	}
}

agot_on_explicit_claim_gain = {
	effect = {
		#AGOT Added
		if = {
			limit = {
				NOT = { scope:transfer_type = flag:inheritance }

				title:e_beyond_the_wall = {
					any_in_de_jure_hierarchy = {
						this = 	scope:title
					}
				}
				root = {
					any_character_struggle = {
						involvement = involved
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_gain_claim_on_title_btw
							CHAR = root
						}
					}
				}
			}
			root = {
				every_character_struggle = {
					involvement = involved
					limit = {
						activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
							CATALYST = catalyst_gain_claim_on_title_btw
							CHAR = root
						}
					}
					activate_struggle_catalyst = {
						catalyst = catalyst_gain_claim_on_title_btw
						character = root
					}
				}
			}
		}
	}
}

agot_on_title_gain_iron_throne = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
		has_government = feudal_government
	}
	effect = {
		change_government = lp_feudal_government
	}
}

agot_on_title_gain_black_brother_iron_throne = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
		has_trait = nightswatch
	}
	effect = {
		remove_trait = nightswatch
	}
}

agot_on_title_gain_iron_throne_dragonstone = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
		dynasty = dynasty:dynn_Targaryen
	}
	effect = {
		trigger_event = {
			id = agot_dragonstone.0003
			days = 2
		}
	}
}

agot_on_title_inheritance_lannister_baratheon_coa = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
		root = {
			dynasty = dynasty:dynn_Baratheon
			father = character:Baratheon_2
			mother = character:Lannister_6
			real_father = character:Lannister_7
		}
	}
	effect = {
		set_house = house:house_BaratheonKL
		every_close_family_member = {
			if = {
				limit = {
					dynasty = dynasty:dynn_Baratheon
					father = character:Baratheon_2
					mother = character:Lannister_6
					NOR = {
						has_trait = bastard
					}
				}
				set_house = house:house_BaratheonKL
				every_child = {
					if = {
						limit = {
							dynasty = dynasty:dynn_Baratheon
						}
						set_house = house:house_BaratheonKL
					}
				}
			}
		}
		every_held_title = {
			set_coa = root.house
		}
	}
}


agot_on_title_gain_iron_throne_kingslanding = {
	trigger = {
		scope:title = {
			tier = tier_county
			duchy = title:d_kings_landing
			NOT = { this = title:c_kings_landing }
		}
		dynasty = dynasty:dynn_Targaryen
		is_ai = yes
	}
	effect = {
		trigger_event = {
			id = agot_dragonstone.0005
			days = 1
		}
	}
}

agot_on_title_gain_nightswatch = {
	trigger = {
		OR = {
			government_has_flag = government_is_nw
			any_liege_or_above = {
				government_has_flag = government_is_nw
			}
		}
		NOT = { has_government = republic_government }
	}
	effect = {
		agot_debug_log_effect = { MSG = agot_debug_msg_on_title_gain_nightswatch }

		if = {
			limit = {
				NOR = {
					has_trait = nightswatch
					has_trait = nightswatch_temp
				}
			}
			agot_add_to_nightswatch_effect = yes
		}

		if = {
			limit = {
				has_trait = nightswatch
				has_trait_xp = {
					trait = nightswatch
					value < 100
				}
				age > 15
			}
			trigger_event = agot_nightswatch_maintenance.0101
		}

		every_courtier = {
			if = {
				limit = { is_female = yes }
				move_to_pool_at = title:d_winterfell.holder.capital_province
			}
			else_if = {
				limit = {
					is_human = yes
					NOT = {
						has_trait = nightswatch
					}
				}
				agot_add_to_nightswatch_effect = yes
			}

			if = {
				limit = {
					has_trait = nightswatch
					has_trait_xp = {
						trait = nightswatch
						value < 100
					}
					age > 15
				}
				trigger_event = agot_nightswatch_maintenance.0101
			}
		}

		if = {
			limit = {
				NOT = { government_has_flag = government_is_nw }
			}
			change_government = nights_watch_government
		}
	}
}

agot_on_title_gain_silent_sister = {
	trigger = {
		has_government = silent_sisterhood_government
	}
	effect = {
		every_courtier_or_guest = {
			if = {
				limit = {
					NOT = { has_trait = silent_sister }
				}
				if = {
					limit = {
						exists = father.liege_or_court_owner
					}
					move_to_pool_at = father.liege_or_court_owner.capital_province
				}
				else_if = {
					limit = {
						exists = mother.liege_or_court_owner
					}
					move_to_pool_at = mother.liege_or_court_owner.capital_province
				}
				else = {
					move_to_pool_at = title:c_oldtown.holder.capital_province
				}
			}
			else_if = {
				limit = {
					NOT = { has_trait = silent_sister }
				}
				agot_add_to_silent_sisters_effect = yes
			}
		}
	}
}

agot_on_title_gain_citadel = {
	trigger = {
		trigger_if = {
			limit = {
				exists = global_var:citadel_title
			}
			scope:title = global_var:citadel_title
		}
		trigger_else = {
			scope:title = title:b_the_citadel
		}
	}
	effect = {

		if = {
			limit = {
				NOT = {
					has_trait = archmaester
				}
			}

			random_living_maester = {
				limit = {
					has_trait = archmaester
				}
				save_scope_as = new_seneschal
			}

			root = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}

				global_var:citadel_title = {

					change_title_holder = {
						holder = scope:new_seneschal
						change = scope:change
						take_baronies = yes
					}
				}

			}
			resolve_title_and_vassal_change = scope:change
			#Name is unintuitive, but it has the trigger for moving maesters to court
			trigger_event = {
				on_action = agot_citadel_find_lost_maesters
				days = 0
			}
			trigger_event = {
				id = agot_maester.9011
				days = 1
			}
		}
		else = {
			save_scope_as = new_seneschal
			# Readd maester experience
			add_trait = maester
			add_trait_xp = {
				trait = maester
				value = 100
			}

			# Make them whole again
			if = {
				limit = { has_variable = is_disinherited }
				add_trait = disinherited
			}
			if = {
				limit = { has_variable = is_eunuch }
				add_trait = eunuch_1
			}
			if = {
				limit = { has_variable = is_beardless_eunuch }
				add_trait = beardless_eunuch
			}
			if = {
				limit = { has_variable = is_devoted }
				add_trait = devoted
			}
			if = {
				limit = { has_variable = is_order_member }
				add_trait = order_member
			}
			if = {
				limit = { has_variable = is_bastard }
				add_trait = bastard
			}
			if = {
				limit = { has_variable = is_bastard_founder }
				add_trait = bastard_founder
			}

			every_in_list = {
				variable = citadel_courtiers
				limit = {
					is_alive = yes
				}

				if = {
					limit = {
						has_character_flag = blocked_from_leaving
					}
					remove_character_flag = blocked_from_leaving
				}
				if = {
					limit = {
						NOT = {
							is_courtier_of = global_var:citadel_title.holder
						}
					}
					global_var:citadel_title.holder = {
						add_courtier = prev
					}
				}
				if = {
					limit = { # Trying to avoid dragon issues
						is_human = yes
					}
					add_character_flag = blocked_from_leaving
				}
			}
			clear_variable_list = citadel_courtiers
		}

		global_var:citadel_title.holder = {
			change_government = the_citadel_government
		}
	}
}

agot_on_title_gain_high_valyrian = {
	trigger = {
		culture = culture:high_valyrian
		exists = scope:previous_holder
		scope:previous_holder.culture = culture:high_valyrian
		NOT = { has_game_rule = agot_hv_conversion_unrestricted }
		this = dynasty.dynast
		NOT = { has_trait = bastard }
		NOT = { has_trait = bastard_founder }
		dynasty = {
			any_dynasty_member = {
				count = 1
			}
		}
		is_ai = yes
		NOT = { is_from_ruler_designer = yes }
	}
	effect = {
		if = {
			limit = {
				has_game_rule = agot_hv_conversion_offshoots
				scope:title.title_province = { geographical_region = world_westeros }
			}
			set_culture = culture:westerosi_valyrian
		}
		else_if = {
			limit = {
				has_game_rule = agot_hv_conversion_offshoots
				NOT = {
					scope:title.title_province = { geographical_region = world_westeros }
				}
			}
			set_culture = culture:essosi_valyrian
		}
		else_if = {
			limit = {
				has_game_rule = agot_hv_conversion_disallowed
			}
			set_culture = scope:title.culture
		}
	}
}

agot_on_title_gain_kingsguard = { # This only works if the previous owner has a title to fall back on, and thus, has a court
	trigger = {
		scope:title = {
			has_variable = kingsguard
		}
	}
	effect = {
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_lord_commander
				}
			}
			add_courtier ?= scope:title.var:kingsguard_lord_commander
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_lord_commander
				court_position =zz_kingsguard_lord_commander_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_1
				}
			}

			add_courtier ?= scope:title.var:kingsguard_1
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_1
				court_position =zz_kingsguard_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_2
				}
			}
			add_courtier ?= scope:title.var:kingsguard_2
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_2
				court_position =zz_kingsguard_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_3
				}
			}
			add_courtier ?= scope:title.var:kingsguard_3
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_3
				court_position =zz_kingsguard_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_4
				}
			}
			add_courtier ?= scope:title.var:kingsguard_4
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_4
				court_position =zz_kingsguard_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_5
				}
			}
			add_courtier ?= scope:title.var:kingsguard_5
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_5
				court_position =zz_kingsguard_court_position
			}
		}
		if = {
			limit = {
				scope:title = {
					exists = var:kingsguard_6
				}
			}
			add_courtier ?= scope:title.var:kingsguard_6
			appoint_court_position = {
				recipient = scope:title.var:kingsguard_6
				court_position =zz_kingsguard_court_position
			}
		}
	}
}

agot_on_title_gain_goldcloaks = {
	effect = {
		#court position assignment
		if = {
			limit = {
				scope:title = title:b_goldguard_heights
			}
			title:b_goldguard_heights = { set_coa = b_goldguard_heights }
			title:c_kings_landing.holder = {
				if = {
					limit = {
						NOT = { title:b_goldguard_heights.holder = title:c_kings_landing.holder }
					}
					appoint_court_position = {
						recipient = title:b_goldguard_heights.holder
						court_position = goldcloaks_court_position
					}
				}
			}
		}
	}
}

agot_on_title_gain_high_septon = {
	trigger = {
		scope:title = {
			this = title:k_the_most_devout
		}
	}
	effect = {
		agot_assign_high_septon_effect = yes
		agot_assign_high_septon_nickname_effect = yes
	}
}

agot_on_title_gain_iron_throne_appoint_high_septon = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
		exists = title:k_the_most_devout.holder
		exists = faith.religious_head
		faith.religious_head = title:k_the_most_devout.holder
		NAND = {
			exists = cp:councillor_court_chaplain
			cp:councillor_court_chaplain = title:k_the_most_devout.holder
		}
	}
	effect = {
		title:e_the_iron_throne.holder = {

			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:k_the_most_devout.holder = {
				change_liege = {
					liege = title:e_the_iron_throne.holder
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}

			create_title_and_vassal_change = {
				type = granted
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			title:b_visenyas_hill = {
				change_title_holder_include_vassals = {
					holder = title:k_the_most_devout.holder
					change = scope:title_change
				}
				resolve_title_and_vassal_change = scope:title_change
			}

			if = {
				limit = {
					exists = cp:councillor_court_chaplain
				}
				set_variable = {
					name = setting_up_high_septon
					value = yes
					days = 1
				}
				fire_councillor = cp:councillor_court_chaplain
			}
			assign_councillor_type = {
				type = councillor_court_chaplain
				target = title:k_the_most_devout.holder
			}
		}
	}
}

agot_on_title_gain_moat_cailin = {
	trigger = {
		scope:previous_holder ?= { has_character_flag = rebuilding_moat_cailin }
		scope:title = title:c_moat_cailin
	}
	effect = {
		add_character_flag = rebuilding_moat_cailin
		scope:previous_holder = { remove_character_flag = rebuilding_moat_cailin }
	}
}

agot_on_title_lost_iron_throne = {
	trigger = {
		scope:title = {
			this = title:e_the_iron_throne
		}
	}
	effect = {
		every_councillor = {
			limit = { has_variable = small_council }
			fire_small_councillor = yes
		}
	}
}

agot_on_title_lost_nightswatch = {
	trigger = {
		has_trait = nightswatch
	}
	effect = {
		every_living_black_brother = {
			limit = { #yeet black brothers back to wall AGAIN
				is_ruler = no
				NOR = {
					exists = employer
					AND = {
						exists = employer
						employer = { has_trait = nightswatch }
					}
				}
			}
			if = {
				limit = {
					NOT = { is_in_pool_at = title:k_the_wall.holder.capital_province }
				}
				move_to_pool_at = title:k_the_wall.holder.capital_province
			}
			if = {
				limit = {
					NOT = { employer = title:k_the_wall.holder }
				}
				set_employer = title:k_the_wall.holder
			}
		}

		if = {
			limit = {
				has_title = title:k_the_wall
				capital_county = title:c_moles_town
				capital_province = { has_holding_type = city_holding }
			}
			title:c_moles_town = {
				random_county_province = {
					limit = {
						has_holding_type = castle_holding
					}
					county.holder = { save_scope_as = county_holder }

					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change
						add_claim_on_loss = no
					}
					barony = {
						change_title_holder = {
							holder = scope:county_holder
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change

					barony = { set_capital_barony = yes }
				}
			}
			change_government = nights_watch_government
		}
	}
}

agot_on_title_lost_silent_sister = {
	trigger = {
		has_trait = silent_sister
	}
	effect = {
		every_living_silent_sister = {
			limit = {
				is_ruler = no
				NOR = {
					exists = employer
					AND = {
						exists = employer
						employer = { has_trait = silent_sister }
					}
				}
			}
			if = {
				limit = {
					NOT = { is_in_pool_at = title:c_oldtown.title_province }
				}
				move_to_pool_at = title:c_oldtown.title_province
			}
			if = {
				limit = {
					NOT = { employer = title:d_the_silent_sisterhood.holder }
				}
				set_employer = title:d_the_silent_sisterhood.holder
			}
		}
	}
}

agot_on_title_gain_wildfire = {
	trigger = {
		exists = scope:previous_holder
		scope:previous_holder = {
			has_character_flag = kingslanding_will_resolve_soon
		}
		scope:title = {
			this = title:e_the_iron_throne
		}
	}
	effect = {
		add_character_flag = kingslanding_will_resolve_soon
		trigger_event = {
			id = agot_events_rr_minor.0121
			months = { 1 2 }
		}
	}
}

agot_on_title_gain_ruins = {
	trigger = {
		has_government = ruins_government
		NOT = {
			capital_province ?= { has_holding_type = ruin_holding }
		}
	}
	effect = {
		if = {
			limit = {
				agot_is_valid_lp_feudal_government_target = yes
			}
			change_government = lp_feudal_government
		}
	}
}

agot_on_title_gain_unique_crown = {
	trigger = {
		AND = {
			OR = {
				primary_title.tier = tier_empire
				AND = {
					primary_title.tier = tier_kingdom
					agot_is_independent_ruler = yes
				}
			}
			OR = {
				agot_aegon_i_crown_trigger = yes
				agot_aenys_crown_trigger = yes
				agot_jaehaerys_crown_trigger = yes
				agot_aegon_iii_crown_trigger = yes
				agot_baelors_crown_trigger = yes
				agot_aegon_iv_crown_trigger = yes
				agot_maekars_crown_trigger = yes
				agot_daenerys_crown_trigger = yes
				agot_robertI_crown_trigger = yes
				agot_stannis_crown_trigger = yes
				agot_renly_crown_trigger = yes
				agot_joffreyI_crown_trigger = yes
				agot_jeyne_westerling_crown_trigger = yes
				agot_lyanna_crown_trigger = yes
				agot_rhaella_crown_trigger = yes
				agot_night_king_crown_trigger = yes
				agot_ice_crown_trigger = yes
			}
			NOT = { has_character_flag = has_had_event_agot_commission_crown.0005 }
			NOT = { government_has_flag = government_is_nw }
			NOT = { has_government = silent_sisterhood_government }
		}
	}
	effect = {
		trigger_event = agot_commission_crown.0005
	}
}

agot_on_title_gain_tyroshi_landing = {
	trigger = {
		scope:title = title:c_uhyrosh_coast
		culture = {
			NOT = {
				this = culture:tyroshi
				any_parent_culture_or_above = {
					this = culture:tyroshi
				}
			}
		}
		exists = scope:previous_holder
		scope:previous_holder.culture = {
			OR = {
				this = culture:tyroshi
				any_parent_culture_or_above = {
					this = culture:tyroshi
				}
			}
		}
	}
	effect = {
		scope:title = { reset_title_name = yes }
	}
}

agot_on_title_gain_uhyrosh_coast = {
	trigger = {
		scope:title = title:c_uhyrosh_coast
		culture = {
			OR = {
				this = culture:tyroshi
				any_parent_culture_or_above = {
					this = culture:tyroshi
				}
			}
		}
		exists = scope:previous_holder
		scope:previous_holder.culture = {
			NOT = {
				this = culture:tyroshi
				any_parent_culture_or_above = {
					this = culture:tyroshi
				}
			}
		}
	}
	effect = {
		scope:title = { set_title_name = c_tyroshi_landing }
	}
}

agot_on_title_gain_lp_destroy = {
	trigger = {
		OR = {
			AND = {
				scope:title = title:e_dorne
				root ?= title:k_dorne.holder
			}
			AND = {
				scope:title = title:e_the_iron_islands
				root ?= title:k_the_iron_islands.holder
			}
			AND = {
				scope:title = title:e_the_north
				root ?= title:k_the_north.holder
			}
			AND = {
				scope:title = title:e_the_reach
				root ?= title:k_the_reach.holder
			}
			AND = {
				scope:title = title:e_the_riverlands
				root ?= title:k_the_riverlands.holder
			}
			AND = {
				scope:title = title:e_the_stormlands
				root ?= title:k_the_stormlands.holder
			}
			AND = {
				scope:title = title:e_the_vale
				root ?= title:k_the_vale.holder
			}
			AND = {
				scope:title = title:e_the_westerlands
				root ?= title:k_the_westerlands.holder
			}
			AND = {
				scope:title = title:e_blackwater_bay
				root ?= title:k_the_crownlands.holder
			}
		}
	}
	effect = {
		if = {
			limit = {
				scope:title = title:e_dorne
				root ?= title:k_dorne.holder
			}
			destroy_title = title:k_dorne
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_dorne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_iron_islands
				root ?= title:k_the_iron_islands.holder
			}
			destroy_title = title:k_the_iron_islands
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_islands.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_north
				root ?= title:k_the_north.holder
			}
			destroy_title = title:k_the_north
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_north.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_reach
				root ?= title:k_the_reach.holder
			}
			destroy_title = title:k_the_reach
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_reach.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_riverlands
				root ?= title:k_the_riverlands.holder
			}
			destroy_title = title:k_the_riverlands
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_riverlands.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_stormlands
				root ?= title:k_the_stormlands.holder
			}
			destroy_title = title:k_the_stormlands
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_stormlands.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_vale
				root ?= title:k_the_vale.holder
			}
			destroy_title = title:k_the_vale
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_vale.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_the_westerlands
				root ?= title:k_the_westerlands.holder
			}
			destroy_title = title:k_the_westerlands
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_the_westerlands.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				scope:title = title:e_blackwater_bay
				root ?= title:k_the_crownlands.holder
			}
			destroy_title = title:k_the_crownlands
			add_legitimacy = 50
			every_vassal = {
				remove_opinion = {
					target = title:e_blackwater_bay.holder
					modifier = destroyed_title
				}
			}
		}
	}
}

agot_on_title_gain_iron_throne_created = {
	trigger = {
		scope:title = { this = title:e_the_iron_throne }
		OR = {
			has_title = title:e_dorne
			has_title = title:e_the_iron_islands
			has_title = title:e_the_north
			has_title = title:e_the_reach
			has_title = title:e_the_riverlands
			has_title = title:e_the_stormlands
			has_title = title:e_the_vale
			has_title = title:e_the_westerlands
			has_title = title:e_blackwater_bay
		}
	}
	effect = {
		if = {
			limit = {
				has_title = title:e_dorne
			}
			title:e_dorne = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_dorne
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_dorne = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_dorne.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_iron_islands
			}
			title:e_the_iron_islands = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_iron_islands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_iron_islands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_iron_islands.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_north
			}
			title:e_the_north = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_north
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_north = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_north.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_reach
			}
			title:e_the_reach = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_reach
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_reach = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_reach.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_riverlands
			}
			title:e_the_riverlands = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_riverlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_riverlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_riverlands.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_stormlands
			}
			title:e_the_stormlands = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_stormlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_stormlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_stormlands.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_vale
			}
			title:e_the_vale = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_vale
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_vale = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_vale.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_the_westerlands
			}
			title:e_the_westerlands = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_the_westerlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_westerlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_westerlands.holder
					modifier = destroyed_title
				}
			}
		}
		if = {
			limit = {
				has_title = title:e_blackwater_bay
			}
			title:e_blackwater_bay = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = title:e_the_iron_throne
				}
			}
			destroy_title = title:e_blackwater_bay
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_crownlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:k_the_crownlands.holder
					modifier = destroyed_title
				}
			}
		}
	}
}

agot_on_title_gain_iron_throne_reconquer = {
	trigger = {
		root ?= title:e_the_iron_throne.holder
		OR = {
			scope:title = title:e_dorne
			scope:title = title:e_the_iron_islands
			scope:title = title:e_the_north
			scope:title = title:e_the_reach
			scope:title = title:e_the_riverlands
			scope:title = title:e_the_stormlands
			scope:title = title:e_the_vale
			scope:title = title:e_the_westerlands
			scope:title = title:e_blackwater_bay
		}
	}
	effect = {
		if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_dorne
			}
			destroy_title = title:e_dorne
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_dorne = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_iron_islands
			}
			destroy_title = title:e_the_iron_islands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_iron_islands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_north
			}
			destroy_title = title:e_the_north
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_north = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_reach
			}
			destroy_title = title:e_the_reach
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_reach = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_riverlands
			}
			destroy_title = title:e_the_riverlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_riverlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_stormlands
			}
			destroy_title = title:e_the_stormlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_stormlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_vale
			}
			destroy_title = title:e_the_vale
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_vale = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_the_westerlands
			}
			destroy_title = title:e_the_westerlands
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_westerlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
		else_if = {
			limit = {
				root ?= title:e_the_iron_throne.holder
				scope:title = title:e_blackwater_bay
			}
			destroy_title = title:e_blackwater_bay
			add_legitimacy = 75
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:k_the_crownlands = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			every_vassal = {
				remove_opinion = {
					target = title:e_the_iron_throne.holder
					modifier = destroyed_title
				}
			}
		}
	}
}

agot_on_title_gain_crownlands_inheritance = {
	trigger = {
		scope:title = { this = title:e_the_iron_throne }
		exists = scope:previous_holder
		OR = {
			scope:previous_holder = {
				OR = {
					has_title = title:k_the_crownlands
					has_title = title:d_kings_landing
					has_title = title:c_kings_landing
				}
			}
			AND = {
				scope:previous_holder.dynasty = dynasty:dynn_Targaryen
				root.dynasty = dynasty:dynn_Targaryen
				scope:previous_holder = {
					OR = {
						has_title = title:k_the_crownlands
						has_title = title:d_kings_landing
						has_title = title:c_kings_landing
						has_title = title:k_dragonstone
						has_title = title:d_dragonstone
						has_title = title:c_dragonstone
					}
				}
			}
		}
	}
	effect = {
		if = {
			limit = {
				scope:previous_holder = {
					OR = {
						has_title = title:k_the_crownlands
						has_title = title:d_kings_landing
						has_title = title:c_kings_landing
					}
				}
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:k_the_crownlands } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:k_the_crownlands = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:d_kings_landing } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:d_kings_landing = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:c_kings_landing } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:c_kings_landing = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = {
				scope:previous_holder.dynasty = dynasty:dynn_Targaryen
				root.dynasty = dynasty:dynn_Targaryen
				scope:previous_holder = {
					OR = {
						has_title = title:k_dragonstone
						has_title = title:d_dragonstone
						has_title = title:c_dragonstone
					}
				}
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:k_dragonstone } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:k_dragonstone = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:d_dragonstone } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:d_dragonstone = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = { scope:previous_holder = { has_title = title:c_dragonstone } }
				create_title_and_vassal_change = {
					type = faction_demand
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:c_dragonstone = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
	}
}

agot_secret_child_on_title_gain = {
	trigger = {
		exists = scope:previous_holder
		NOT = { root.house = scope:previous_holder.house }
		scope:title.tier > tier_county
		scope:previous_holder = {
			any_close_family_member = {
				agot_secret_character_eligible = yes
				house = scope:previous_holder.house
				mother ?= { NOT = { is_alive = yes } }
				father ?= { NOT = { is_alive = yes } }
			}
		}
	}
	effect = {
		if = {
			limit = {
				scope:previous_holder.house = {
					NOT = { any_house_member = { is_playable_character = yes } }
				}
			}
			scope:previous_holder = {
				random_close_family_member = {
					limit = {
						agot_secret_character_eligible = yes
						house = scope:previous_holder.house
						mother ?= { NOT = { is_alive = yes } }
						father ?= { NOT = { is_alive = yes } }
					}
					add_character_flag = from_title_gain
					agot_start_secret_identity_effect = yes
				}
			}
		}
	}
}

agot_on_rank_up = {
	effect = {
		#Court Language
		if = {
			limit = {
				has_dlc_feature = royal_court
				culture = culture:high_valyrian
				capital_county.title_province ?= {
					geographical_region = world_westeros
				}
				scope:title.tier < tier_kingdom
				primary_title.tier > tier_duchy
			}
			set_court_language = language_common
			if = {
				limit = { NOT = { knows_court_language_of = this } }
				learn_court_language_of = this
			}
		}
	}
}