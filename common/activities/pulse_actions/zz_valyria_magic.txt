## gain trait xp pulses 
zz_valyria_find_valyrian_secrets = {
	icon = "zz_valyria_find_valyrian_secrets" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_valyrian_secrets
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_valyrian_secrets
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_blood_magic = {
	icon = "zz_valyria_find_secrets_of_blood_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_blood_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_blood_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_shadow_magic = {
	icon = "zz_valyria_find_secrets_of_shadow_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_shadow_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_shadow_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = shadow_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}
zz_valyria_find_secrets_of_dream_magic = {
	icon = "zz_valyria_find_secrets_of_dream_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_dream_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_dream_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = dream_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}


zz_valyria_find_secrets_of_alchemical_magic = {
	icon = "zz_valyria_find_secrets_of_alchemical_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_alchemical_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_alchemical_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = alchemical_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_fire_magic = {
	icon = "zz_valyria_find_secrets_of_fire_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_fire_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_fire_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = fire_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_air_magic = {
	icon = "zz_valyria_find_secrets_of_air_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_air_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_air_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = air_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_water_magic = {
	icon = "zz_valyria_find_secrets_of_water_magic" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_water_magic
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 10
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_water_magic
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = water_magic
				}
				if = {
					limit = {
						this = scope:host
					}
					custom_tooltip = adult_education_tt_positive_tiny
					scope:activity = { activity_special_type_progression_tiny = yes }
				}
			}
		}
	}
}

##Valyrian Secrets unlocks 

zz_valyria_find_secret_of_dragon_training = {
	icon = "zz_valyria_find_secret_of_dragon_training" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_valyrian_secrets
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = dragon_training
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 5
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secret_of_dragon_training
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = dragon_training
				}
			}
		}
	}
}

## Blood Magic Unlocks 

zz_valyria_find_healing_spell = {
	icon = "zz_valyria_find_healing_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_blood_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = healing_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_healing_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = healing_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_genetic_manipulation_spell = {
	icon = "zz_valyria_find_genetic_manipulation_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_blood_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = genetic_manipulation_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_genetic_manipulation_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = genetic_manipulation_spell_flag
				}
			}
		}
	}
}

## Dream Magic Unlock

zz_valyria_find_mental_domination_spell = {
	icon = "zz_valyria_find_mental_domination_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_charm_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = mental_domination_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_mental_domination_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = mental_domination_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_dreaming_within_spell = {
	icon = "zz_valyria_find_dreaming_within_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_charm_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = dreaming_within_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_dreaming_within_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = dreaming_within_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_secrets_of_dreams_spell = {
	icon = "zz_valyria_find_secrets_of_dreams_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_charm_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = secrets_of_dreams_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_secrets_of_dreams_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = secrets_of_dreams_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_dreams_of_experience_spell = {
	icon = "zz_valyria_find_secrets_of_dreams_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_charm_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = dreams_of_experience_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_dreams_of_experience_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = dreams_of_experience_spell_flag
				}
			}
		}
	}
}

## Alchemical Magic Unlocks 

zz_valyria_find_empowerment_of_arms_spell = {
	icon = "zz_valyria_find_empowerment_of_arms_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_alchemical_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = empowerment_of_arms_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_empowerment_of_arms_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = empowerment_of_arms_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_building_speed_spell = {
	icon = "zz_valyria_find_building_speed_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_alchemical_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = building_speed_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_building_speed_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = building_speed_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_development_speed_spell = {
	icon = "zz_valyria_find_development_speed_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_alchemical_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = development_boost_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_development_speed_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = development_boost_spell_flag
				}
			}
		}
	}
}

zz_valyria_find_transmutation_spell = {
	icon = "zz_valyria_find_transmutation_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
			
		}
		scope:host = { 
			has_activity_intent = study_alchemical_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = transmutation_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_transmutation_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = transmutation_spell_flag
				}
			}
		}
	}
}



## Fire Magic Unlocks

zz_valyria_find_flame_strike_spell = {
	icon = "zz_valyria_find_flame_strike_spell" # Uses key name as default

	### Scopes for all the script
	# root = the activity
	# scope:activity = the activity
	# scope:host = host of the activity
	# scope:province = location of the activity's current phase

	# Can this action be picked on the pulse
	is_valid = {
		scope:province = {
		}
		scope:host = { 
			has_activity_intent = study_fire_magic
			NOT = { 
				zz_valyria_knows_spell = {
					SPELL = flame_strike_spell_flag
				}
			}
		}
		scope:activity = {
			
		}
	}

	# Relative weight of this action being against all others
	weight = {
		value = 1
	}

	# Effect run when this action is picked
	# If you save a scope as scope:first or scope:second then they can be displayed in the activity
	# window notification about this pulse action. Currently characters, titles, and artifacts are shown.
	effect = {
		scope:host = { 
			save_scope_as = first
		}
		add_activity_log_entry = {
			key = found_flame_strike_spell
			tags = { pulse_action }
			character = scope:first
			scope:first = {
				zz_add_spell  = {
					SPELL = flame_strike_spell_flag
				}
			}
		}
	}
}