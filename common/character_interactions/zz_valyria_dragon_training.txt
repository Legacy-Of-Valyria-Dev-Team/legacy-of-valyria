zz_valyria_dragon_training_action = {
	is_shown = {
		scope:actor = {
			has_character_flag = dragon_training
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
		}
		scope:recipient = {
			exists = var:current_dragon
			OR = {
				has_trait = lifestyle_blademaster
				has_trait = lifestyle_reveler
				has_trait = lifestyle_hunter	
				has_trait = lifestyle_mystic
				has_trait = lifestyle_physician
				has_trait = lifestyle_herbalist
				has_trait = lifestyle_gardener 
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	category = interaction_secrets_of_valyria

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 30 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_interface_message = {
				type = event_generic_neutral
				title = magic_healing
				desc = magic_healing_text
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				if = {
					limit = {
						NOT = {
							scope:actor = scope:recipient
						}
					}
					stress_impact = {
						compassionate = medium_stress_impact_loss
						sadistic = minor_stress_gain
						callous = minor_stress_gain
					}
				}
			}
		}
		scope:recipient = {
			if = { 
				limit = { 
					scope:mage_blademaster_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_blademaster
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.4
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_hunter_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_hunter
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.6
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_mystic_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_mystic
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.8
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_physician_dragon_trainer = yes 
				}
				scope:recipient = {
					if =  {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_physician
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.10
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_herbalist_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_herbalist
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.12
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_gardener_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_gardener
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.14
						}
					}
				}
			}
			else_if = { 
				limit = { 
					scope:mage_reveler_dragon_trainer = yes 
				}
				scope:recipient = {
					if = {
						limit = {
							exists = var:current_dragon
							has_trait = lifestyle_reveler
						}
						trigger_event = { 
							id =  zz_agot_filler_dragon.2
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}
	}
	send_options_exclusive = yes

	send_option = {
		flag = mage_blademaster_dragon_trainer
		localization = mage_blademaster_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_blademaster
			}
		}	
	}
	send_option = {
		flag = mage_hunter_dragon_trainer
		localization = mage_hunter_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_hunter
			}
		}	
	}
	send_option = {
		flag = mage_mystic_dragon_trainer
		localization = mage_mystic_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_mystic
			}
		}	
	}
	send_option = {
		flag = mage_physician_dragon_trainer
		localization = mage_physician_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_physician
			}
		}	
	}
	send_option = {
		flag = mage_herbalist_dragon_trainer
		localization = mage_herbalist_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_herbalist
			}
		}	
	}
	send_option = {
		flag = mage_gardener_dragon_trainer
		localization = mage_gardener_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_gardener
			}
		}	
	}
	send_option = {
		flag = mage_reveler_dragon_trainer
		localization = mage_reveler_dragon_trainer
		is_shown = {
			scope:recipient = {
				exists = var:current_dragon
				has_trait = lifestyle_reveler
			}
		}	
	}

	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 100
	}
}

zz_valyria_blackstone_roads = {
	redirect = {
		scope:actor = {
			if = {
				limit = {
					zz_valyria_valid_caster = {
						MANACOST = 0
						SPELL = valyria_blackstone_roads_flag
					}
				}
				save_scope_as = secondary_actor
			}
		}
	}
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = valyria_blackstone_roads_flag
				MANACOST = 0
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = valyria_blackstone_roads_flag
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = valyria_blackstone_roads_flag
				MANACOST = 0
			}
		}
	}

	target_type = title
	target_filter = recipient_domain_titles
	icon = alchemical_magic
	common_interaction = no
	interface_priority = 10
	category = interaction_secrets_of_valyria

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 180 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	cost = { 
		gold = 250
	}
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_barony
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
			}
			zz_valyria_construct_black_stone_roads = yes
		}
		
	}
	auto_accept = yes
}
zz_valyria_blackstone_walls = {
	redirect = {
		scope:actor = {
			if = {
				limit = {
					zz_valyria_valid_caster = {
						MANACOST = 0
						SPELL = valyria_blackstone_walls_flag
					}
				}
				save_scope_as = secondary_actor
			}
		}
	}
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = valyria_blackstone_walls_flag
				MANACOST = 0
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = valyria_blackstone_walls_flag
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = valyria_blackstone_walls_flag
				MANACOST = 0
			}
		}
	}

	target_type = title
	target_filter = recipient_domain_titles
	icon = alchemical_magic
	common_interaction = no
	interface_priority = 10
	category = interaction_secrets_of_valyria

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 180 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	cost = { 
		gold = 250
	}
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_barony
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
			}
			zz_valyria_construct_black_stone_walls  = yes
		}
		
	}
	auto_accept = yes
}