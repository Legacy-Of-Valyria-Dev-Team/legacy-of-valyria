## Teach Magic Decision 
valyria_magic_teach_decision = {
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_mage_list_can_teach = yes
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_is_mage_can_teach = yes 
			is_imprisoned = no
			is_ai = no
		}
		scope:recipient = {
			NOT = { 
				has_trait = zz_magister
				has_trait = dragon
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_is_mage_can_teach = yes 
		}
	}
	cost = {
		piety = massive_piety_value
		gold = massive_gold_max_value
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 1999
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { years = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:secondary_actor = {
			add_character_flag = { flag = zz_valyria_magic_taught_magic months = 9 } 
		}
		scope:actor = {
			scope:recipient = {
				add_trait_force_tooltip = zz_magister
				zz_random_gain_magic_spell = yes
			}
			
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}
valyria_magic_teach_spell = {
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_mage_list = yes
		}
	}
	is_shown = {
		scope:actor = {
			is_imprisoned = no
		}
		scope:recipient = {
			has_trait = zz_magister
			NOT = { 
				has_trait = dragon
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			has_trait = zz_magister
			
		}	
	}
	cost = {
		piety = minor_piety_value
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 20000
	category = interaction_magic_friendly
	
	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_01_mysteries_of_restoration = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
				}
			}
		}
		else_if = {
			limit = {
				scope:blood_magic_restore_maa = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_04_mysteries_of_renewal = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_05_mysteries_of_replication = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enchancement = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
				}
			}
		}

		else_if = {
			limit = {
				scope:shadow_magic_speed = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
				}
			}
		}
		else_if = {
			limit = {
				scope:shadow_magic_dagger = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
				}
			}
		}
		else_if = {
			limit = {
				scope:shadow_magic_shield = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
				}
			}
		}
		else_if = {
			limit = {
				scope:shadow_magic_cloak = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
				}
			}
		}
		else_if = {
			limit = {
				scope:dream_magic_dream_within = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
				}
			}
		}
		else_if = {
			limit = {
				scope:dream_magic_dream_secrets = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
				}
			}
		}
		else_if = {
			limit = {
				scope:dream_magic_dream_experience = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
				}
			}
		}
		else_if = {
			limit = {
				scope:dream_magic_dream_mental_domination = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
				}
			}
		}
		else_if = {
			limit = {
				scope:alchemy_magic_arms = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
				}
			}
		}
		else_if = {
			limit = {
				scope:alchemy_magic_building = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
				}
			}
		}
		else_if = {
			limit = {
				scope:alchemy_magic_development = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
				}
			}
		}
		else_if = {
			limit = {
				scope:alchemy_magic_transmutation = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
				}
			}
		}
		else_if = {
			limit = {
				scope:fire_magic_strike = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
				}
			}
		}
		else_if = {
			limit = {
				scope:fire_magic_blast = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
				}
			}
		}
		else_if = {
			limit = {
				scope:fire_magic_storm = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
				}
			}
		}
		else_if = {
			limit = {
				scope:water_magic_crushing = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
				}
			}
		}
		else_if = {
			limit = {
				scope:water_magic_mother_rhoyne = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_water_magic_03_mysteries_of_endurance = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
				}
			}
		}
		else_if = {
			limit = {
				scope:teach_zz_valyria_magic_water_magic_04_mysteries_of_rhoyne = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
				}
			}
		}
		else_if = {
			limit = {
				scope:air_magic_slicing_winds = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
				}
			}
		}
		else_if = {
			limit = {
				scope:air_magic_tempestuous = yes
			}
			scope:recipient = {
				zz_add_spell = { 
					SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
				}
			}
		}
	}
	auto_accept = yes
	send_options_exclusive = no 
	send_option = {
		flag = zz_valyria_magic_teach_magic_01_blood_magic
		localization = zz_valyria_magic_teach_magic_01_blood_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no 
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_02_shadow_magic
		localization = zz_valyria_magic_teach_magic_02_shadow_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_03_dream_magic
		localization = zz_valyria_magic_teach_magic_03_dream_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_04_alchemy_magic
		localization = zz_valyria_magic_teach_magic_04_alchemy_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_05_fire_magic
		localization = zz_valyria_magic_teach_magic_05_fire_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_06_water_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_06_water_magic
		localization = zz_valyria_magic_teach_magic_06_water_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no
			scope:zz_valyria_magic_teach_magic_07_air_magic = no  
		}			
	}
	send_option = {
		flag = zz_valyria_magic_teach_magic_07_air_magic
		localization = zz_valyria_magic_teach_magic_07_air_magic

		can_be_changed = { 
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no
			scope:zz_valyria_magic_teach_magic_06_water_magic = no  
		}
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = no 
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = no 
			scope:zz_valyria_magic_teach_magic_03_dream_magic = no
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = no 
			scope:zz_valyria_magic_teach_magic_05_fire_magic = no
			scope:zz_valyria_magic_teach_magic_06_water_magic = no  
		}			
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_01_mysteries_of_restoration
		localization = teach_zz_valyria_magic_blood_magic_01_mysteries_of_restoration
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
		localization = teach_zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
					}
				}
			}
		}	
	}
	send_option = {
		flag = blood_magic_restore_maa
		localization = blood_magic_restore_maa
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_04_mysteries_of_renewal
		localization = teach_zz_valyria_magic_blood_magic_04_mysteries_of_renewal
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_05_mysteries_of_replication
		localization = teach_zz_valyria_magic_blood_magic_05_mysteries_of_replication
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
		localization = teach_zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
		localization = teach_zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
		localization = teach_zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enchancement
		localization = teach_zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enchancement
		is_shown = {
			scope:zz_valyria_magic_teach_magic_01_blood_magic = yes
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
					}
				}
			}
		}	
	}
	
	send_option = {
		flag = shadow_magic_speed
		localization = shadow_magic_speed
		is_shown = {
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = yes 
			scope:secondary_actor ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
					}
				}
			}
		}	
	}
	send_option = {
		flag = shadow_magic_dagger
		localization = shadow_magic_speed
		is_shown = {
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
					}
				}
			}
		}	
	}
	send_option = {
		flag = shadow_magic_shield
		localization = shadow_magic_shield
		is_shown = {
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
					}
				}
			}
		}	
	}
	send_option = {
		flag = shadow_magic_cloak
		localization = shadow_magic_cloak
		is_shown = {
			scope:zz_valyria_magic_teach_magic_02_shadow_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
					}
				}
			}
		}	
	}
	send_option = {
		flag = dream_magic_dream_within
		localization = dream_magic_dream_within
		is_shown = {
			scope:zz_valyria_magic_teach_magic_03_dream_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
					}
				}
			}
		}	
	}
	send_option = {
		flag = dream_magic_dream_secrets
		localization = dream_magic_dream_secrets
		is_shown = {
			scope:zz_valyria_magic_teach_magic_03_dream_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
					}
				}
			}
		}	
	}
	send_option = {
		flag = dream_magic_dream_experience
		localization = dream_magic_dream_experience
		is_shown = {
			scope:zz_valyria_magic_teach_magic_03_dream_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
					}
				}
			}
		}	
	}
	send_option = {
		flag = dream_magic_dream_mental_domination
		localization = dream_magic_dream_mental_domination
		is_shown = {
			scope:zz_valyria_magic_teach_magic_03_dream_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
					}
				}
			}
		}	
	}
	send_option = {
		flag = alchemy_magic_arms
		localization = alchemy_magic_arms
		is_shown = {
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
					}
				}
			}
		}	
	}
	send_option = {
		flag = alchemy_magic_building
		localization = alchemy_magic_building
		is_shown = {
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
					}
				}
			}
		}	
	}
	send_option = {
		flag = alchemy_magic_development
		localization = alchemy_magic_development
		is_shown = {
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
					}
				}
			}
		}	
	}
	send_option = {
		flag = alchemy_magic_transmutation
		localization = alchemy_magic_transmutation
		is_shown = {
			scope:zz_valyria_magic_teach_magic_04_alchemy_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
					}
				}
			}
		}	
	}
	send_option = {
		flag = fire_magic_strike
		localization = fire_magic_strike
		is_shown = {
			scope:zz_valyria_magic_teach_magic_05_fire_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
					}
				}
			}
		}	
	}
	send_option = {
		flag = fire_magic_blast
		localization = fire_magic_blast
		is_shown = {
			scope:zz_valyria_magic_teach_magic_05_fire_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
					}
				}
			}
		}	
	}
	send_option = {
		flag = fire_magic_storm
		localization = fire_magic_storm
		is_shown = {
			scope:zz_valyria_magic_teach_magic_05_fire_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
					}
				}
			}
		}	
	}
	send_option = {
		flag = water_magic_crushing
		localization = water_magic_crushing
		is_shown = {
			scope:zz_valyria_magic_teach_magic_06_water_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
					}
				}
			}
		}	
	}
	send_option = {
		flag = water_magic_mother_rhoyne
		localization = water_magic_mother_rhoyne
		is_shown = {
			scope:zz_valyria_magic_teach_magic_06_water_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_water_magic_03_mysteries_of_endurance
		localization = teach_zz_valyria_magic_water_magic_03_mysteries_of_endurance
		is_shown = {
			scope:zz_valyria_magic_teach_magic_06_water_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
					}
				}
			}
		}	
	}
	send_option = {
		flag = teach_zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
		localization = teach_zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
		is_shown = {
			scope:zz_valyria_magic_teach_magic_06_water_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
					}
				}
			}
		}	
	}
	send_option = {
		flag = air_magic_slicing_winds
		localization = air_magic_slicing_winds
		is_shown = {
			scope:zz_valyria_magic_teach_magic_07_air_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
					}
				}
			}
		}	
	}
	send_option = {
		flag = air_magic_tempestuous
		localization = air_magic_tempestuous
		is_shown = {
			scope:zz_valyria_magic_teach_magic_07_air_magic = yes 
			scope:secondary_actor  ?= {
				zz_valyria_knows_spell  = {
					SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
				}
			}
			scope:recipient ?= {
				NOT = { 
					zz_valyria_knows_spell  = {
						SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
					}
				}
			}
		}	
	}

	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}

valyria_magic_self_wounding = {
	is_shown = {
		scope:recipient = {
			zz_valyria_is_mage = yes 
			is_imprisoned = no
			NOT = { 
				has_trait = dragon
			}
		}
		scope:actor = {
			is_ai = no
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient  = {
			zz_valyria_is_mage = yes 
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 5000
	category = interaction_magic_hostile
	
	cooldown_against_recipient = { days = 30 } 
	cooldown = { years = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			scope:recipient = {
				random = {
					chance = 50
					increase_wounds_effect = { REASON = blood_magic }
				}				
				if = {
					limit = {
						OR = {
							agot_is_dragonblood_character = yes
							agot_has_dragonblood_heritage = yes 
						}
					}
					zz_valyria_mana_gain = {
						MANAGAIN = 3
					}
				}
				else ={
					zz_valyria_mana_gain = {
						MANAGAIN = 1
					}
				}

			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}

valyria_magic_use_artifact = {
	is_shown = {
		scope:recipient = {
			is_imprisoned = no
			is_ai = no
			always = no
			NOT = { 
				has_trait = dragon
			}
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient  = {
			zz_valyria_has_artifact  = yes
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 10
	category = interaction_secrets_of_valyria

	cooldown_against_recipient = { days = 90 } 
	cooldown = { years = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			scope:recipient = {
				increase_wounds_effect = { REASON = blood_magic }
				if = {
					limit = {
						OR = {
							agot_is_dragonblood_character = yes
							agot_has_dragonblood_heritage = yes 
						}
					}
					zz_valyria_mana_gain = {
						MANAGAIN = 3
					}
				}
				else ={
					zz_valyria_mana_gain = {
						MANAGAIN = 1
					}
				}

			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}

## Blood Sacrifice
valyria_designate_blood_magic_sacrifice_interaction = {
	icon = icon_scheme_abduct
	interface_priority = 1000
	category = interaction_magic_hostile
	desc = designate_gruesome_festivals_sacrifice_interaction_desc

	is_shown = {
		scope:actor = {
			zz_valyria_is_mage = yes 
		}
		scope:recipient = {
			is_imprisoned_by = scope:actor
			NOT = { has_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier }
			NOT = { 
				has_trait = dragon
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_is_mage = yes 
		}
	}

	on_accept = {
		scope:actor = {
			hidden_effect = {
				every_prisoner = {
					limit = { has_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier }
					save_scope_value_as = {
						name = removal_type
						value = flag:override
					}
					designate_gruesome_festivals_sacrifice_modifier_removed_effect = { DESIGNATOR = scope:actor }
				}
			}
		}
		scope:recipient = {
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = designate_gruesome_festivals_sacrifice_interaction.recipient.notification.t
				left_icon = scope:actor
				designate_gruesome_festivals_sacrifice_interaction_effect = yes
				custom_tooltip = designate_gruesome_festivals_sacrifice_interaction.recipient.notification.tt
			}
		}

		# If we're a clan this interaction affects unity
		add_clan_unity_interaction_effect = {
			CHARACTER = scope:actor
			TARGET = scope:recipient
			VALUE = medium_unity_loss
			DESC = clan_unity_human_sacrifice.desc
			REVERSE_NON_HOUSE_TARGET = no
		}
	}

	auto_accept = yes
}


valyria_remove_designated_blood_magic_sacrifice_interaction = {
	icon = icon_scheme_abduct
	interface_priority = 1000
	category = interaction_magic_friendly
	desc = remove_designated_gruesome_festivals_sacrifice_interaction_desc

	is_shown = {
		scope:actor = { zz_valyria_is_mage = yes  }
		scope:recipient = { has_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier }
	}

	is_valid_showing_failures_only = {
	}

	on_accept = {
		scope:recipient = {
			save_scope_value_as = {
				name = removal_type
				value = flag:manual
			}
			designate_gruesome_festivals_sacrifice_modifier_removed_effect ={ DESIGNATOR = scope:actor }
		}

		# If we're a clan this interaction affects unity
		add_clan_unity_interaction_effect = {
			CHARACTER = scope:actor
			TARGET = scope:recipient
			VALUE = medium_unity_gain
			DESC = clan_unity_human_sacrifice_removal.desc
			REVERSE_NON_HOUSE_TARGET = no
		}
	}

	auto_accept = yes
}
## Blood Magic

zz_valyria_magic_blood_magic_01_mysteries_of_restoration_interaction = {

	desc = zz_valyria_magic_blood_magic_01_mysteries_of_restoration_interaction_desc
	secondary_scopes_optional = no
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
			}
			is_imprisoned = no
		}
		scope:recipient = {
			NOT = { has_trait = dragon }
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
				MANACOST = 1
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 999
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_01_mysteries_of_restoration
			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}

zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification_interaction = {

	desc = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification_interaction_desc

	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
				MANACOST = 3
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
				MANACOST = 3
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 998
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user

			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 3
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification
			}
		}
	}
	send_options_exclusive = yes
	send_option = {
		flag = add_trait_intellect_good_3
		localization = add_trait_intellect_good_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = intellect_good_3 }
			}
		}	
	}
	send_option = {
		flag = add_trait_physique_good_3
		localization = add_trait_physique_good_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = physique_good_3}
			}
		}	
	}
	send_option = {
		flag = add_trait_beauty_good_3
		localization = add_trait_beauty_good_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = beauty_good_3}
			}
		}	
	}
	send_option = {
		flag = remove_trait_infertile
		localization = remove_trait_infertile
		is_shown = {
			scope:recipient = {
				has_trait = infertile
			}
		}	
	}
	send_option = {
		flag = add_trait_intellect_bad_3
		localization = add_trait_intellect_bad_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = intellect_bad_3 }
			}
		}	
	}
	send_option = {
		flag = add_trait_physique_bad_3
		localization = add_trait_physique_bad_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = physique_bad_3}
			}
		}	
	}
	send_option = {
		flag = add_trait_beauty_bad_3
		localization = add_trait_beauty_bad_3
		is_shown = {
			scope:recipient = {
				NOT = { has_trait = beauty_bad_3}
			}
		}	
	}
	send_option = {
		flag = add_trait_infertile
		localization = add_trait_infertile
		is_shown = {
			scope:recipient = {
				NOT = {
					has_trait = infertile
				}
				
			}
		}	
	}
	
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_blood_magic_03_mysteries_of_regeneration_interaction = {
	
	desc = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
				MANACOST = 1
			}
		}
	}

	target_type = men_at_arms
	target_filter = recipient_maa
	icon = blood_magic
	common_interaction = no
	interface_priority = 997
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_regiment = { 
		scope:target = { 
			maa_current_troops_count < maa_max_troops_count
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = regiment
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration
			}
		}
	}
	auto_accept = yes
}

zz_valyria_magic_blood_magic_04_mysteries_of_renewal_interaction = {

	desc = zz_valyria_magic_blood_magic_04_mysteries_of_renewal_interaction_desc

	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
				MANACOST = 1
			}
		}
		scope:recipient = { 
			is_commanding_army = yes 
		}
	}

	icon = blood_magic
	common_interaction = no
	interface_priority = 996
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_blood_magic_04_mysteries_of_renewal
			}
		}
	}
	auto_accept = yes
}

zz_valyria_magic_blood_magic_05_mysteries_of_replication_interaction = {

	desc = zz_valyria_magic_blood_magic_05_mysteries_of_replication_interaction_desc 

	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_05_mysteries_of_replication
				MANACOST = 90
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_05_mysteries_of_replication
				MANACOST = 90
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 995
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	target_type = artifact
	target_filter = actor_artifacts
	
	can_be_picked_artifact = {
		scope:target = {
			has_variable = dragon_egg
		}
	}
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 90
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_05_mysteries_of_replication
			}
		}
	}
	send_options_exclusive = yes
	
	send_option = {
		flag = zz_valyria_magic_blood_magic_05_option_01
		localization = zz_valyria_magic_blood_magic_05_mysteries_of_replication_option_clone
		is_shown = {
		}	
	}
	send_option = {
		flag = zz_valyria_magic_blood_magic_05_option_02
		localization = zz_valyria_magic_blood_magic_05_mysteries_of_replication_option_clone_child
		is_shown = {
		}	
	}
	send_option = {
		flag = zz_valyria_magic_blood_magic_05_option_03
		localization = zz_valyria_magic_blood_magic_05_mysteries_of_replication_option_clone_gender_bend
		is_shown = {
		}	
	}
	
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation_interaction = {

	desc = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
				MANACOST = 90
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
				MANACOST = 90
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 994
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	target_type = artifact
	target_filter = recipient_artifacts
	
	can_be_picked_artifact = {
		scope:target = {
			has_variable = dud_egg 
		}
	}
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 90
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation
			}
		}
	}


	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood_interaction = {
	
	desc = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
			}
			is_imprisoned = no
		}
		scope:recipient = {
			NOT = { has_trait = dragon }
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
				MANACOST = 1
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 993
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood
			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}
zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_interaction = {
	
	desc = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
				MANACOST = 90
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
			}
			is_imprisoned = no
		}
		scope:recipient = {
			has_trait = dragon 
			is_female = yes
			NOT = { 
				has_character_flag = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_effect_flag
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
				MANACOST = 90
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 992
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 90
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}
zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_interaction = {
	
	desc = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
				MANACOST = 35
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
			}
			is_imprisoned = no
		}
		scope:recipient = {
			has_trait = dragon 
			NOT = { 
				has_character_flag = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_flag
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying
				MANACOST = 35
			}
		}
	}
	icon = blood_magic
	common_interaction = no
	interface_priority = 992
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 35
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0

	}
}


## Shadow Magic 
zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds_interaction = {
	
	desc = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
				MANACOST = 1
			}
		}
		scope:recipient = { 
			is_commanding_army = yes 
		}
	}

	icon = shadow_magic
	common_interaction = no
	interface_priority = 201
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = shadow_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds
			}
		}
	}
	auto_accept = yes
	send_options_exclusive = yes

	send_option = {
		flag = shadow_speed_blessing
		localization = shadow_speed_blessing
	}
	send_option = {
		flag = shadow_speed_curse
		localization = shadow_speed_curse
	}
}
zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers_interaction = {
	
	desc = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
				MANACOST = 1
			}
		}
	}

	icon = shadow_magic
	common_interaction = no
	interface_priority = 202
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = shadow_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers
			}
		}
	}
	auto_accept = yes
	send_options_exclusive = yes

	send_option = {
		flag = shadow_dagger_blessing
		localization = shadow_dagger_blessing
	}
	send_option = {
		flag = shadow_dagger_curse
		localization = shadow_dagger_curse
	}
}
zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield_interaction = {
	
	desc = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
				MANACOST = 1
			}
		}
		
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
				MANACOST = 1
			}
		}
	}

	icon = shadow_magic
	common_interaction = no
	interface_priority = 203
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = shadow_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield
			}
		}
	}
	auto_accept = yes
	send_options_exclusive = yes

	send_option = {
		flag = shadow_shield_blessing
		localization = shadow_shield_blessing
	}
	send_option = {
		flag = shadow_shield_curse
		localization = shadow_shield_curse
	}
}
zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak_interaction = {
	
	desc = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
				MANACOST = 1
			}
		}
	}
	target_type = title
	target_filter = recipient_domain_titles
	icon = shadow_magic
	common_interaction = no
	interface_priority = 204
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = shadow_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak
			}
		}
	}
	auto_accept = yes
	send_options_exclusive = yes

	send_option = {
		flag = shadow_cloak_blessing
		localization = shadow_cloak_blessing
	}
	send_option = {
		flag = shadow_cloak_curse
		localization = shadow_cloak_curse
	}
}

## Dream Magic

zz_valyria_magic_dream_magic_01_mysteries_mental_domination_interaction = {
	
	desc = zz_valyria_magic_dream_magic_01_mysteries_mental_domination_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
				MANACOST = 10
			}
		}
	}

	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
				MANACOST = 10
			}
		}
	}
	icon = dream_magic
	common_interaction = no
	interface_priority = 301
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 10
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = dream_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_dream_magic_01_mysteries_mental_domination
			}
		}
	}
	send_options_exclusive = no
	send_option = {
		is_shown = {
			scope:secondary_actor = {
				has_trait_xp = {
					trait = zz_magister
					track = dream_magic 
					value >= 50
				}
			}
		}
		flag = magic_domination_faith
		localization = zz_valyria_dreams_domination
	}

	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}


zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies_interaction = {
	
	desc = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
				MANACOST = 10
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
				MANACOST = 10
			}
		}
	}
	icon = dream_magic
	common_interaction = no
	interface_priority = 302
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 10
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = dream_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies
			}
		}
	}
	send_options_exclusive = yes

	send_option = {
		flag = blademaster_magic
		localization = blademaster_magic
	}
	send_option = {
		flag = mystic_magic
		localization = mystic_magic
	}
	send_option = {
		flag = reveler_magic 
		localization = reveler_magic 
	}
	send_option = {
		flag = hunter_magic
		localization = hunter_magic
	}
	send_option = {
		flag = physician_magic
		localization = physician_magic
	}
	send_option = {
		flag = herbalist_magic
		localization = herbalist_magic
	}
	send_option = {
		flag = gardener_magic
		localization = gardener_magic
	}
	send_option = {
		flag = education_learning
		localization = education_learning
	}
	send_option = {
		flag = education_stewardship
		localization = education_stewardship
	}
	send_option = {
		flag = education_diplomacy
		localization = education_diplomacy
	}
	send_option = {
		flag = education_intrigue
		localization = education_intrigue
	}
	send_option = {
		flag = education_martial
		localization = education_martial
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_dream_magic_03_mysteries_of_dreams_interaction = {
	
	desc = zz_valyria_magic_dream_magic_03_mysteries_of_dreams_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
				MANACOST = 10
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
				MANACOST = 10
			}
		}
	}
	icon = dream_magic
	common_interaction = no
	interface_priority = 303
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 10
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = dream_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_dream_magic_03_mysteries_of_dreams
			}
		}
	}
	send_options_exclusive = yes
	send_option = {
		flag = experience_learning
		localization = experience_learning
	}
    send_option = {
		flag = experience_diplomacy
		localization = experience_diplomacy
	}
    send_option = {
		flag = experience_stewardship
		localization = experience_stewardship
	}
    send_option = {
		flag = experience_intrigue
		localization = experience_intrigue
	}
    send_option = {
		flag = experience_martial
		localization = experience_martial
	}
	send_option = {
		flag = experience_prowess
		localization = experience_prowess
		is_shown = {
			always = no 
		}
	}
	send_option = {
		flag = experience_leadership
		localization = experience_leadership
		is_shown = {
			always = no 
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_dream_magic_04_mysteries_of_secrets_interaction = {
	
	desc = zz_valyria_magic_dream_magic_04_mysteries_of_secrets_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
				MANACOST = 1
			}
		}
	}
	icon = dream_magic
	common_interaction = no
	interface_priority = 304
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = dream_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
			}	
		}
	}
	send_options_exclusive = no

	send_option = {
		flag = scrying
		localization = scrying
		is_shown = {
			scope:secondary_actor =  {
				has_character_flag = zz_valyria_magic_dream_magic_04_mysteries_of_secrets
			}
		}			
	}		
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_interaction = {
	
	desc = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
				MANACOST = 10
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
				MANACOST = 10
			}
		}
	}
	icon = dream_magic
	common_interaction = no
	interface_priority = 305
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 10
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = dream_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion
			}	
		}
	}
	send_options_exclusive = no
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01

		can_be_changed = { 
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = no 
		}
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = no 
		}			
	}	
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = no 
		}			
		can_be_changed = { 
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = no 
		}
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_01
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_01
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}		
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_02
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_02
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02= yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_03
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_03
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}		
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_04
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_04
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_05
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_05
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_06
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_06
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_07
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_07
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_08
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_08
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_09
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_09
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_10
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_10
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_11
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_11
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_12
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_12
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_13
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_13
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_14
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_14
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_15
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_15
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_16
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_16
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}

	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_17
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_17
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}

	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_18
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_18
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_19
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_19
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}		
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_20
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_20
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_21
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_21
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_22
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_22
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_23
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_23
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_24
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_24
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_25
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_25
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_26
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_26
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_27
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_27
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_28
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_28
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_29
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_29
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_30
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_30
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_31
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_31
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_32
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_32
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_33
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_33
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_34
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_34
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_35
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_35
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_36
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_36
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {
			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_37
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_37
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_38
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_38
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_02 = yes
			scope:recipient  =  {

			}
		}			
	}
	send_option = {
		flag = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_39
		localization = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_39
		is_shown = {
			scope:zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion_option_select_01 = yes
			scope:recipient  =  {

			}
		}			
	}

	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}




## Alchemical Magic 

zz_valyria_magic_alchemy_magic_01_mysteries_of_growth_interaction = {
	
	desc = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
				MANACOST = 1
			}
		}
	}

	target_type = title
	target_filter = recipient_domain_titles
	icon = alchemy_magic
	common_interaction = no
	interface_priority = 401
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth
			}	
		}
	}
	auto_accept = yes
}

zz_valyria_magic_alchemy_magic_02_mysteries_of_construction_interaction = {
	
	desc = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
				MANACOST = 1
			}
		}
	}
	target_type = title
	target_filter = recipient_domain_titles
	icon = alchemy_magic
	common_interaction = no
	interface_priority = 402
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction
			}	
		}
	}
	auto_accept = yes
}

zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation_interaction = {
	
	desc = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
				MANACOST = 1
			}
		}
	}
	icon = alchemy_magic
	common_interaction = no
	interface_priority = 403
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation
			}	
		}
	}
	send_options_exclusive = yes
	
	send_option = {
		flag = transmutation
		localization = transmutation
		is_shown = {
		}		
	}
	send_option = {
		flag = piety
		localization = piety
		is_shown = {
		}
	}
	send_option = {
		flag = dynasty_prestige
		localization = dynasty_prestige
		is_shown = {
		}
	}
	send_option = {
		flag = prestige
		localization = prestige
		is_shown = {
		}
	}



	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_alchemy_magic_04_mysteries_of_arms_interaction = {
	
	desc = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
				MANACOST = 50
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
				MANACOST = 50
			}
		}
	}
	icon = alchemy_magic
	common_interaction = no
	interface_priority = 404
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 50
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms
			}	
		}
	}
	send_options_exclusive = yes	
	send_option = {
		flag = knights_add
		localization = knights_add
	}
    send_option = {
		flag = knights_bonus
		localization = knights_bonus
	}
	send_option = {
		flag = maa_bonus
		localization = maa_bonus
	}
	send_option = {
		flag = maa_size_bonus
		localization = maa_size_bonus
	}
	send_option = {
		flag = title_maa_bonus
		localization = title_maa_bonus
	}
	send_option = {
		flag = title_maa_size_bonus
		localization = title_maa_size_bonus
	}
	
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_interaction = {
	
	desc = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
				MANACOST = 50
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
				MANACOST = 50
			}
		}
	}
	icon = alchemy_magic
	common_interaction = no
	interface_priority = 404
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 50
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = alchemy_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification
			}	
		}
	}
	send_options_exclusive = yes	
	send_option = {
		flag = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_option_1
		localization = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_option_1
	}
    send_option = {
		flag = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_option_2
		localization = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification_option_2
	}

	
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 0
	}
}

## Fire Magic

zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame_interaction = {
	
	desc = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
				MANACOST = 2
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
				MANACOST = 2
			}
		}
	}
	icon = fire_magic
	common_interaction = no
	interface_priority = 501
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 2
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = fire_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame
			}	
		}	
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_ai = yes
				NOR = {
				}
			}
			scope:secondary_actor = {
				is_in_army = no
			}
		}
		is_valid = {

		}
		flag = weaken_spell_flag
		localization = flame_strike_01
	}
	send_option = {
		is_shown = {
			scope:weaken_spell_flag = yes
			OR = {
				scope:secondary_actor = scope:actor.location.county_controller
			}
			scope:secondary_actor.location = scope:recipient.location
			scope:recipient = {
				is_ai = yes
				NOR = {
					is_imprisoned = yes
				}
			}
		}
		flag = flame_strike_imprison_flag
		localization = flame_strike_02
	}

	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	ai_targets = {
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}
	ai_frequency = 24
	send_options_exclusive = no
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = -50
			scope:actor = {
				has_trait = craven
			}
		}
		modifier = {
			add = -100
			scope:actor = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				NOR = {
					has_trait = excommunicated
				}
			}
		}
	}
}

zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame_interaction = {
	
	desc = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
				MANACOST = 3
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
				MANACOST = 3
			}
		}
		scope:recipient = { 
			is_commanding_army = yes 
		}
	}

	icon = fire_magic
	common_interaction = no
	interface_priority = 502
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 3
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = fire_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame
			}	
		}
	}
	auto_accept = yes
}


## Fire Magic add army damage bonus
zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire_interaction = {
	
	desc = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
				MANACOST = 15
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
				MANACOST = 15
			}
		}
	}

	icon = fire_magic
	common_interaction = no
	interface_priority = 503
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 15
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = fire_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire
			}	
		}
	}
	auto_accept = yes
}


## Wind Magic 
zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind_interaction = {
	
	desc = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
				MANACOST = 2
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
				MANACOST = 2
			}
		}
	}
	icon = air_magic 
	common_interaction = no
	interface_priority = 601
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 2
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = fire_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind
			}	
		}	
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_ai = yes
				NOR = {
				}
			}
			scope:secondary_actor = {
				is_in_army = no
			}
		}
		is_valid = {

		}
		flag = weaken_spell_flag
		localization = flame_strike_01
	}
	send_option = {
		is_shown = {
			scope:weaken_spell_flag = yes
			OR = {
				scope:secondary_actor = scope:actor.location.county_controller
			}
			scope:secondary_actor.location = scope:recipient.location
			scope:recipient = {
				is_ai = yes
				NOR = {
					is_imprisoned = yes
				}
			}
		}
		flag = power_strike_imprison_flag
		localization = flame_strike_02
	}

	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	ai_targets = {
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}
	ai_frequency = 24
	send_options_exclusive = no
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = -50
			scope:actor = {
				has_trait = craven
			}
		}
		modifier = {
			add = -100
			scope:actor = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				NOR = {
					has_trait = excommunicated
				}
			}
		}
	}
}
zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds_interaction = {
	
	desc = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
				MANACOST = 3
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
				MANACOST = 3
			}
		}
	}

	target_type = men_at_arms
	target_filter = recipient_maa
	icon = air_magic
	common_interaction = no
	interface_priority = 602
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_regiment = { 
		
	}
	on_accept = {
		scope:target = {
			save_scope_as = regiment
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 3
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = wind_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds
			}	
		}
	}
	auto_accept = yes
}
## Add Army Toughness bonus

## Add Province Vaccum Ruin Spell at character location. 
### Water Magic 
zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters_interaction = {
	
	desc = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
				MANACOST = 2
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
			}
			is_imprisoned = no
		}
		
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
				MANACOST = 2
			}
		}
	}
	icon = water_magic
	common_interaction = no
	interface_priority = 701
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 2
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = water_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters
			}	
		}	
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_ai = yes
				NOR = {
				}
			}
			scope:secondary_actor = {
				is_in_army = no
			}
		}
		is_valid = {

		}
		flag = weaken_spell_flag
		localization = flame_strike_01
	}
	send_option = {
		is_shown = {
			scope:weaken_spell_flag = yes
			OR = {
				scope:secondary_actor = scope:actor.location.county_controller
			}
			scope:secondary_actor.location = scope:recipient.location
			scope:recipient = {
				is_ai = yes
				NOR = {
					is_imprisoned = yes
				}
			}
		}
		flag = power_strike_imprison_flag
		localization = flame_strike_02
	}

	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	ai_targets = {
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}
	ai_frequency = 24
	send_options_exclusive = no
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = -50
			scope:actor = {
				has_trait = craven
			}
		}
		modifier = {
			add = -100
			scope:actor = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				NOR = {
					has_trait = excommunicated
				}
			}
		}
	}
}
zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent_interaction = {
	
	desc = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
				MANACOST = 4
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
				MANACOST = 4
			}
		}
		scope:recipient = { 
			is_commanding_army = yes 
		}
	}

	icon = water_magic
	common_interaction = no
	interface_priority = 702
	category = interaction_magic_hostile

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 4
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = water_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent
			}	
		}
	}
	auto_accept = yes
}
## add Army supply regeneration 

zz_valyria_magic_water_magic_03_mysteries_of_endurance_interaction = {
	
	desc = zz_valyria_magic_water_magic_03_mysteries_of_endurance_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_water_magic_03_mysteries_of_endurance
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_water_magic_03_mysteries_of_endurance
				MANACOST = 1
			}
		}
		scope:recipient = { 
			is_commanding_army = yes 
		}
	}

	icon = blood_magic
	common_interaction = no
	interface_priority = 703
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = blood_magic
				}
			}
			scope:recipient = {
				commanding_army = {
					
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_water_magic_03_mysteries_of_endurance
			}
		}
	}
	auto_accept = yes
}

## Add a Plague Outbreak in location spell

zz_valyria_magic_water_magic_04_mysteries_of_rhoyne_interaction = {
	
	desc = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne_interaction_desc
	
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
				MANACOST = 100
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
			}
			is_imprisoned = no
		}
		scope:recipient = {NOT = { has_trait = dragon }}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
				MANACOST = 100
			}
		}
	}

	icon = water_magic
	common_interaction = no
	interface_priority = 704
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes

	on_accept = {
		
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1
					XPTRACK = blood_magic
				}
			}
			zz_valyria_magic_cast_effect = { 
				SPELL  = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne
			}
		}
	}
	auto_accept = yes
}