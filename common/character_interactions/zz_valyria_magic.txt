zz_valyria_magic_healing = {
	redirect = {
		scope:actor = {
			if = {
				limit = {
					zz_valyria_valid_caster = {
						MANACOST = 1
						SPELL = healing_spell_flag
					}
				}
				save_scope_as = secondary_actor
			}
		}
	}
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = healing_spell_flag
			}
			is_imprisoned = no
		}
		scope:recipient = {
			OR = {
				has_trait = ill
				has_trait = pneumonic
				has_trait = great_pox
				has_trait = early_great_pox
				has_trait = lovers_pox
				has_trait = leper
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
				has_trait = maimed
				has_trait = infirm
				has_trait = incapable
				has_trait = gout_ridden
				has_trait = consumption
				has_trait = cancer
				has_trait = typhus
				has_trait = bubonic_plague
				has_trait = smallpox
				has_trait = sickly
				has_trait = blind
				has_trait = disfigured
				has_character_modifier = chronic_headaches_modifier
				has_character_modifier = infected_wound_modifier
				has_character_modifier = gangrene_modifier
				has_trait = measles
				has_trait = dysentery
				has_trait = ergotism
				has_trait = scarred
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
					MANASPEND = -1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
			}
			send_interface_message = {
				type = event_generic_neutral
				title = magic_healing
				desc = magic_healing_text
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				if = {
					limit = {
						NOT = {
							scope:actor = scope:recipient
						}
					}
					stress_impact = {
						compassionate = medium_stress_impact_loss
						sadistic = minor_stress_gain
						callous = minor_stress_gain
					}
				}
			}
		}
		scope:recipient = {		
			zz_heal_effect = yes

			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}
	}
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 100
		modifier = {
			add = -100
			scope:actor = {
				has_trait = demon
			}
		}
	}
}


valyria_magic_development_boost = {
	redirect = {
		scope:actor = {
			if = {
				limit = {
					zz_valyria_valid_caster = {
						MANACOST = 1
						SPELL = healing_spell_flag
					}
				}
				save_scope_as = secondary_actor
			}
		}
	}
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = healing_spell_flag
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}

	target_type = title
	target_filter = recipient_domain_titles
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
					MANASPEND = -1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
			}
		}
		scope:target.title_province = {
			county = {
				if = {
					limit = {
						scope:secondary_actor  = {
							any_character_artifact = {
								has_variable = catalyst
							}
						}
					}
					add_county_modifier = {
						modifier = province_buff_spell_development_modifier
						years = 20
					}
				}
				else = {
					add_county_modifier = {
						modifier = province_buff_spell_development_modifier
						years = 10
					}
				}
				
			}
		}
	}
	auto_accept = yes
}

valyria_magic_build_speed_boost = {
	redirect = {
		scope:actor = {
			if = {
				limit = {
					zz_valyria_valid_caster = {
						MANACOST = 1
						SPELL = healing_spell_flag
					}
				}
				save_scope_as = secondary_actor
			}
		}
	}
	populate_actor_list = {
		scope:actor = { 
			zz_valyria_populate_spell_caster_list = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}
	is_shown = {
		scope:actor = {
			zz_valyria_knows_spell_court = { 
				SPELL = healing_spell_flag
			}
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			zz_valyria_valid_caster_court = {
				SPELL  = healing_spell_flag
				MANACOST = 1
			}
		}
	}
	target_type = title
	target_filter = recipient_domain_titles
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_magic_friendly

	cooldown_against_recipient = { days = 0 } 
	cooldown = { days = 0 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			scope:secondary_actor = {
				zz_valyria_mana_spend = {
					MANACOST = 1
					MANASPEND = -1
				} 
				zz_valyria_gain_spell_experience = {
					XPGAIN = 1 
					XPTRACK = secrets_of_the_higher_mysteries
				}
			}
		}
		scope:target.title_province = {
			county = {
				if = {
					limit = {
						scope:secondary_actor = {
							any_character_artifact = {
								has_variable = catalyst
							}
						}
					}
					add_county_modifier = {
						modifier = province_buff_spell_build_speed_modifier
						years = 20
					}
				}
				else = {
					add_county_modifier = {
						modifier = province_buff_spell_build_speed_modifier
						years = 10
					}
				}
				
			}
		}
	}
	auto_accept = yes
}