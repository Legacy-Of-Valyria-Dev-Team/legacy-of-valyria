# Form New Valyria
agot_EE_form_new_valyria_effect = {
	if = {
		limit = { has_dlc_feature = legends }
		create_legend_seed = {
			type = legitimizing
			quality = illustrious
			chronicle = new_title
			properties = {
				title = title:e_new_valyria
				founder = root
			}
		}
	}

	hidden_effect = {
		every_held_title = { #Should shift all dejure of all Empires owned at the time.
			limit = { tier = tier_empire }
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_new_valyria
				
			}
		}
		every_held_title = { #Completely Controlled Kingdoms as well.
			limit = {
				tier = tier_kingdom
				root = { completely_controls = prev }
			}
			set_de_jure_liege_title = title:e_new_valyria
		}
	}
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:e_new_valyria = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	hidden_effect = { set_primary_title_to = title:e_new_valyria }
	every_held_title = { #Should destroy all other Empires owned at the time.
		limit = {
			tier = tier_empire
			NOT = { this = title:e_new_valyria }
		}
		root = { destroy_title = prev }
	}
	#hidden_effect = {
	#	add_character_flag = flag_restorer_of_rome #used for Eulogy.
	#	title:e_roman_empire = {
	#		set_variable = rome_was_restored_by_byzantium
	#	}
	#}
}

agot_EE_form_ghiscar_effect = {
	if = {
		limit = { has_dlc_feature = legends }
		create_legend_seed = {
			type = legitimizing
			quality = illustrious
			chronicle = new_title
			properties = {
				title = title:e_ghiscar
				founder = root
			}
		}
	}

	hidden_effect = {
		every_held_title = { #Should shift all dejure of all Empires owned at the time.
			limit = { tier = tier_empire }
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_ghiscar
				
			}
		}
		every_held_title = { #Completely Controlled Kingdoms as well.
			limit = {
				tier = tier_kingdom
				root = { completely_controls = prev }
			}
			set_de_jure_liege_title = title:e_ghiscar
		}
	}
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:e_ghiscar = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	hidden_effect = { set_primary_title_to = title:e_ghiscar }
	every_held_title = { #Should destroy all other Empires owned at the time.
		limit = {
			tier = tier_empire
			NOT = { this = title:e_ghiscar }
		}
		root = { destroy_title = prev }
	}
	#hidden_effect = {
	#	add_character_flag = flag_restorer_of_rome #used for Eulogy.
	#	title:e_roman_empire = {
	#		set_variable = rome_was_restored_by_byzantium
	#	}
	#}
}

agot_EE_form_rhoyne_effect = {
	if = {
		limit = { has_dlc_feature = legends }
		create_legend_seed = {
			type = legitimizing
			quality = illustrious
			chronicle = new_title
			properties = {
				title = title:e_rhoyne
				founder = root
			}
		}
	}

	hidden_effect = {
		every_held_title = { #Should shift all dejure of all Empires owned at the time.
			limit = { tier = tier_empire }
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_rhoyne
				
			}
		}
		every_held_title = { #Completely Controlled Kingdoms as well.
			limit = {
				tier = tier_kingdom
				root = { completely_controls = prev }
			}
			set_de_jure_liege_title = title:e_rhoyne
		}
	}
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:e_rhoyne = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	hidden_effect = { set_primary_title_to = title:e_rhoyne }
	every_held_title = { #Should destroy all other Empires owned at the time.
		limit = {
			tier = tier_empire
			NOT = { this = title:e_rhoyne }
		}
		root = { destroy_title = prev }
	}
	#hidden_effect = {
	#	add_character_flag = flag_restorer_of_rome #used for Eulogy.
	#	title:e_roman_empire = {
	#		set_variable = rome_was_restored_by_byzantium
	#	}
	#}
}

agot_EE_form_north_valyria_effect = {
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_north_valyria = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	culture = {
		if = {
			limit = { has_cultural_tradition = agot_tradition_north_valyrian_1 }
			remove_culture_tradition = agot_tradition_north_valyrian_1
			#add_culture_tradition = agot_tradition_north_valyrian_2
		}
	}
	hidden_effect = { set_primary_title_to = title:k_north_valyria }
}
# Make it so the founder's culture, if Northern Valyrian, will get agot_tradition_north_valyrian_2, then the rest will just remove agot_tradition_north_valyrian_1
# This gives a sort of incentive and/or legacy reflected in the culture itself
agot_EE_form_old_valyria_effect = {
	if = {
		limit = { has_dlc_feature = legends }
		create_legend_seed = {
			type = legitimizing
			quality = illustrious
			chronicle = new_title
			properties = {
				title = title:e_old_valyria
				founder = root
			}
		}
	}
	hidden_effect = {
		every_held_title = { #Should shift all dejure of all Empires owned at the time.
			limit = { tier = tier_empire }
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_kingdom }
				set_de_jure_liege_title = title:e_old_valyria
			}
		}
		every_held_title = { #Completely Controlled Kingdoms as well.
			limit = {
				tier = tier_kingdom
				root = { completely_controls = prev }
			}
			set_de_jure_liege_title = title:e_old_valyria
		}
	}
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:e_old_valyria = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	hidden_effect = { set_primary_title_to = title:e_old_valyria }
	every_held_title = { #Should destroy all other Empires owned at the time.
		limit = {
			tier = tier_empire
			NOT = { this = title:e_old_valyria }
		}
		root = { destroy_title = prev }
	}

	# Only if the restorer is one of the Northern Valyrian cultures
	if = {
		limit = {
			OR = {
				culture = culture:mantaryan
				culture = culture:tolosi
				culture = culture:elyrian
			}
		}
		every_culture_global = {
			limit = { has_cultural_tradition = agot_tradition_north_valyrian_1 }
			remove_culture_tradition = agot_tradition_north_valyrian_1
		}
		culture = { add_culture_tradition = agot_tradition_north_valyrian_2 }
	}
	
	#hidden_effect = {
	#	add_character_flag = flag_restorer_of_rome #used for Eulogy.
	#	title:e_roman_empire = {
	#		set_variable = rome_was_restored_by_byzantium
	#	}
	#}
}

# Province window effects
reduce_slave_population_effect = {
	if = {
		limit = { has_county_modifier = slave_pop_8 }
		remove_county_modifier = slave_pop_8
		add_county_modifier = slave_pop_7
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_7 }
		remove_county_modifier = slave_pop_7
		add_county_modifier = slave_pop_6
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_6 }
		remove_county_modifier = slave_pop_6
		add_county_modifier = slave_pop_5
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_5 }
		remove_county_modifier = slave_pop_5
		add_county_modifier = slave_pop_4
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_4 }
		remove_county_modifier = slave_pop_4
		add_county_modifier = slave_pop_3
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_3 }
		remove_county_modifier = slave_pop_3
		add_county_modifier = slave_pop_2
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_2 }
		remove_county_modifier = slave_pop_2
		add_county_modifier = slave_pop_1
	}
	else_if = {
		limit = { has_county_modifier = slave_pop_1 }
		remove_county_modifier = slave_pop_1
	}
}