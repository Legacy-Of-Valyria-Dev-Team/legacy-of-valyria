agot_become_a_knight_effect = {
	$KNIGHT_TO_BE$ = {
		# Add knight leveled trait
		if = {
			limit = {
				has_trait = squire
			}
			add_trait_xp = {
				trait = squire
				track = knight
				value = 100
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_trait = squire
				}
			}
			add_trait = squire
			add_trait_xp = {
				trait = squire
				track = knight
				value = 100
			}
		}
		if = {
			limit = {
				has_character_flag = agot_knighthood_knightless_squire_flag
			}
			remove_character_flag = agot_knighthood_knightless_squire_flag
		}
		# Remove Relations Where Possible
		if = {
			limit = { has_relation_agot_knight = $KNIGHT_MAKER$ }
			$KNIGHT_MAKER$ = {
				if = {
					limit = {
						AND = {
							is_away_from_court = yes
							OR = {
								is_foreign_court_guest_of = $KNIGHT_TO_BE$
								AND = {
									exists = $KNIGHT_TO_BE$.host
									is_foreign_court_guest_of = $KNIGHT_TO_BE$.host
								}
								AND = {
									exists = $KNIGHT_TO_BE$.liege
									is_foreign_court_guest_of = $KNIGHT_TO_BE$.liege
								}
							}
						}
					}
					return_to_court = yes
				}
				remove_relation_agot_squire = $KNIGHT_TO_BE$
			}
		}
		# End the squire ongoing story
		if = {
			limit = {
				OR = {
					has_character_flag = had_ongoing_squire_story
					any_owned_story = {
						story_type = story_agot_squire_ongoing
					}
				}
			}
			random_owned_story = {
				limit = {
					story_type = story_agot_squire_ongoing
				}
				end_story = yes
			}
		}
		# Notify close family of your becoming of a knight
		save_scope_as = my_relation
		if = {
			limit = {
				any_close_family_member = {
					exists = yes
				}
			}
			every_close_family_member = {
				limit = {
					opinion = {
						target = scope:my_relation
						value >= 10 #Minimum of 10 opinion here. Can increase or decrease if too spammy.
					}
				}
				trigger_event = {
					id = agot_knighthood.0320
					days = 1
				}
			}
		}
		# Add Memories & Prestige & Piety & Opinion
		if = {
			limit = {
				has_character_flag = agot_bought_knighthood
			}
			add_prestige = 25
			create_character_memory = {
				type = agot_bought_knighthood
				participants = {
					purchaser = $KNIGHT_TO_BE$
				}
			}
		}
		else = {
			$KNIGHT_MAKER$ = {
				if = {
					limit = {
						$KNIGHT_TO_BE$ = {
							has_character_flag = agot_knighthood_as_tourney_prize
						}
					}
					create_character_memory = {
						type = agot_knighted_someone_as_tourney_prize
						participants = {
							squire = $KNIGHT_TO_BE$
						}
					}
				}
				else = {
					create_character_memory = {
						type = agot_knighted_someone
						participants = {
							squire = $KNIGHT_TO_BE$
						}
					}
				}
				if = {
					limit = {
						is_alive = yes # Stops RTE during death-bed knightings
					}
					add_opinion = {
						target = $KNIGHT_TO_BE$
						modifier = i_made_you_a_knight_opinion
						opinion = 25
					}
					if = {
						limit = {
							faith = { has_doctrine = tenet_knighthood }
						}
						add_piety = 25
					}
				}
			}
			if = {
				limit = {
					$KNIGHT_MAKER$ = {
						is_alive = yes
					}
				}
				add_opinion = {
					target = $KNIGHT_MAKER$
					modifier = knighted_me_opinion
					opinion = 50
				}
			}
			if = {
				limit = {
					has_character_flag = agot_knighthood_as_tourney_prize
				}
				create_character_memory = {
					type = agot_was_knighted_as_tourney_prize
					participants = {
						knight = $KNIGHT_MAKER$
					}
				}
			}
			else = {
				create_character_memory = {
					type = agot_was_knighted
					participants = {
						knight = $KNIGHT_MAKER$
					}
				}
			}
			# Add Prestige
			agot_add_become_a_knight_prestige_effect = {
				KNIGHT_MAKER = $KNIGHT_MAKER$
				KNIGHT_TO_BE = $KNIGHT_TO_BE$
			}
			if = {
				limit = {
					faith = {
						has_doctrine = tenet_knighthood
					}
				}
				add_piety = 75
			}
		}
		# Lowborns get Personal COA
		if = {
			limit = {
				is_lowborn = yes
			}
			hidden_effect = {
				random_list = {
					25 = {
						agot_create_personal_coa = yes
					}
					75 = {}
				}
			}
		}
		# SOTM
		if = {
			limit = {
				exists = dynasty
				dynasty = dynasty:dynn_Dayne
				NOT = { this = dynasty.dynast }
			}
			dynasty.dynast = {
				trigger_event = {
					id = agot_valyrian_steel.0001
					days = 1
				}
			}
		}
	}
}

agot_add_become_a_knight_prestige_effect = {
	add_prestige = {
		value = 50
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					exists = $KNIGHT_MAKER$.dynasty
					$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 3 } #Noteworthy
				}
			}
			add = 25
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					exists = $KNIGHT_MAKER$.dynasty
					OR = {
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 4 } #Reputatbable
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 5 } #Well-known
					}
				}
			}
			add = 50
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					exists = $KNIGHT_MAKER$.dynasty
					OR = {
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 6 } #Significant
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 7 } #Famous
					}
				}
			}
			add = 100
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					exists = $KNIGHT_MAKER$.dynasty
					OR = {
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 8 } #Glorious
						$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 9 } #Fabled
					}
				}
			}
			add = 150
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					exists = $KNIGHT_MAKER$.dynasty
					$KNIGHT_MAKER$.dynasty = { dynasty_prestige_level = 10 } #Legendary
				}
			}
			add = 175
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					prestige_level >= 4
				}
			}
			add = 100
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					has_court_position = zz_kingsguard_court_position
				}
			}
			add = 25
		}
		if = {
			limit = {
				$KNIGHT_MAKER$ = {
					has_court_position = zz_kingsguard_lord_commander_court_position
				}
			}
			add = 50
		}
		if = {
			limit = {
				$KNIGHT_TO_BE$ = {
					is_close_family_of = $KNIGHT_MAKER$
				}
			}
			add = -25 #AGOT REVIEW - Too harsh?
		}
		if = { #If they are an immediate heir to an EMPIRE tier realm
			limit = {
				$KNIGHT_TO_BE$ = {
					any_heir_title = {
						tier >= tier_empire
						place_in_line_of_succession = {
							target = prev
							value <= 3
						}
					}
				}
			}
			add = 30 #Prestigious to knight the immediate royal family
		}
		if = {
			limit = {
				$KNIGHT_TO_BE$ = {
					any_heir_title = {
						tier = tier_kingdom
						place_in_line_of_succession = {
							target = prev
							value <= 3
						}
					}
				}
			}
			add = 25 #Prestigious to knight the heirs of the lord paramounticies
		}
		if = {
			limit = {
				$KNIGHT_TO_BE$ = {
					is_landed = yes
					highest_held_title_tier > tier_barony
				}
			}
			add = 5 #Knighting a lord will be prestigious to the knight maker, but not very
		}
	}

}

agot_offer_squire_interaction_effect = {
	$KNIGHT$ = {
		set_relation_agot_squire = $SQUIRE$
		create_character_memory = {
			type = agot_got_squire
			participants = {
				squire = $SQUIRE$
			}
		}
	}
	$SQUIRE$ = {
		#Set relation and move character
		add_trait = squire
		$KNIGHT$ = {
			save_scope_as = my_knight
		}

		agot_init_squire_story_cycle_effect = yes

		create_character_memory = {
			type = agot_became_squire
			participants = {
				knight = $KNIGHT$
			}
		}

		if = {
			limit = {
				has_character_flag = agot_knighthood_knightless_squire_flag
			}
			remove_character_flag = agot_knighthood_knightless_squire_flag
		}

		agot_move_knight_for_education_or_squiring_purposes = {
			KNIGHT = $KNIGHT$
			SQUIRE = $SQUIRE$
		}

	}

	$KNIGHT$ = {
		add_opinion = {
			target = $SQUIRE$
			modifier = became_my_squire_opinion
			opinion = 25
		}
	}

	$SQUIRE$ = {
		add_opinion = {
			target = $KNIGHT$
			modifier = made_me_squire_opinion
			opinion = 25
		}
	}

	scope:actor = {
		if = {
			limit = {
				scope:hook = yes
				has_usable_hook = scope:recipient
			}
			use_hook = scope:recipient
		}

		stress_impact = {
			paranoid = minor_stress_impact_gain
		}
	}
}

agot_offer_knight_education_interaction_effect = {
	$KNIGHT$ = {
		set_relation_agot_squire = $SQUIRE$
		create_character_memory = {
			type = agot_got_squire
			participants = {
				squire = $SQUIRE$
			}
		}
	}
	$SQUIRE$ = {
		show_as_tooltip = { set_relation_agot_knight = $KNIGHT$ }
		add_trait = squire
		$KNIGHT$ = {
			save_scope_as = my_knight
		}

		agot_init_squire_story_cycle_effect = yes

		create_character_memory = {
			type = agot_became_squire
			participants = {
				knight = $KNIGHT$
			}
		}

		if = {
			limit = {
				has_character_flag = agot_knighthood_knightless_squire_flag
			}
			remove_character_flag = agot_knighthood_knightless_squire_flag
		}

		agot_move_knight_for_education_or_squiring_purposes = {
			KNIGHT = $KNIGHT$
			SQUIRE = $SQUIRE$
		}

	}

	scope:actor = {
		if = {
			limit = {
				scope:hook = yes
				has_usable_hook = scope:recipient
			}
			use_hook = scope:recipient
		}

		stress_impact = {
			paranoid = minor_stress_impact_gain
		}
	}
}

agot_set_squire_effect = {
	$KNIGHT$ = {
		set_relation_agot_squire = $SQUIRE$
		create_character_memory = {
			type = agot_got_squire
			participants = {
				squire = $SQUIRE$
			}
		}
	}
	$SQUIRE$ = {
		if = {
			limit = {
				NOT = {
					has_trait = squire
				}
			}
			add_trait = squire
		}
		save_scope_as = squire
		$KNIGHT$ = {
			save_scope_as = my_knight
		}

		agot_init_squire_story_cycle_effect = yes

		create_character_memory = {
			type = agot_became_squire
			participants = {
				knight = $KNIGHT$
			}
		}

		if = {
			limit = {
				has_character_flag = agot_knighthood_knightless_squire_flag
			}
			remove_character_flag = agot_knighthood_knightless_squire_flag
		}
	}
	agot_move_knight_for_education_or_squiring_purposes = {
		KNIGHT = $KNIGHT$
		SQUIRE = $SQUIRE$
	}
}

agot_strip_knighthood_as_punishment_effect = {
	$STRIPPER$ = {
		create_character_memory = {
			type = agot_stripped_knighthood
			participants = {
				knight = scope:recipient
			}
		}
	}
	$KNIGHT$ = {
		# Remove knight trait
		if = {
			limit = {
				has_trait = knight
			}
			remove_trait = knight
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = squire
					track = knight
					value >= 100
				}
			}
			remove_trait = squire
		}
		# Piety Penalty
		if = {
			limit = {
				faith = {
					has_doctrine = tenet_knighthood
				}
			}
			add_piety = major_piety_loss
		}
		# Remove Squire Relations
		if = {
			limit = {
				any_relation = {
					type = agot_squire
				}
			}
			every_relation = {
				type = agot_squire
				remove_relation_agot_knight = $KNIGHT$
				add_character_flag = agot_knighthood_was_removed_as_a_squire_flag
			}
		}
		add_prestige = major_prestige_loss
		create_character_memory = {
			type = agot_was_stripped_of_knighthood
			participants = {
				stripper = scope:actor
			}
		}
		add_character_flag = cannot_be_knighted
		add_opinion = {
			target = $STRIPPER$
			modifier = stripped_my_knighthood
			opinion = -50
		}
	}
}

agot_move_knight_for_education_or_squiring_purposes = {
	if = {
		limit = {
			$KNIGHT$ = {
				is_playable_character = yes
			}
			$SQUIRE$ = {
				is_playable_character = no
			}
			NOT = { # If they have a guardian they will not move
				$SQUIRE$ = {
						any_relation = {
							type = guardian
						}
					}
			}
			NOT = {
				$KNIGHT$ = $SQUIRE$.host
			}
		}
		visit_court_of = $KNIGHT$
	}
	else_if = {
		limit = {
			$KNIGHT$ = {
				is_playable_character = no
			}
			$SQUIRE$ = {
				is_playable_character = yes
			}
			NOT = {
				$KNIGHT$ = {
					has_trait = kingsguard
				}
			}
			NOT = {
				$SQUIRE$ = $KNIGHT$.host
			}
		}
		$KNIGHT$ = {
			visit_court_of = $SQUIRE$
		}
	}
	else_if = {
		limit = {
			$KNIGHT$ = {
				is_playable_character = no
			}
			$SQUIRE$ = {
				is_playable_character = no
				any_relation = {
					type = guardian
				}
			}
			NOT = {
				$KNIGHT$ = {
					has_trait = kingsguard
				}
			}
			NOT = {
				$KNIGHT$.host = $SQUIRE$.host
			}
		}
		$KNIGHT$ = {
			visit_court_of = $SQUIRE$.host
		}
	}
	else_if = {
		limit = {
			$KNIGHT$ = {
				is_playable_character = no
			}
			$SQUIRE$ = {
				is_playable_character = no
			}
			NOT = { # If they have a guardian they will not move
				$SQUIRE$ = {
						any_relation = {
							type = guardian
						}
					}
			}
			NOT = {
				$KNIGHT$.host = $SQUIRE$.host
			}
		}
		visit_court_of = $KNIGHT$.host
	}
}

agot_init_squire_story_cycle_effect = {
	if = {
		limit = {
			NOT = {
				has_character_flag = had_ongoing_squire_story
			}
		}
		create_story = story_agot_squire_ongoing
	}
	save_scope_as = squire
	send_interface_toast = {
		type = event_toast_effect_good
		title = agot_knighthood.became_a_squire_toast.t
		custom_tooltip = agot_knighthood.became_a_squire_toast.tt
		left_icon = scope:squire
		right_icon = scope:my_knight
	}
}

agot_tournament_reward_knighthood_prize = {
	$WINNER$ = {
		add_character_flag = agot_knighthood_as_tourney_prize
		agot_become_a_knight_effect = {
			KNIGHT_MAKER = $HOST$
			KNIGHT_TO_BE = $WINNER$
		}
	}
}

agot_add_squire_trait_xp_effect = {
	add_trait_xp = {
		trait = squire
		track = knight
		value = {
			value = 0
			add = {
				integer_range = { min = $MIN_VALUE$ max = $MAX_VALUE$ }
				if = {
					limit = {
						any_relation = {
							type = agot_knight
							has_perk = chivalric_dominance_perk
						}
					}
					add = { 5 10 }
				}
			}
		}
	}
}
	
agot_add_squire_trait_xp_skip_chiv_bonus_effect = {
    add_trait_xp = {
        trait = squire
        track = knight
        value = {
            value = 0
            add = {
                integer_range = { min = $MIN_VALUE$ max = $MAX_VALUE$ }
            }
        }
    }        
}

agot_knightless_squire_cleanup_timer_effect = {
	if = {
		limit = {
			is_ai = yes
		}
		trigger_event = {
			id = agot_knighthood_maintenance.0300
			months = 4
		}
	}
	else_if = {
		limit = {
			is_ai = no
		}
		trigger_event = {
			id = agot_knighthood_maintenance.0300
			years = 1
		}
	}
}