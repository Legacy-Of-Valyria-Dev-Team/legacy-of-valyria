zz_valyria_spell_failure_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = spell_failure
		desc = spell_failure_txt
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = spell_failure_txt
		scope:secondary_recipient  = {
			random_list = {
				50 = {
					increase_wounds_effect = { REASON = fire_magic }
				}
				25 = {
					add_trait_force_tooltip = scaly
				}
				25 = {
					modifier = {
						add = zz_spellcast_value
					}
				}
			}
		}
	}
}

zz_valyria_magic_duel_stress_effect = { 
	if = {
		limit = {
			has_trait = compassionate
			has_trait = wrathful
			has_trait = sadistic
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	else_if = {
		limit = {
			OR = {
				has_relation_rival = scope:recipient
				has_relation_nemesis = scope:recipient
			}
		}
		add_stress = major_stress_loss
		stress_impact = {
			forgiving = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
}


zz_vayria_magic_duel_contest_effect = {
	zz_valyria_magic_duel_stress_effect = yes 
	if = {
		limit = {
			scope:weaken_spell_flag = yes
		}
		scope:secondary_recipient = {
			duel = {
				skill = learning 
				target = scope:recipient
				75 = {
					modifier = {
						add = zz_fire_damage_scaling_value
					}
					add_dread = medium_dread_gain
					scope:recipient = {
						if = {
							limit = {
								scope:strike_imprison_flag = yes
							}
							increase_wounds_effect = { REASON = fire_magic }
							add_trait = burned
							add_trait_xp = {
								trait = burned
								value = { 5 200 }
							}
							add_stress = massive_stress_gain
							imprison_character_effect = {
								TARGET = scope:recipient
								IMPRISONER = scope:actor
							}
						}
						else = {
							show_as_tooltip = {
								add_trait = wounded_3
								add_stress = massive_stress_gain
							}
							scope:actor = {
								if = {
									limit = {
										NOR = {
											has_imprisonment_reason = scope:recipient
											has_banish_reason = scope:recipient
											has_execute_reason = scope:recipient
										}
									}
									add_tyranny = minor_tyranny_gain
								}
							}
							custom_tooltip = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame.tyranny
						}
					}
				}
				25 = {
					
				}
			}
		}
	}	
	if = {
		limit = {
			scope:weaken_spell_flag = no
		}
		scope:secondary_recipient = {
			duel = {
				skill = learning 
				target = scope:recipient
				75 = {
					modifier = {
						add = zz_fire_damage_scaling_value
					}
					scope:actor = { 
						add_dread = major_dread_gain
						if = {
							limit = {
								has_execute_reason = scope:recipient
							}
							custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
						}
						else = {
							add_tyranny = execution_tyranny_gain
							add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
							if = {
								limit = {
									NOT = {	has_trait = murderer	}
								}
								add_trait = murderer
							}
							hidden_effect = {
								if = {
									limit = {
										exists = scope:recipient.primary_heir
										scope:recipient.primary_heir = {
											any_close_family_member = {
												this = scope:recipient
											}
											NOR = {
												has_relation_rival = scope:actor
												has_relation_nemesis = scope:actor
												has_trait = craven
												has_trait = forgiving
											}
										}
									}
									set_relation_rival = scope:recipient.primary_heir
								}
								else_if = {
									limit = {
										scope:recipient.age<16
										exists = scope:recipient.father
										scope:recipient.father = {
											is_alive = yes
											is_landed = yes
											is_ruler = yes
											NOR = {
												has_relation_rival = scope:actor
												has_relation_nemesis = scope:actor
												has_trait = craven
												has_trait = forgiving
											}
										}
									}
									set_relation_rival = scope:recipient.father
								}
							}
						}
					}
					if  = { 
						limit = {
							scope:recipient = { 
								NOT = {
									is_at_war_with = scope:actor
								}	
							}
						}
						execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:secondary_recipient }
					}
					scope:recipient = {
						add_trait_xp = {
							trait = burned
							value = { 5 200 }
						}
						death = {
							death_reason = death_fire_magic
							killer = scope:secondary_recipient
						}
					}
				}
				25 = {

				}
			}
		}
	}	
}



zz_old_strike_effect = { 
	if = {
		limit = {
			has_trait = compassionate
			has_trait = wrathful
			has_trait = sadistic
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	else_if = {
		limit = {
			OR = {
				has_relation_rival = scope:recipient
				has_relation_nemesis = scope:recipient
			}
		}
		add_stress = major_stress_loss
		stress_impact = {
			forgiving = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
	}
	if = {
		limit = {
			scope:weaken_spell_flag = yes
		}
		add_dread = medium_dread_gain
		scope:recipient = {
			if = {
				limit = {
					scope:flame_strike_imprison_flag = yes
				}
				increase_wounds_effect = { REASON = fire_magic }
				add_trait = burned
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				add_stress = massive_stress_gain
				imprison_character_effect = {
					TARGET = scope:recipient
					IMPRISONER = scope:actor
				}
			}
			else = {
				show_as_tooltip = {
					add_trait = wounded_3
					add_stress = massive_stress_gain
				}
				scope:actor = {
					if = {
						limit = {
							NOR = {
								has_imprisonment_reason = scope:recipient
								has_banish_reason = scope:recipient
								has_execute_reason = scope:recipient
							}
						}
						add_tyranny = minor_tyranny_gain
					}
				}
				custom_tooltip = power_strike_spare_ct
			}
		}
	}
	else = {
		add_dread = major_dread_gain
		if = {
			limit = {
				scope:secondary_recipient = {
					is_in_army = yes
					exists = commanding_army
					commanding_army = {
						is_army_in_combat = yes
					}
				}
				scope:recipient = {
					is_in_army = yes
					OR = {
						AND = {
							exists = commanding_army
							commanding_army = {
								is_army_in_combat = yes
							}
							NOT = {
								commanding_army = scope:secondary_recipient.commanding_army
							}
							commanding_army.location = scope:secondary_recipient.commanding_army.location
						}
						AND = {
							exists = liege_or_court_owner
							liege_or_court_owner = {
								any_army = {
									is_army_in_combat = yes
									NOT = {
										THIS = scope:secondary_recipient.commanding_army
									}
									location = scope:secondary_recipient.commanding_army.location
								}
							}
						}
					}
				}
			}
			scope:secondary_recipient = {
				add_character_flag = mage_during_battle_flag
			}
		}
		else = {
			if = {
				limit = {
					has_execute_reason = scope:recipient
				}
				custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
			}
			else = {
				add_tyranny = execution_tyranny_gain
				add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
				if = {
					limit = {
						NOT = {	has_trait = murderer	}
					}
					add_trait = murderer
				}
				hidden_effect = {
					if = {
						limit = {
							exists = scope:recipient.primary_heir
							scope:recipient.primary_heir = {
								any_close_family_member = {
									this = scope:recipient
								}
								NOR = {
									has_relation_rival = scope:actor
									has_relation_nemesis = scope:actor
									has_relation_magic_minion  = scope:actor
									has_trait = craven
									has_trait = forgiving
								}
							}
						}
						set_relation_rival = scope:recipient.primary_heir
					}
					else_if = {
						limit = {
							scope:recipient.age<16
							exists = scope:recipient.father
							scope:recipient.father = {
								is_alive = yes
								is_landed = yes
								is_ruler = yes
								NOR = {
									has_relation_rival = scope:actor
									has_relation_nemesis = scope:actor
									has_relation_magic_minion = scope:actor
									has_trait = craven
									has_trait = forgiving
								}
							}
						}
						set_relation_rival = scope:recipient.father
					}
				}
			}
		}
	}				
	if = {
		limit = {
			scope:weaken_spell_flag = no
		}
		if = {
			limit = {
				scope:secondary_recipient = {
					has_character_flag = mage_during_battle_flag
				}
			}
			scope:recipient = {
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				death = {
					death_reason = death_battle
					killer = scope:secondary_recipient
				}
			}
			scope:secondary_recipient = {
				remove_character_flag = mage_during_battle_flag
			}
		}
		else = {
			execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:secondary_recipient }
			scope:recipient = {
				add_trait_xp = {
					trait = burned
					value = { 5 200 }
				}
				death = {
					death_reason = death_execution
					killer = scope:secondary_recipient
				}
			}
		}
	}	
}