

zz_valyria_magic_blood_magic_01_mysteries_of_restoration_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_01_mysteries_of_restoration.t
		desc = zz_valyria_magic_blood_magic_01_mysteries_of_restoration.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_01_mysteries_of_restoration.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			scope:actor = {
				stress_impact = {
					compassionate = medium_stress_impact_loss
					sadistic = minor_stress_gain
					callous = minor_stress_gain
				}
			}
		}
		scope:secondary_recipient = { 
			while = {
				count = zz_valyria_magic_blood_magic_01_mysteries_of_restoration_value 
				scope:recipient = { 
					if = { 
						limit = { 
							OR = { 
								has_character_modifier = chronic_headaches_modifier 
								has_character_modifier = infected_wound_modifier
								has_character_modifier = gangrene_modifier
							}
						}
						if = { limit = { has_character_modifier = chronic_headaches_modifier }
							remove_character_modifier = chronic_headaches_modifier
						}
						if = { limit = { has_character_modifier = infected_wound_modifier }
							remove_character_modifier = infected_wound_modifier
						}
						if = { limit = { has_character_modifier = gangrene_modifier }
							remove_character_modifier = gangrene_modifier
						}
					}
					else = { 
						switch = { 
							trigger = has_trait 
							burned = {
								remove_trait = burned
							}
							wounded_1 = {
								remove_trait = wounded_1
							}
							wounded_2 = {
								change_trait_rank = {
									trait = wounded
									rank = -1
									max = 1
								}
							}
							wounded_3 = {
								change_trait_rank = {
									trait = wounded
									rank = -1
									max = 1
								}
							}
							
							ill = { 
								remove_trait = ill
							}
							sickly = {
								remove_trait = sickly
							}
							disfigured = { 
								remove_trait = disfigured
							}
							inbred = {
								remove_trait = inbred
							}
							impotent = {
								remove_trait = impotent
							}
							scaly = { 
								remove_trait = scaly
							}
							spindly = { 
								remove_trait = spindly
							}
							bleeder = {
								remove_trait = bleeder
							}
							wheezing = {
								remove_trait = wheezing
							}
							infertile = {
								remove_trait = infertile
							}
							one_legged = {
								remove_trait = one_legged
							}
							one_eyed = {
								remove_trait = one_eyed
							}
							lunatic_genetic = {
								remove_trait = lunatic_genetic
							}
							lunatic_1 = {
								remove_trait = lunatic_1
							}
							pneumonic = {
								remove_trait = pneumonic
							}
							great_pox = {
								remove_trait = great_pox
							}
							early_great_pox = {
								remove_trait = early_great_pox
							}
							lovers_pox ={
								remove_trait = lovers_pox
							}
							leper ={
								remove_trait = leper
							}
							maimed = {
								remove_trait = maimed
							}
							infirm ={
								remove_trait = infirm
							}
							incapable = {
								remove_trait = incapable
							}
							gout_ridden = {
								remove_trait = gout_ridden
							}
							consumption = {
								remove_trait = consumption
							}
							cancer = {
								remove_trait = cancer
							}
							typhus = {
								remove_trait = typhus
							}
							bubonic_plague = {
								remove_trait = bubonic_plague
							}
							smallpox = {
								remove_trait = smallpox
							}
							blind = {
								remove_trait = blind
							}
							measles = {
								remove_trait = measles
							}
							dysentery = {
								remove_trait = dysentery
							}
							ergotism = {
								remove_trait = ergotism
							}
							scarred = {
								remove_trait = scarred
							}
						}
					}
				}
			}
		}
		scope:recipient = {		
			if = { 
				limit = {
					scope:secondary_recipient = { 
						has_trait = zz_magister
						has_trait_xp = {
							trait = zz_magister
							track = blood_magic 
							value >= 75
						}
					}
				}
				add_character_modifier = {
					modifier = zz_valyria_magic_fertility_boost_modifier 
					years = -1
				}
			}
			if = { 
				limit = {
					scope:secondary_recipient = { 
						has_trait = zz_magister
						has_trait_xp = {
							trait = zz_magister
							track = blood_magic 
							value >= 50
						}
					}
				}
				add_character_modifier = {
					modifier = zz_valyria_magic_disease_resistance_boost_modifier 
					years = 10
				}
			}
			if = { 
				limit = {
					scope:secondary_recipient = { 
						has_trait = zz_magister
						has_trait_xp = {
							trait = zz_magister
							track = blood_magic 
							value >= 25
						}
					}
				}
				add_character_modifier = {
					modifier = zz_valyria_magic_health_boost_modifier 
					years = 10
				}
			}
			
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}
	}	
}
zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification.t
		desc = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:secondary_recipient = {
			while = {
				count = zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification_value 
				if = {
					limit = {
						scope:add_trait_intellect_good_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = intellect_bad 
							}
							change_trait_rank = {
								trait = intellect_bad
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = intellect_good
									}
								}
								add_trait_force_tooltip = intellect_good_1
							}
							else = {
								change_trait_rank = {
									trait = intellect_good
									rank = 1
								}
							}
						}
					} 
				}			
				else_if = {
					limit = {
						scope:add_trait_physique_good_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = physique_bad 
							}
							change_trait_rank = {
								trait = physique_bad
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = physique_good
									}
								}
								add_trait_force_tooltip = physique_good_1
							}
							else = {
								change_trait_rank = {
									trait = physique_good
									rank = 1
								}
							}
						}
					}
				}			
				else_if = {
					limit = {
						scope:add_trait_beauty_good_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = beauty_bad 
							}
							change_trait_rank = {
								trait = beauty_bad
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = beauty_good
									}
								}
								add_trait_force_tooltip = beauty_good_1
							}
							else = {
								change_trait_rank = {
									trait = beauty_good
									rank = 1
								}
							}
						}
					}
				}			
				else_if = {
					limit = {
						scope:remove_trait_infertile = yes
					}
					scope:recipient = { 
						remove_trait = infertile
					} 		
				}		


				else_if = {
					limit = {
						scope:add_trait_intellect_bad_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = intellect_good 
							}
							change_trait_rank = {
								trait = intellect_good
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = intellect_bad
									}
								}
								add_trait_force_tooltip = intellect_bad_1
							}
							else = {
								change_trait_rank = {
									trait = intellect_good
									rank = 1
								}
							}
						}
					} 
				}			
				else_if = {
					limit = {
						scope:add_trait_physique_bad_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = physique_good
							}
							change_trait_rank = {
								trait = physique_good
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = physique_bad
									}
								}
								add_trait_force_tooltip = physique_bad_1
							}
							else = {
								change_trait_rank = {
									trait = physique_bad
									rank = 1
								}
							}
						}
					}
				}			
				else_if = {
					limit = {
						scope:add_trait_beauty_bad_3 = yes
					}
					scope:recipient = { 
						if = {
							limit = { 
								has_trait = beauty_good 
							}
							change_trait_rank = {
								trait = beauty_good
								rank = -1
							}
						}
						else = {
							if = {
								limit = {
									NOT = {
										has_trait = beauty_bad
									}
								}
								add_trait_force_tooltip = beauty_bad_1
							}
							else = {
								change_trait_rank = {
									trait = beauty_bad
									rank = 1
								}
							}
						}
					}
				}			
				else_if = {
					limit = {
						scope:add_trait_infertile = yes
					}
					scope:recipient = { 
						add_trait_force_tooltip  = infertile
					} 		
				}		
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}
	}
}
zz_valyria_magic_blood_magic_03_mysteries_of_regeneration_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration.t
		desc = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration.tt
		scope:target = {
			change_maa_troops_count = zz_valyria_magic_blood_magic_03_mysteries_of_regeneration_value 
		}
	}
}
zz_valyria_magic_blood_magic_04_mysteries_of_renewal_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_04_mysteries_of_renewal.t
		desc = zz_valyria_magic_blood_magic_04_mysteries_of_renewal.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_04_mysteries_of_renewal.tt
		scope:recipient = {
			commanding_army = { 
				every_army_maa_regiment = {
					change_maa_troops_count = zz_valyria_magic_blood_magic_04_mysteries_of_renewal_value 
				}
			}
		}
	}
}

zz_valyria_magic_blood_magic_05_mysteries_of_replication_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_05_mysteries_of_replication.t
		desc = zz_valyria_magic_blood_magic_05_mysteries_of_replication.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_05_mysteries_of_replication.tt
		random_list = { 
			50 = {
				modifier = { 
					add = zz_valyria_magic_blood_magic_05_mysteries_of_replication_value 
				}
				scope:recipient = {
					if = { 
						limit = {
							scope:zz_valyria_magic_blood_magic_05_option_01 = yes 
						}
						custom_tooltip = zz_valyria_make_clone
						destroy_artifact = scope:target 
						create_character = {
							age = scope:recipient.age
							gender = male
							gender_female_chance = {
								value = 0
								if = {
									limit = { scope:recipient = { is_female = yes } }
									add = 100
								}
							}
							template_character = scope:recipient
				
				
				
							location = scope:actor.location
				
							random_traits = no
				
							#faith = scope:recipient.faith
							#culture = scope:recipient.culture
							dynasty_house = scope:recipient.father.house
				
							save_scope_as = character_clone 
				
							after_creation = {
								copy_inheritable_appearance_from = scope:recipient
								copy_traits = scope:recipient
								change_first_name = { template_character = scope:recipient }
								set_father = scope:recipient.father
								set_mother = scope:recipient.mother
								remove_trait = dragonrider
								remove_trait = nightswatch
								remove_trait = pregnant
								remove_trait = infertile
							}
						}
					}
					else_if = { 
						limit = {
							scope:zz_valyria_magic_blood_magic_05_option_02 = yes 
						}
						destroy_artifact = scope:target 
						create_character = {
							age = 1
							gender = male
							gender_female_chance = {
								value = 0
								if = {
									limit = { scope:recipient = { is_female = yes } }
									add = 100
								}
							}
							template_character = scope:recipient
				
				
				
							location = scope:actor.location
				
							random_traits = no
				
							#faith = scope:recipient.faith
							#culture = scope:recipient.culture
							#dynasty_house = scope:recipient.father.house
				
							save_scope_as = character_clone 
				
							after_creation = {
								copy_inheritable_appearance_from = scope:recipient
								copy_traits = scope:recipient
								change_first_name = { template_character = scope:recipient }
								set_father = scope:recipient.father
								set_mother = scope:recipient.mother
								remove_trait = dragonrider
								remove_trait = nightswatch
								remove_trait = pregnant
								remove_trait = infertile
								
							}
						}
					}
					else_if = { 
						limit = {
							scope:zz_valyria_magic_blood_magic_05_option_03 = yes 
						}
						custom_tooltip = zz_valyria_make_clone
						destroy_artifact = scope:target 
						create_character = {
							age = scope:recipient.age
							gender = male
							opposite_gender = scope:recipient
							template_character = scope:recipient
				
				
				
							location = scope:actor.location
				
							random_traits = no
				
							#faith = scope:recipient.faith
							#culture = scope:recipient.culture
							dynasty_house = scope:recipient.father.house
				
							save_scope_as = character_clone 
				
							after_creation = {
								copy_inheritable_appearance_from = scope:recipient
								copy_traits = scope:recipient
								change_first_name = { template_character = scope:recipient }
								set_father = scope:recipient.father
								set_mother = scope:recipient.mother
								remove_trait = dragonrider
								remove_trait = nightswatch
								remove_trait = pregnant
								remove_trait = infertile
							}
						}
					}
				}  
			}
			50 = {

			}
		}
	}
}

zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation.t
		desc = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation.tt
		
		random_list = { 
			50 = {
				modifier = { 
					add = zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation_value 
				}
				scope:target = {
					if = {
						limit = { has_variable = cradled_egg }
						remove_variable = cradled_egg
					}
					if = {
						limit = { has_variable = cradled_egg_year }
						remove_variable = cradled_egg_year
					}
					remove_variable = dud_egg
					reforge_artifact = {
						type = dragon_egg
						modifier = dragon_egg_modifier
						decaying = no
					}
					agot_set_living_egg_description = yes
				}
			}
			50 = {
				
			}
		}

	}
}

zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood.t
		desc = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood.tt
		
		scope:recipient = {
			add_character_flag = { 
				flag = zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood_effect_flag
				years =  zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood_value
			}	
		}
	}
}

zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying.t
		desc = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying.tt
		random_list = {
			50 = {
				modifier = {
					add = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_value
				}
				scope:recipient = {
					add_character_flag = { flag = zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying_effect_flag years = 1 } 
					save_scope_as = dragon_parent
					set_variable = { name = clutches value = 0 }
					remove_character_flag = recently_laid_eggs
					#Tamed Dragon, rider family to employer
					if = {
						limit = {
							exists = var:current_rider
							exists = employer
							employer = {
								OR = {
									is_spouse_of = prev.var:current_rider
									is_close_family_of = prev.var:current_rider
									house ?= prev.var:current_rider.house
								}
							}
						}
						employer = { save_scope_as = egg_receiver }
					}	
					#Tamed Dragon, rider not family to employer
					else_if = {
						limit = {
							exists = var:current_rider
						}
						var:current_rider = { save_scope_as = egg_receiver }
					}
					#Owned Dragon
					else_if = {
						limit = {
							exists = employer
						}
						employer = { save_scope_as = egg_receiver }
					}
					#Fallback, something went wrong
					else = {
						change_variable = { name = clutches add = -1 }
						remove_character_flag = recently_laid_eggs
					}
		
					scope:egg_receiver ?= {
						random_list = {
							1 = {
								trigger = {
									NOT = { scope:dragon_parent = { has_trait = dragon_fertile } }
									agot_dragon_population_low = no
								}
								trigger_event = {
									id = agot_dragon_egg_lay.0001
									days = { 1 364 }
								}
							}
							9 = {
								trigger_event = {
									id = agot_dragon_egg_lay.0002
									days = { 1 364 }
								}
							}
						}
					}
				}
			}
			50 = {

			}
		}

	}
}

zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement.t
		desc = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement.tt
		
		scope:recipient = {
			add_character_flag = { flag = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_flag years = 5 } 
			set_variable = { 
				name = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement
				value = zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement_value 
				years = 5 
			}
		}
	}
}

zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood.t
		desc = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood.tt
		
		scope:recipient = {
			random_list = { 
				50 = { 
					modifier = { 
						add = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood_value
					}
					custom_description = {
						text = zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood_desc
						add_character_flag = { flag = historical_dragonseed } 
					}
					
				}
				50 = { 
					add_trait = scaly
					random_list = {
						1 = { add_trait = dwarf }
						1 = { add_trait = hunchbacked }
						1 = { add_trait = clubfooted }
						1 = { add_trait = infertile }
						1 = { add_trait = blind }
					}
				}
			}
		}
	}
}

## life
zz_valyria_magic_blood_magic_11_mysteries_of_longevity_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_11_mysteries_of_longevity.t
		desc = zz_valyria_magic_blood_magic_11_mysteries_of_longevity.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_11_mysteries_of_longevity.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:recipient = {
			zz_valyria_magic_apply_character_modifier_effect = { 
				MODIFIER = zz_valyria_magic_blood_magic_11_mysteries_of_longevity_modifer
				DURATION = -1
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}	
	}
}
#health
zz_valyria_magic_blood_magic_12_mysteries_of_vitality_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_12_mysteries_of_vitality.t
		desc = zz_valyria_magic_blood_magic_12_mysteries_of_vitality.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_12_mysteries_of_vitality.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:recipient = {
			zz_valyria_magic_blood_apply_character_modifier_effect = { 
				MODIFIER = zz_valyria_magic_blood_magic_12_mysteries_of_vitality_modifer
				DURATION = -1
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}	
	}
}
## epidemic
zz_valyria_magic_blood_magic_13_mysteries_of_resilience_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_13_mysteries_of_resilience.t
		desc = zz_valyria_magic_blood_magic_13_mysteries_of_resilience.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_13_mysteries_of_resilience.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:recipient = {
			zz_valyria_magic_blood_apply_character_modifier_effect = { 
				MODIFIER = zz_valyria_magic_blood_magic_13_mysteries_of_resilience_modifer
				DURATION = -1
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}	
	}
}
## health penalties
zz_valyria_magic_blood_magic_14_mysteries_of_fortitude_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude.t
		desc = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:recipient = {
			zz_valyria_magic_blood_apply_character_modifier_effect = { 
				MODIFIER = zz_valyria_magic_blood_magic_14_mysteries_of_fortitude_modifer
				DURATION = -1
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}	
	}
}

zz_valyria_magic_blood_magic_15_mysteries_of_fertility_effect = {
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_blood_magic_15_mysteries_of_fertility.t
		desc = zz_valyria_magic_blood_magic_15_mysteries_of_fertility.desc
		left_icon = scope:actor
		right_icon = scope:recipient
		custom_tooltip = zz_valyria_magic_blood_magic_15_mysteries_of_fertility.tt
		if = {
			limit = {
				NOT = {
					scope:actor = scope:recipient
				}
			}
			stress_impact = {
				compassionate = medium_stress_impact_loss
				sadistic = minor_stress_gain
				callous = minor_stress_gain
			}
		}
		scope:recipient = {
			zz_valyria_magic_blood_apply_character_modifier_effect = { 
				MODIFIER = zz_valyria_magic_blood_magic_15_mysteries_of_fertility_modifer
				DURATION = -1
			}
			if = {
				limit = {
					NOT = { scope:actor = scope:recipient }
				}
				add_opinion = {
					modifier = grateful_opinion
					target = scope:actor
					opinion = 70
				}
			}
		}	
	}
}