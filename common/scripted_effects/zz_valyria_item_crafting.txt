

agot_create_artifact_vs_mages_fyre_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = vs_mages_fyre_name
		visuals = vs_mages_fyre_visuals
		description = vs_mages_fyre_description
		type = sword
		wealth = scope:wealth
		quality = scope:quality
		creator = character:Setenon_01
		template = vs_mages_fyre_template
		history = {
			type = created_before_history
			date = 1649.1.1
		}
		modifier = vs_blackfyre_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact ?= {
		equip_artifact_to_owner_replace = yes
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking

		add_artifact_modifier = zz_valyria_magic_xp_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_xp_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_xp_gain_modifier_01_stacking
		add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		set_variable = {
			name = item_mana_gain
			value = 1.25
		}
		add_artifact_modifier = zz_valyria_higher_mysteries_xp_gain_modifier_01_stacking
		set_variable = {
			name = valyrian_steel
			value = yes
		}
		set_variable = {
			name = historical_unique_artifact
			value = yes
		}
		set_variable = {
			name = traditional_house_owner
			value = dynasty:dynn_Setenon.dynasty_founder.house
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = created
			DATE = 1649.1.1
			RECIPIENT = character:Setenon_01
		}
	}
}


zz_valyria_create_vs_sword_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	var:zz_sword_selection_sword = { 
		save_scope_as = zz_sword_selection_sword
	}
	set_artifact_rarity_illustrious = yes
	if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_01
		}
		create_artifact = {
			name = vs_valyrian_armingsword_silver_name
			visuals = vs_valyrian_armingsword_silver_visuals
			description = vs_valyrian_armingsword_silver_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_armingsword_silver_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_02
		}
		create_artifact = {
			name = vs_valyrian_armingsword_gold_name
			visuals = vs_valyrian_armingsword_gold_visuals
			description = vs_valyrian_armingsword_gold_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_armingsword_gold_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_03
		}
		create_artifact = {
			name = vs_valyrian_longsword_gold_name
			visuals = vs_valyrian_longsword_gold_visuals
			description = vs_valyrian_longsword_gold_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_longsword_gold_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_04
		}
		create_artifact = {
			name = vs_valyrian_longsword_silver_name
			visuals = vs_valyrian_longsword_silver_visuals
			description = vs_valyrian_longsword_silver_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_longsword_silver_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_05
		}
		create_artifact = {
			name = vs_blackfyre_name
			visuals = vs_blackfyre_visuals
			description = vs_blackfyre_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_blackfyre_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_06
		}
		create_artifact = {
			name = vs_dark_sister_name
			visuals = vs_dark_sister_visuals
			description = vs_dark_sister_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_dark_sister_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_07
		}
		create_artifact = {
			name = vs_brightroar_name
			visuals = vs_brightroar_visuals
			description = vs_brightroar_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_brightroar_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_08
		}
		create_artifact = {
			name = vs_dawn_name
			visuals = vs_dawn_visuals
			description = vs_dawn_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			agot_add_artifact_history = { 
				location = scope:zz_item_crafter.location
				actor = scope:zz_item_crafter
				recipient = scope:owner
				type = created
			}
			clear_artifact_modifiers = yes
		}
	}
	zz_craft_item_apply_item_effect = {
		MODIFIER = zz_valyria_magic_vs_base_modifier_01_stacking
	}
	zz_apply_item_magic_modifiers_effect = yes 
	trigger_event = zz_valyria_item_crafting_rename.2
}



zz_valyria_create_vs_sword_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	var:zz_sword_selection_sword = { 
		save_scope_as = zz_sword_selection_sword
	}
	set_artifact_rarity_illustrious = yes
	if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_01
		}
		create_artifact = {
			name = vs_valyrian_armingsword_silver_name
			visuals = vs_valyrian_armingsword_silver_visuals
			description = vs_valyrian_armingsword_silver_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_armingsword_silver_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_02
		}
		create_artifact = {
			name = vs_valyrian_armingsword_gold_name
			visuals = vs_valyrian_armingsword_gold_visuals
			description = vs_valyrian_armingsword_gold_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_armingsword_gold_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_03
		}
		create_artifact = {
			name = vs_valyrian_longsword_gold_name
			visuals = vs_valyrian_longsword_gold_visuals
			description = vs_valyrian_longsword_gold_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_longsword_gold_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_04
		}
		create_artifact = {
			name = vs_valyrian_longsword_silver_name
			visuals = vs_valyrian_longsword_silver_visuals
			description = vs_valyrian_longsword_silver_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
			set_variable = {
				name = valyrian_longsword_silver_artifact
				value = yes
			}
			save_scope_value_as = {
				name = valyrian_steel
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_05
		}
		create_artifact = {
			name = vs_blackfyre_name
			visuals = vs_blackfyre_visuals
			description = vs_blackfyre_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_blackfyre_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_06
		}
		create_artifact = {
			name = vs_dark_sister_name
			visuals = vs_dark_sister_visuals
			description = vs_dark_sister_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_dark_sister_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_07
		}
		create_artifact = {
			name = vs_brightroar_name
			visuals = vs_brightroar_visuals
			description = vs_brightroar_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_brightroar_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	else_if = { 
		limit = { 
			scope:zz_sword_selection_sword ?= trait:zz_valyria_sword_type_08
		}
		create_artifact = {
			name = vs_dawn_name
			visuals = vs_dawn_visuals
			description = vs_dawn_description
			type = sword
			wealth = scope:wealth
			quality = scope:quality
			template = vs_generic_valyrian_template
			modifier = vs_generic_valyrian_modifier
			save_scope_as = newly_created_artifact
			decaying = no
		}
		scope:newly_created_artifact ?= {
			equip_artifact_to_owner_replace = yes
			set_variable = {
				name = valyrian_steel
				value = yes
			}
			set_variable = {
				name = valyrian_steel_generic
				value = yes
			}
		}
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			agot_add_artifact_history = { 
				location = scope:zz_item_crafter.location
				actor = scope:zz_item_crafter
				recipient = scope:owner
				type = created
			}
			clear_artifact_modifiers = yes
		}
	}
	zz_craft_item_apply_item_effect = {
		MODIFIER = zz_valyria_magic_vs_base_modifier_01_stacking
	}
	zz_apply_item_magic_modifiers_effect = yes 
	trigger_event = zz_valyria_item_crafting_rename.2
}


zz_valyria_create_magic_ring_effect = {

	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = ring_modifier
		value = flag:$RING_MODIFIER$
	}
	create_artifact = {
		name = zz_valyria_artifact_mages_ring_name_dummy
		description = placeholder
		description = placeholder
		visuals = archmaester_ring
		type = archmaester_ring
		creator = scope:zz_item_crafter
		history = {
			location = scope:zz_item_crafter.location
			actor = scope:zz_item_crafter
			recipient = scope:owner
			type = created
		}
		history = {
			location = scope:zz_item_crafter.location
			actor = scope:zz_item_crafter
			recipient = scope:owner
			type = created
		}
		template = zz_valyria_mages_ring_artifact_template
		modifier = zz_valyria_magic_xp_gain_passive_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}

	scope:newly_created_artifact = {
		clear_artifact_modifiers = yes
		set_variable = {
			name = ring_modifier
			value = flag:$RING_MODIFIER$
		}
		set_artifact_name = zz_valyria_artifact_mages_ring_name
		set_artifact_description = zz_valyria_artifact_mages_ring_desc_dummy
		set_variable = {
			name = maesterwork
			value = yes
		}
		add_artifact_history = {
			type = given
			recipient = scope:owner
		}
		equip_artifact_to_owner_replace = yes
	}
	if = { 
		limit = {
			exists = scope:ring_modifier 
		}
		if = { 
			limit = {
				scope:ring_modifier ?= flag:drops_of_power
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_magic_mana_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:all_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:higher_mysteries
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_higher_mysteries_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:blood_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_blood_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:shadow_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_shadow_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:dream_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_dream_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:alchemy_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_alchemy_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:fire_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_fire_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:air_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_air_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:water_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_water_magic_xp_gain_modifier_01_stacking
			}
		}
	}
	zz_apply_item_magic_modifiers_effect = yes 
	trigger_event = zz_valyria_item_crafting_rename.2
	
}

zz_craft_item_apply_item_effect = {
	set_variable = { 
		name = zz_item_effect 
		value = trait:$MODIFIER$
	}
	if = {
		limit = {
			root = {
				var:zz_item_effect = trait:$MODIFIER$
	scope:newly_created_artifact = {
		clear_artifact_modifiers = yes
		set_variable = {
			name = ring_modifier
			value = flag:$RING_MODIFIER$
		}
		set_artifact_name = zz_valyria_artifact_mages_ring_name
		set_artifact_description = zz_valyria_artifact_mages_ring_desc_dummy
		set_variable = {
			name = maesterwork
			value = yes
		}
		add_artifact_history = {
			type = given
			recipient = scope:owner
		}
		equip_artifact_to_owner_replace = yes
	}
	if = { 
		limit = {
			exists = scope:ring_modifier 
		}
		if = { 
			limit = {
				scope:ring_modifier ?= flag:drops_of_power
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_magic_mana_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:all_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:higher_mysteries
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_higher_mysteries_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:blood_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_blood_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:shadow_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_shadow_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:dream_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_dream_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:alchemy_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_alchemy_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:fire_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_fire_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:air_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_air_magic_xp_gain_modifier_01_stacking
			}
		}
		if = { 
			limit = {
				scope:ring_modifier = flag:water_magic
			}
			zz_craft_item_apply_item_effect = {
				MODIFIER = zz_valyria_water_magic_xp_gain_modifier_01_stacking
			}
		}
	}
	zz_apply_item_magic_modifiers_effect = yes 
	trigger_event = zz_valyria_item_crafting_rename.2
	
}

zz_craft_item_apply_item_effect = {
	set_variable = { 
		name = zz_item_effect 
		value = trait:$MODIFIER$
	}
	if = {
		limit = {
			root = {
				var:zz_item_effect = trait:$MODIFIER$
			}
		}
		scope:newly_created_artifact = {
			while = {
				count = root.zz_valyria_magic_alchemy_magic_crafting_value
				if = { 
					limit = { 
						root = {
							var:zz_item_effect = trait:zz_valyria_magic_xp_gain_passive_modifier
						}
					}
					if = {
						limit = {
							exists = var:item_mana_gain
						}
						change_variable = {
							name = item_mana_gain
							add = 0.25
						}
					}
					else = {
						set_variable = {
							name = item_mana_gain
							value = 0.25
						}
					}
				}
				add_artifact_modifier = $MODIFIER$
			}
		}
		scope:newly_created_artifact = {
			while = {
				count = root.zz_valyria_magic_alchemy_magic_crafting_value
				if = { 
					limit = { 
						root = {
							var:zz_item_effect = trait:zz_valyria_magic_xp_gain_passive_modifier
						}
					}
					if = {
						limit = {
							exists = var:item_mana_gain
						}
						change_variable = {
							name = item_mana_gain
							add = 0.25
						}
					}
					else = {
						set_variable = {
							name = item_mana_gain
							value = 0.25
						}
					}
				}
				add_artifact_modifier = $MODIFIER$
			}
		}
	}
}

zz_item_calculate_cost_effect = {
	if = {
		limit = {
			var:zz_selected_item = trait:$ITEM$
		}
		set_variable = {
			name = zz_current_cost_item
			value = $COST$
		}
	}
}
zz_modifier_calculate_effect = {
	if = {
		limit = {
			var:zz_selected_modifier = trait:$MODIFIER$
		}
		set_variable = {
			name = zz_current_cost_modifier
			value = $COST$
		}
	}
}


zz_item_craft_zz_valyria_crafting_vs_sword_01 = {
	zz_valyria_create_vs_sword_effect = {OWNER = root} 
	zz_valyria_create_vs_sword_effect = {OWNER = root} 
}
zz_item_craft_zz_valyria_crafting_dragonbone_bow_01 = {
	agot_create_artifact_dragonbone_longbow_effect = { OWNER = ROOT }
}

zz_item_craft_zz_valyria_crafting_vs_armour_01 = {
	agot_create_artifact_valyrian_steel_armor_effect = { OWNER = root } 
}

zz_item_craft_zz_valyria_crafting_magic_ring_01 = {
	if = { 
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_09
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = drops_of_power   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_01
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = blood_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_02
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = shadow_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring = trait:zz_valyria_ring_type_03
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = dream_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_04
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = alchemy_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_05
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = fire_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_06
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = air_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_07
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = water_magic   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_08
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = higher_mysteries   }
	}
	else_if = {
		limit = {
			var:zz_ring_selection_ring ?= trait:zz_valyria_ring_type_10
		}
		zz_valyria_create_magic_ring_effect ={ OWNER = root RING_MODIFIER = all_magic   }
	}
	
}

zz_item_craft_zz_valyria_crafting_dragon_saddle_01 = {
	cv_create_artifact_dragon_saddle_effect ={ OWNER = root TYPE = brown_common   }
}

zz_item_craft_zz_valyria_crafting_dragon_saddle_02 = {
	cv_create_artifact_dragon_saddle_effect ={ OWNER = root TYPE = brown_masterwork   }
}

zz_item_craft_zz_valyria_crafting_dragon_saddle_03 = {
	cv_create_artifact_dragon_saddle_effect ={ OWNER = root TYPE = black_famed   }
}


zz_item_craft_zz_valyria_crafting_dragon_horn_01 = {
	agot_create_artifact_dragon_horn_effect = { OWNER = root DRAGON = root }
}

zz_item_craft_zz_valyria_crafting_glass_candle_01 = {
	agot_create_random_glass_candle_effect = { OWNER =  root  }
}






zz_craft_item_effect = {
	if = {
		limit = {
			var:zz_selected_item = trait:$ITEM$
		}
		random_list = { 
			65 = { 
				modifier = {
					add = zz_spellcast_value
				}
				zz_item_craft_$ITEM$ = yes 
			}
			35 = { 
				zz_valyria_spell_failure_effect = yes
			}
		}
	}
}

zz_craft_item_apply_modifier_effect = {
	if = {
		limit = {
			root = {
				var:zz_selected_modifier = trait:$MODIFIER$
			}
			root = {
				var:zz_selected_modifier = trait:$MODIFIER$
			}
		}
		scope:newly_created_artifact = {
			while = {
				count = root.zz_valyria_magic_alchemy_magic_crafting_value
				if = { 
					limit = { 
						root = {
							var:zz_selected_modifier = trait:zz_valyria_magic_xp_gain_passive_modifier
						}
					}
					if = {
						limit = {
							exists = var:item_mana_gain
						}
						change_variable = {
							name = item_mana_gain
							add = 0.25
						}
					}
					else = {
						set_variable = {
							name = item_mana_gain
							value = 0.25
						}
					}
				}
				add_artifact_modifier = $MODIFIER$
			}
		}
	}
}

zz_valyria_crafting_calculate_crafting_cost_item_effect = {
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_vs_sword_01
		COST = zz_item_vs_sword_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_dragonbone_bow_01
		COST = zz_item_dragonbone_bow_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_vs_armour_01
		COST = zz_item_vs_armour_cost
	}

	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_magic_ring_01
		COST = zz_item_vs_ring_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_dragon_saddle_01
		COST = zz_item_dragon_saddle_01_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_dragon_saddle_02
		COST = zz_item_dragon_saddle_02_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_dragon_saddle_03
		COST = zz_item_dragon_saddle_03_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_glass_candle_01
		COST = zz_item_glass_candle_cost
	}
	zz_item_calculate_cost_effect = {
		ITEM = zz_valyria_crafting_dragon_horn_01
		COST = zz_item_dragon_horn_cost
	}

	
}

zz_valyria_crafting_calculate_crafting_cost_modifier_effect = {
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_none_modifier_01_stacking
		COST = zz_no_modifer_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_mana_gain_modifier_01_stacking
		COST = zz_modifier_dop_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_higher_mysteries_xp_gain_modifier_01_stacking
		COST = zz_modifier_higher_mysteries_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_blood_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_blood_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_shadow_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_shadow_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_dream_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_dream_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_alchemy_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_alchemy_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_fire_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_fire_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_air_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_air_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_water_magic_xp_gain_modifier_01_stacking
		COST = zz_modifier_water_magic_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_xp_gain_passive_modifier
		COST = zz_modifier_passive_dop_xp_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_learning_modifier_01_stacking
		COST = zz_modifier_learning_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_diplomacy_modifier_01_stacking
		COST = zz_modifier_diplomacy_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_stewardship_modifier_01_stacking
		COST = zz_modifier_stewardship_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_martial_modifier_01_stacking
		COST = zz_modifier_martial_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_intrigue_modifier_01_stacking
		COST = zz_modifier_intrigue_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_prowess_modifier_01_stacking
		COST = zz_modifier_prowess_add_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_diplomacy_range_modifier_01_stacking
		COST = zz_modifier_diplomacy_range_mult_cost
	}

	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_tax_mult_modifier_01_stacking
		COST = zz_modifier_diplomacy_range_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_gold_income_modifier_01_stacking
		COST = zz_modifier_diplomacy_range_mult_cost
	}
	zz_modifier_calculate_effect = {
		MODIFIER = zz_valyria_magic_income_mult_modifier_01_stacking
		COST = zz_modifier_diplomacy_range_mult_cost
	}
}

zz_valyria_crafting_item_construct_effect = {
	if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_vs_sword_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_vs_sword_01
		} 
		} 
	}

	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragonbone_bow_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragonbone_bow_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_vs_armour_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_vs_armour_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_magic_ring_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_magic_ring_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragon_saddle_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragon_saddle_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragon_saddle_02
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragon_saddle_02
		}
		zz_apply_item_magic_modifiers_effect = yes 
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragon_saddle_03
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragon_saddle_03
		}
		zz_apply_item_magic_modifiers_effect = yes 
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_glass_candle_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_glass_candle_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragon_horn_01
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragon_horn_01
		}
		zz_apply_item_magic_modifiers_effect = yes 
		zz_apply_item_magic_modifiers_effect = yes 
	}
	else_if = {
		limit = {
			var:zz_selected_item = trait:zz_valyria_crafting_dragon_saddle_03
		}
		zz_craft_item_effect = {
			ITEM = zz_valyria_crafting_dragon_saddle_03
		}
		zz_apply_item_magic_modifiers_effect = yes 
	}
}
		}
		zz_apply_item_magic_modifiers_effect = yes 
	}
}

zz_apply_item_magic_modifiers_effect = {
zz_apply_item_magic_modifiers_effect = {
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_mana_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_xp_gain_modifier_01_stacking
	}
		zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_higher_mysteries_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_blood_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_shadow_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_dream_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_alchemy_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_fire_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_air_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_water_magic_xp_gain_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_xp_gain_passive_modifier
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_learning_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_diplomacy_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_stewardship_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_martial_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_intrigue_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_prowess_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_diplomacy_range_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_tax_mult_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_gold_income_modifier_01_stacking
	}
	zz_craft_item_apply_modifier_effect = {
		MODIFIER = zz_valyria_magic_income_mult_modifier_01_stacking
	}
}


zz_craft_item_cost_effect = {
	if = {
		limit = {
			var:zz_current_magic_reagent ?= flag:mages_power
		}
		var:zz_item_crafter ?= {
			set_variable = {
				name = zz_manacost 
				value = zz_valyria_mana_cost
			}
			zz_valyria_mana_spend = yes
		}
	}
	if = {
		limit = {
			var:zz_current_magic_reagent ?= flag:human_sacrifice
		}
		trigger_event = zz_valyria_item_crafting_human_sacrifice.01 
	}
	
	if = {
		limit = {
			var:zz_current_use_iron >= 1
		}
		while = {
			count = var:zz_current_use_iron
			random_realm_province = {
				limit = {
					exists = var:zz_valyria_resource_iron
					var:zz_valyria_resource_iron >= 1
				}
				change_variable = {
					name = zz_valyria_resource_iron
					add = -1
				}
			}
		}
	}
	if = {
		limit = {
			var:zz_current_use_steel >= 1
		}
		while = {
			count = var:zz_current_use_steel
			random_realm_province = {
				limit = {
					exists = var:zz_valyria_resource_steel
					var:zz_valyria_resource_steel >= 1
				}
				change_variable = {
					name = zz_valyria_resource_steel
					add = -1
				}
			}
		}
	}
	if = {
		limit = {
			var:zz_current_use_obsidian >= 1
		}
		while = {
			count = var:zz_current_use_obsidian
			random_realm_province = {
				limit = {
					exists = var:zz_valyria_resource_obsidian
					var:zz_valyria_resource_obsidian >= 1
				}
				change_variable = {
					name = zz_valyria_resource_obsidian
					add = -1
				}
			}
		}
	}
	if = {
		limit = {
			var:zz_current_use_valyrian_steel >= 1
		}
		while = {
			count = var:zz_current_use_valyrian_steel
			random_realm_province = {
				limit = {
					exists = var:zz_valyria_resource_valyrian_steel
					var:zz_valyria_resource_valyrian_steel >= 1
				}
				change_variable = {
					name = zz_valyria_resource_valyrian_steel
					add = -1
				}
			}
		}
	}
}