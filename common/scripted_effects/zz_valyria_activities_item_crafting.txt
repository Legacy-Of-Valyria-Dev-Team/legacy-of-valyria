zz_valyria_item_crafting_forging_test = {
	random_list = {
		20 = {
			modifier = {
				add = $SKILL$
			}
			send_interface_toast = {
				title = $ZZ_EVENT_OPTION_NAME$.crit_success
				left_icon = root
				custom_tooltip = zz_valyria_settlement_tt_positive_major
				zz_valyria_item_crafting_reward_massive = yes
				
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		20 = {
			send_interface_toast = {
				title = $ZZ_EVENT_OPTION_NAME$.crit_success
				left_icon = root
				custom_tooltip = zz_valyria_settlement_tt_positive_major
				zz_valyria_item_crafting_reward_major = yes
				
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		20 = {
			send_interface_toast = {
				title = $ZZ_EVENT_OPTION_NAME$.success
				left_icon = root
				custom_tooltip = zz_valyria_settlement_tt_positive_medium
				zz_valyria_item_crafting_reward_medium = yes
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		20 = {
			send_interface_toast = {
				title = $ZZ_EVENT_OPTION_NAME$.small_success
				left_icon = root
				custom_tooltip = zz_valyria_settlement_tt_positive_tiny
				zz_valyria_item_crafting_reward_minor = yes
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		20 = {
			send_interface_toast = {
				title = $ZZ_EVENT_OPTION_NAME$.failure
				left_icon = root
				custom_tooltip = zz_valyria_settlement_tt_negative
				zz_valyria_item_crafting_reward_failure = yes
			}
			stress_impact = {
				base = medium_stress_impact_gain
			}
		}
	}
}
zz_valyria_item_crafting_reward_massive = {
	scope:activity = {
		add_activity_log_entry = {
			key = sic_et_non_log
			score = 40
			tags = { good learning activity }
			character = root

			#Effect
			custom_tooltip = zz_valyria_settlement_tt_positive_massive
			scope:activity = { activity_special_type_progression_massive = yes }
		}
	}
}
zz_valyria_item_crafting_reward_major = {
	scope:activity = {
		add_activity_log_entry = {
			key = sic_et_non_log
			score = 10
			tags = { good learning activity }
			character = root

			#Effect
			custom_tooltip = zz_valyria_settlement_tt_positive_major
			scope:activity = { activity_special_type_progression_major = yes }
		}
	}
}

zz_valyria_item_crafting_reward_medium = {
	scope:activity = {
		add_activity_log_entry = {
			key = sic_et_non_log
			score = 5
			tags = { good learning activity }
			character = root

			#Effect
			custom_tooltip = zz_valyria_settlement_tt_positive_medium
			scope:activity = { activity_special_type_progression_medium = yes }
		}
	}
}
zz_valyria_item_crafting_reward_minor = {
	scope:activity = {
		add_activity_log_entry = {
			key = sic_et_non_log
			score = 1
			tags = { good learning activity }
			character = root

			#Effect
			custom_tooltip = zz_valyria_settlement_tt_positive_tiny	
			scope:activity = { activity_special_type_progression_tiny  = yes }
		}
	}
}
zz_valyria_item_crafting_reward_failure = {
	scope:activity = {
		add_activity_log_entry = {
			key = sic_et_non_log
			score = -5
			tags = { good learning activity }
			character = root

			#Effect
			custom_tooltip = zz_valyria_settlement_tt_failure	
			scope:activity = { activity_special_type_progression_negative  = yes }
		}
	}
}



resolve_zz_valyria_item_crafting_success_reward_effect = {
	involved_activity ?= {
		#Perfect settlement - 65-100
		if = {
			limit = { var:activity_special_type_progression >= 65 }
			scope:host = {
				add_character_flag = crafting_successs_reward
			}
		}
		#crafting failure
		else = {
			scope:host = {
				add_character_flag = crafting_failure_reward
			}
		}
	}
}


zz_valyria_create_magic_ring_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = ring_modifier
		value = flag:$RING_MODIFIER$
	}

	create_artifact = {
		name = zz_valyria_artifact_mages_ring_name
		description = zz_valyria_artifact_mages_ring_desc
		visuals = archmaester_ring
		type = archmaester_ring
		template = zz_valyria_mages_ring_artifact_template
		modifier = zz_valyria_magic_xp_gain_passive_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			if = { 
				limit = {
					scope:ring_modifier = flag:blood_magic
				}
				#name = crimson_band
				#description = crimson_band_desc
				add_artifact_modifier = zz_valyria_blood_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:shadow_magic
				}
				#name = umbral_band
				#description = umbral_band_desc
				add_artifact_modifier = zz_valyria_shadow_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:dream_magic
				}
				#name = lucid_band
				#description = lucid_band_desc
				add_artifact_modifier = zz_valyria_dream_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:alchemy_magic
				}
				#name = aetherforge_band
				#description = aetherforge_band_desc
				add_artifact_modifier = zz_valyria_alchemy_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:fire_magic
				}
				#name = inferno_band
				#description = inferno_band_desc
				add_artifact_modifier = zz_valyria_fire_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:air_magic
				}
				#name = zephyrs_band
				#description = zephyrs_band_desc
				add_artifact_modifier = zz_valyria_air_magic_xp_gain_modifier_01_stacking
			}
			else_if = { 
				limit = {
					scope:ring_modifier = flag:water_magic
				}
				#name = aqua_band
				#description = aqua_band_desc
				add_artifact_modifier = zz_valyria_water_magic_xp_gain_modifier_01_stacking
			}
			
			set_variable = {
				name = maesterwork
				value = yes
			}
			add_artifact_history = {
				type = given
				recipient = scope:owner
			}
			equip_artifact_to_owner_replace = yes
		}
	}
}






zz_valyria_item_crafting_completed_log_entry_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = zz_valyria_item_crafting_completed_log
			tags = { completed }
			score = 100
			show_in_conclusion = yes
			character = root
			#Effects
			root = {
				zz_valyria_activities_item_crafting_crafting_reward_effect = yes
			}
		}
	}
}

zz_valyria_activities_item_crafting_crafting_reward_effect = {
	if = {
		limit = { 
			has_character_flag = crafting_successs_reward
		}
		remove_character_flag = crafting_successs_reward
		if = { 
			limit = {
				has_character_flag = craft_weapon_01
			}
			agot_create_artifact_vs_valyrian_armingsword_silver_effect = { OWNER = scope:host } 
			remove_character_flag = craft_weapon_01
		}
		else_if = { 
			limit = {
				has_character_flag = craft_weapon_02
			}
			agot_create_artifact_vs_valyrian_armingsword_gold_effect = { OWNER = scope:host }
			remove_character_flag = craft_weapon_02
		}
		else_if = { 
			limit = {
				has_character_flag = craft_weapon_03
			}
			agot_create_artifact_vs_valyrian_longsword_silver_effect = { OWNER = scope:host } 
			remove_character_flag = craft_weapon_03
		}
		else_if = { 
			limit = {
				has_character_flag = craft_weapon_04
			}
			agot_create_artifact_vs_valyrian_longsword_gold_effect = { OWNER = scope:host } 
			remove_character_flag = craft_weapon_04
		}
		else_if = { 
			limit = {
				has_character_flag = craft_weapon_05
			}
			agot_create_artifact_dragonbone_longbow_effect = { OWNER = ROOT }
			remove_character_flag = craft_weapon_05
		}
		else_if = { 
			limit = {
				has_character_flag = craft_armour_01
			}
			agot_create_artifact_valyrian_steel_armor_effect = { OWNER = scope:host } 
			remove_character_flag = craft_armour_01
		}
		else_if = {
			limit = {
				has_character_flag = craft_trinket_01
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_blood_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = blood_magic   }
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_shadow_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = shadow_magic   }	
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_dream_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = dream_magic   }	
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_alchemy_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = alchemy_magic   }	
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_fire_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = fire_magic   }	
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_air_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = air_magic   }	
			}
			if = {
				limit = {
					var:magic_ring_type = flag:ring_water_magic 
				}
				zz_valyria_create_magic_ring_effect ={ OWNER = scope:host RING_MODIFIER = water_magic   }	
			}
			remove_variable = magic_ring_type
			remove_character_flag = craft_trinket_01			
		}
		else_if = {
			limit = {
				has_character_flag = craft_trinket_02
			}
			if = {
				limit = {
					var:dragon_saddle_type = flag:brown_common 
				}
				cv_create_artifact_dragon_saddle_effect ={ OWNER = scope:host TYPE = brown_common   }
			}
			if = {
				limit = {
					var:dragon_saddle_type = flag:brown_masterwork 
				}
				cv_create_artifact_dragon_saddle_effect ={ OWNER = scope:host TYPE = brown_masterwork   }
			}
			if = {
				limit = {
					var:dragon_saddle_type = flag:black_famed 
				}
				cv_create_artifact_dragon_saddle_effect ={ OWNER = scope:host TYPE = black_famed   }
			}
			remove_variable = dragon_saddle_type
			remove_character_flag = craft_trinket_02			
		}
		else_if = {
			limit = {
				has_character_flag = craft_trinket_03
			}
			agot_create_artifact_dragon_horn_effect = { OWNER = scope:host DRAGON = scope:host }
			
			remove_character_flag = craft_trinket_03			
		}
		else_if = {
			limit = {
				has_character_flag = craft_trinket_05
			}
			agot_create_random_glass_candle_effect = { OWNER =  scope:host   }
			
			remove_character_flag = craft_trinket_05			
		}
		zz_valyria_activities_item_crafting_crafting_apply_modifier_effect = yes 
		scope:activity = {
			add_to_variable_list = {
				name = artifact_rewards
				target = scope:newly_created_artifact
			}
		}	
	}
	else = { 
		remove_character_flag = crafting_failure_reward
	}
}

zz_valyria_activities_item_crafting_crafting_apply_modifier_effect = {
	save_scope_as = crafter
	if = {
		limit = {
			has_character_flag = craft_modifier_01
		}
		remove_character_flag = craft_modifier_01
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_mana_gain_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_02
		}
		remove_character_flag = craft_modifier_02
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_xp_gain_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_03
		}
		remove_character_flag = craft_modifier_03
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_04
		}
		remove_character_flag = craft_modifier_04
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_learning_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_05
		}
		remove_character_flag = craft_modifier_05
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_diplomacy_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_06
		}
		remove_character_flag = craft_modifier_06
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_stewardship_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_07
		}
		remove_character_flag = craft_modifier_07
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_martial_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_08
		}
		remove_character_flag = craft_modifier_08
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_intrigue_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_09
		}
		remove_character_flag = craft_modifier_09
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_prowess_modifier_01_stacking
		}
	}
	if = {
		limit = {
			has_character_flag = craft_modifier_10
		}
		remove_character_flag = craft_modifier_10
		scope:newly_created_artifact = {
			add_artifact_modifier = zz_valyria_magic_xp_gain_passive_modifier
		}
	}
}