zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters.t
		desc = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters.desc
		left_icon = scope:actor
		right_icon = scope:recipient					
		custom_tooltip = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters.tt

		zz_valyria_magic_duel_stress_effect = yes 
		if = {
			limit = {
				scope:weaken_spell_flag = yes
			}
			scope:secondary_recipient = {
				duel = {
					skill = learning 
					target = scope:recipient
					75 = {
						modifier = {
							add = zz_water_damage_scaling_value
						}
						add_dread = medium_dread_gain
						scope:recipient = {
							if = {
								limit = {
									scope:strike_imprison_flag = yes
								}
								maimed_in_battle_effect = yes
								add_stress = massive_stress_gain
								imprison_character_effect = {
									TARGET = scope:recipient
									IMPRISONER = scope:actor
								}
							}
							else = {
								show_as_tooltip = {
									add_trait = wounded_3
									add_stress = massive_stress_gain
								}
								scope:actor = {
									if = {
										limit = {
											NOR = {
												has_imprisonment_reason = scope:recipient
												has_banish_reason = scope:recipient
												has_execute_reason = scope:recipient
											}
										}
										add_tyranny = minor_tyranny_gain
									}
								}
								custom_tooltip = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters.tyranny
							}
						}
					}
					25 = {
						
					}
				}
			}
		}	
		if = {
			limit = {
				scope:weaken_spell_flag = no
			}
			scope:secondary_recipient = {
				duel = {
					skill = learning 
					target = scope:recipient
					75 = {
						modifier = {
							add = zz_water_damage_scaling_value
						}
						scope:actor = { 
							add_dread = major_dread_gain
							if = {
								limit = {
									has_execute_reason = scope:recipient
								}
								custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
							}
							else = {
								add_tyranny = execution_tyranny_gain
								add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
								if = {
									limit = {
										NOT = {	has_trait = murderer	}
									}
									add_trait = murderer
								}
								hidden_effect = {
									if = {
										limit = {
											exists = scope:recipient.primary_heir
											scope:recipient.primary_heir = {
												any_close_family_member = {
													this = scope:recipient
												}
												NOR = {
													has_relation_rival = scope:actor
													has_relation_nemesis = scope:actor
													has_trait = craven
													has_trait = forgiving
												}
											}
										}
										set_relation_rival = scope:recipient.primary_heir
									}
									else_if = {
										limit = {
											scope:recipient.age<16
											exists = scope:recipient.father
											scope:recipient.father = {
												is_alive = yes
												is_landed = yes
												is_ruler = yes
												NOR = {
													has_relation_rival = scope:actor
													has_relation_nemesis = scope:actor
													has_trait = craven
													has_trait = forgiving
												}
											}
										}
										set_relation_rival = scope:recipient.father
									}
								}
							}
						}
						if  = { 
							limit = {
								scope:recipient = { 
									NOT = {
										is_at_war_with = scope:actor
									}	
								}
							}
							execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:secondary_recipient }
						}
						scope:recipient = {
							death = {
								death_reason = death_water_magic
								killer = scope:secondary_recipient
							}
						}
					}
					25 = {
	
					}
				}
			}
		}	
	}
}
zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent_effect = { 
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent.t
		desc = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent.desc
		left_icon = scope:actor
		right_icon = scope:recipient					
		custom_tooltip = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent.tt
		scope:recipient = {
			location = {
				every_army_in_location = {
					limit = { 
						army_owner = scope:recipient
					}
					deplete_army_by_percentage = 0.3
				}
			}
			commanding_army = { 
				deplete_army_by_percentage = 0.9
			}
		}
	}
}

zz_valyria_magic_water_magic_03_mysteries_of_endurance_effect = {
	
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_water_magic_03_mysteries_of_endurance.t
		desc = zz_valyria_magic_water_magic_03_mysteries_of_endurance.desc
		left_icon = scope:actor
		right_icon = scope:recipient					
		custom_tooltip = zz_valyria_magic_water_magic_03_mysteries_of_endurance.tt
		scope:recipient = {
			location = {
				every_army_in_location = {
					limit = { 
						army_owner = scope:recipient
					}
					add_supply = 25 
				}
			}
			commanding_army = { 
				add_supply = 100 
			}
		}
	}
}
zz_valyria_magic_water_magic_04_mysteries_of_rhoyne_effect = {
	
	send_interface_message = {
		type = event_generic_neutral
		title = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne.t
		desc = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne.desc
		left_icon = scope:actor
		right_icon = scope:recipient					
		custom_tooltip = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne.tt
		scope:recipient = {
			location = {
				create_epidemic_outbreak = {
					type = bubonic_plague
					intensity = major
					save_scope_as = mysteries_of_rhoyne  # optional
				}
			}
		}
	}
}

