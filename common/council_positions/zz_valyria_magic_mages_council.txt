lord_high_mage = { # Special
	skill = learning
	name = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_trait_xp = {
						trait = zz_magister
						track = secrets_of_the_higher_mysteries
						value < 100
					}
				}
				desc =  lord_high_archmage_name
			}
			triggered_desc = {
				trigger = {
					has_trait  = zz_magister
				}
				desc =  lord_high_mage_name
			}
			desc = lord_high_mage_name
		}
	}

	# Give public opinion and control tasks

	tooltip = game_concept_lord_commander_desc

	modifier = {
		name = kingsguard_lord_commander_modifier
		monthly_prestige = 1
		monthly_dynasty_prestige = 1
	}

	can_fire = { 
	}

	can_reassign = {
	}

	valid_position = {
		has_trait = zz_magister
	}

	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister
	}

	on_get_position = {

	}

	on_lose_position = {

	}

	on_fired_from_position = {

		#remove_character_flag = lord_commander Need to keep this for weirdness
	}
	portrait_animation = chaplain
}

magelord_1 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_2 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_3 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_4 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_5 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_6 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_7 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}
magelord_8 = { # 6 of them
	skill = learning

	name = {
		desc = magelord_name
	}

	tooltip = game_concept_kingsguard_desc

	modifier = {
		name = kingsguard_modifier
		monthly_prestige = 0.5
		monthly_dynasty_prestige = 0.5
	}

	can_fire = { # A kingsguard serves for life; Joffrey interrupted that tradition;

	}

	can_reassign = {
		
	}
	valid_position = {
		has_trait = zz_magister
	}
	valid_character = {
		exists = root.liege_or_court_owner
		has_trait = zz_magister

	}

	on_get_position = {
		agot_on_get_kingsguard = yes
	}

	on_lose_position = {
		agot_on_fired_from_kingsguard = yes
	}

	on_fired_from_position = {
		agot_on_fired_from_kingsguard = yes
	}
	portrait_animation = chaplain
}