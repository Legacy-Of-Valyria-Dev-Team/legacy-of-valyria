types magic_scroll_learning {
	type zz_valyria_magic_scroll_learning_window_open = window {
		name = "zz_valyria_magic_scroll_learning_window_open"
		allow_outside = yes
		movable = yes
		parentanchor = center
		size = { 0 0 }

		visible = "[And( Not( IsPauseMenuShown ), And(Or(Not(IsObserver), GetPlayer.IsValid), IsDefaultGUIMode))]"

		zz_valyria_magic_scroll_learning = {}
	}

	type zz_valyria_magic_scroll_learning = window {
		name = "zz_valyria_magic_scroll_learning"
		layer = top
		parentanchor = center
		using = Window_Background
		size = { 1500 800 }
		datacontext = "[GetScriptedGui('zz_valyria_magic_scroll_learning')]"
		visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

		state = {
			name = _show
			on_start = "[GetVariableSystem.Set( 'gui_tabs', 'tab_1' )]"
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 0 26 }
			margin_right = 13

			widget = {
				size = { 100% 100% }

				vbox = {
					using = Window_Margins

					header_pattern = {
						layoutpolicy_horizontal = expanding

						blockoverride "header_text"
						{
							raw_text = "Study Magic Scroll"
						}

						blockoverride "button_close"
						{
							onclick = "[GetScriptedGui('zz_valyria_magic_scroll_learning_close').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						}
					}
					hbox = { 
						layoutpolicy_horizontal = expanding   layoutpolicy_vertical = expanding
						
						datacontext = "[GetPlayer.MakeScope]"
						
						vbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							max_width = 300
							spacer = { size = { 0 30 } }
							text_single = {
								raw_text = "Scroll Holder"
								fontsize = 24
								align = center
							}
							spacer = { size = { 00 30 } }
							vbox = {
								size = { 200 120 }
								datacontext = "[GetPlayer.MakeScope.Var('zz_item_caster').Char]"
								portrait_head_small = {}
								text_single = {
									align = left
									text = "[Character.GetNameNoTooltip]"
								}
							}
							spacer = { size = { 00 25 } }
							scrollbox = {
								name = "mages_scrollarea"
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								max_width = 250
								max_height = 450
								blockoverride "scrollbox_content"
								{
									dynamicgridbox = {
										datamodel = "[Scope.GetList('item_caster_list')]"
									
										item = {
											button_standard = {
												size = { 200 120 }
												align = left
												datacontext = "[Scope.GetCharacter]"
												layoutpolicy_vertical = expanding
												layoutpolicy_horizontal = growing

												down = "[GetScriptedGui('zz_valyria_magic_scroll_learning_owner').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_item_caster', Character.MakeScope ).End )]"
												onclick = "[GetScriptedGui('zz_valyria_magic_scroll_learning_owner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_item_caster', Character.MakeScope ).End )]"
												vbox = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													margin_right = 4
													spacing = 5
													portrait_head_small = {}
													text_single = {
														text = "[Character.GetNameNoTooltip]"
													}
													spacer = { size = { 00 15 } }
												}
											}								 
										}
									}
								}
							}
							expand = {}
						}
						vbox = {
							layoutpolicy_horizontal = expanding 
							layoutpolicy_vertical = expanding
							max_width = 500
							text_single = {
								text = game_concept_zz_mystery
								fontsize = 24
								align = center
							}
							spacer = { size = { 0 30 } }
							flowcontainer = {
								text_single = {
									align = left
									raw_text = "[Scope.Char.MakeScope.Var('zz_valyria_scroll').Artifact.GetName|U]"
								}
							}
							spacer = { size = { 00 25 } }
							scrollbox = {
								name = "spell_scrollarea"
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								max_width = 500
								max_height = 450
								blockoverride "scrollbox_content"
								{
									dynamicgridbox = {
										datacontext = "[GetPlayer.MakeScope]"
										datamodel = "[Scope.GetList('zz_valyria_scroll_list')]"
										
										item = {
											button_standard = {
												datacontext = "[Scope.Artifact]"
												minimumsize = { 500 38 }
												text_single = {
													minimumsize = { 100 38 }
													margin = { 15 15 }
													text = "[Artifact.GetName|U]"
													alwaystransparent = yes
													resizeparent = yes
													align = center|nobaseline
													default_format = "#low"
												}
												datacontext = "[GetScriptedGui('zz_valyria_magic_scroll_learning_seroll')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll', Artifact.MakeScope ).End)]"
												down = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll', Artifact.MakeScope ).End)]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll', Artifact.MakeScope ).End)]"
												tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll', Artifact.MakeScope ).End)]"
											}	
										}
									}
									expand = {}
								}
							}
							spacer = { size = { 0 10 } }

							
							button_standard = {
								text_single = {
									minimumsize = { 200 38 }
									margin = { 15 15 }
									raw_text = "Study Scroll"
									resizeparent = yes
									align = center|nobaseline
									default_format = "#low"								
								}
								datacontext = "[GetScriptedGui('zz_valyria_magic_scroll_learn')]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
							}
							expand = {}
						}
						vbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							max_width = 300
							spacer = { size = { 0 30 } }
							text_single = {
								raw_text = "Scroll Student"
								fontsize = 24
								align = center
							}
							spacer = { size = { 00 30 } }
							vbox = {
								size = { 200 120 }
								datacontext = "[GetPlayer.MakeScope.Var('zz_valyria_scroll_learner').Char]"
								portrait_head_small = {}
								text_single = {
									align = left
									text = "[Character.GetNameNoTooltip]"
								}
							}
							spacer = { size = { 00 25 } }
							scrollbox = {
								name = "mages_scrollarea"
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								max_width = 250
								max_height = 450
								blockoverride "scrollbox_content"
								{
									dynamicgridbox = {
										datamodel = "[Scope.GetList('zz_valyria_scroll_learner_list')]"
									
										item = {
											button_standard = {
												size = { 200 120 }
												align = left
												datacontext = "[Scope.GetCharacter]"
												layoutpolicy_vertical = expanding
												layoutpolicy_horizontal = growing

												down = "[GetScriptedGui('zz_valyria_magic_scroll_learning_learner').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll_learner', Character.MakeScope ).End )]"
												onclick = "[GetScriptedGui('zz_valyria_magic_scroll_learning_learner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'zz_valyria_scroll_learner', Character.MakeScope ).End )]"
												vbox = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													margin_right = 4
													spacing = 5
													portrait_head_small = {}
													text_single = {
														text = "[Character.GetNameNoTooltip]"
													}
													spacer = { size = { 00 15 } }
												}
											}								 
										}
									}
								}
							}
							expand = {}
						}
					}
				}
			}
		}
	}
}
zz_valyria_magic_scroll_learning_window_open = {}