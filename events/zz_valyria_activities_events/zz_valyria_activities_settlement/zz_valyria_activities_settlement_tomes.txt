namespace = zz_valyria_settlement

## Get Valyrian Tomes
zz_valyria_settlement.4000 = {
	type = activity_event
	title = zz_valyria_settlement.4000.t
	theme = university
	
	desc = {
		first_valid = {
			desc = zz_valyria_settlement.4000.desc_begin
		}
		triggered_desc = {
			trigger = {
				NOT = { # Doesn't have the Dragonlore Book
					any_character_artifact = {
						has_artifact_modifier = dragonlore_book_modifier
					}
				}
			}
			desc = zz_valyria_settlement.4000.dragonlore_book
		}
		triggered_desc = {
			trigger = {
				always = yes
			}
			desc = zz_valyria_settlement.4000.magic_book
		}
		triggered_desc = {
			trigger = {
				always = yes
			}
			desc = zz_valyria_settlement.4000.medicine_book
		}
		desc = zz_valyria_settlement.4000.desc_end
		
	}
	
	center_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	trigger = {
		has_character_flag = settlement_foundation
		NOT = { # Doesn't have all the books
			any_character_artifact = {
				has_artifact_modifier = valyrian_life_book_modifier
			}
			any_character_artifact = {
				has_artifact_modifier = dragonlore_book_modifier
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			has_trait = theologian
			add = 2
		}
		modifier = {
			has_trait = scholar
			add = 1
		}
	}

	immediate = {
		scope:activity = {
			activity_location = { save_scope_as = location }
		}
	}

	# Option A: Spellbook
	option = {
		name = zz_valyria_settlement.4000.a
		trigger = {
		}
		duel = {
			skill = prowess
			value = high_skill_rating
			35 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.a.crit_success
				send_interface_toast = {
					title = zz_valyria_settlement.4000.a.crit_success.tt
					left_icon = root
					#custom_tooltip = zz_valyria_settlement.4000.a.tt
					
					######################## INSERT TOME OF SPELLCASTING HERE ###########################
					
					scope:activity = {
						add_activity_log_entry = {
							key = sic_et_non_log
							score = 25
							tags = { good learning activity }
							character = root
							hidden_effect = {
								custom_tooltip = zz_valyria_settlement_tt_positive_major
								scope:activity = { activity_special_type_progression_major = yes }
							}
						}
					}
				}
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
			65 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.a.failure
				send_interface_toast = {
					title = zz_valyria_settlement.4000.a.failure.tt
					left_icon = root
					hidden_effect = {
						custom_tooltip = zz_valyria_settlement_tt_negative
						scope:activity = { activity_special_type_progression_negative = yes }
					}
				}
				random_list = {
					25 = { # Death
						death = {
							death_reason = death_accident
						}
					}
					30 = { # Maimed
						add_trait = maimed
					}
					25 = { # Wounding
						add_trait = wounded_1
					}
					50 = { # Nothing
						
					}
				}
				stress_impact = {
					base = medium_stress_impact_gain
				}
			}
		}
		
		ai_chance = {
			base = 100
		}
	}
	# Option B: Dragonlore
	option = {
		name = zz_valyria_settlement.4000.b
		trigger = {
			NOT = { # Doesn't have the Dragonlore Book
				any_character_artifact = {
					has_artifact_modifier = dragonlore_book_modifier
				}
			}
		}
		duel = {
			skill = prowess
			value = high_skill_rating
			35 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.b.crit_success
				send_interface_toast = {
					title = zz_valyria_settlement.4000.b.crit_success.tt
					left_icon = root
					#custom_tooltip = zz_valyria_settlement.4000.b.tt
					agot_create_artifact_book_of_dragonlore = {
						OWNER = scope:host
					}
					scope:activity = {
						add_activity_log_entry = {
							key = sic_et_non_log
							score = 25
							tags = { good learning activity }
							character = root
			
							#Effect
							hidden_effect = {
								custom_tooltip = zz_valyria_settlement_tt_positive_major
								scope:activity = { activity_special_type_progression_major = yes }
							}
						}
					}
				}
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
			65 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.a.failure
				send_interface_toast = {
					title = zz_valyria_settlement.4000.a.failure.tt
					left_icon = root
					hidden_effect = {
						custom_tooltip = zz_valyria_settlement_tt_negative
						scope:activity = { activity_special_type_progression_negative = yes }
					}
				}
				random_list = {
					25 = { # Death
						death = {
							death_reason = death_accident
						}
					}
					30 = { # Maimed
						add_trait = maimed
					}
					25 = { # Wounding
						add_trait = wounded_1
					}
					50 = { # Nothing
						
					}
				}
				stress_impact = {
					base = medium_stress_impact_gain
				}
			}
		}
		
		ai_chance = {
			base = 100
		}
	}
	# Option C: Medicine
	option = {
		name = zz_valyria_settlement.4000.c
		trigger = {
			NOT = { # Doesn't have the Medicine Book
				any_character_artifact = {
					has_artifact_modifier = valyrian_life_book_modifier
				}
			}
		}
		duel = {
			skill = prowess
			value = high_skill_rating
			35 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.c.crit_success
				send_interface_toast = {
					title = zz_valyria_settlement.4000.a.crit_success.tt
					left_icon = root
					#custom_tooltip = zz_valyria_settlement.4000.a.tt
					agot_create_artifact_book_of_life = {
						OWNER = scope:host
					}
					scope:activity = {
						add_activity_log_entry = {
							key = sic_et_non_log
							score = 25
							tags = { good learning activity }
							character = root
			
							#Effect
							hidden_effect = {
								custom_tooltip = zz_valyria_settlement_tt_positive_major
								scope:activity = { activity_special_type_progression_major = yes }
							}
						}
					}
				}
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
			65 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = zz_valyria_settlement.4000.a.failure
				send_interface_toast = {
					title = zz_valyria_settlement.4000.a.failure.tt
					left_icon = root
					hidden_effect = {
						custom_tooltip = zz_valyria_settlement_tt_negative
						scope:activity = { activity_special_type_progression_negative = yes }
					}
				}
				random_list = {
					25 = { # Death
						death = {
							death_reason = death_accident
						}
					}
					30 = { # Maimed
						add_trait = maimed
					}
					25 = { # Wounding
						add_trait = wounded_1
					}
					50 = { # Nothing
						
					}
				}
				stress_impact = {
					base = medium_stress_impact_gain
				}
			}
		}
		
		ai_chance = {
			base = 100
		}
	}
	# Option D: opt-out
	option = {
		name = zz_valyria_settlement.4000.d
		
		ai_chance = {
			base = 50
			modifier = {
				has_trait = lazy
				add = 100
			}
			modifier = {
				has_trait = intellect_bad
				add = 100
			}
			modifier = {
				has_trait = dull
				add = 100
			}
		}
	}
}