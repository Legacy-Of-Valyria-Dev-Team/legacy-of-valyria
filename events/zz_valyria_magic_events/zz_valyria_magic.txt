
namespace = zz_valyria_magic

#You read a book of magic. 
zz_valyria_magic.9000 = {
	type = character_event
	title = zz_valyria_magic.9000.t
	desc = zz_valyria_magic.9000.desc
	theme = university
	left_portrait = root


	immediate = {
	}

	trigger = {
		NOT = { 
			has_character_flag = no_magic
		}
	}

	option = {
		name = zz_valyria_magic.9000.a
		trigger = {
			is_ai = no
			NOT = {
				has_trait = zz_magister
			}
		}
		custom_tooltip = {
			text = zz_valyira_magic_youre_a_wizard_harry
			add_trait_force_tooltip = zz_magister
			zz_random_gain_magic_spell = yes 
		}
	}
	option = {
		name = zz_valyria_magic.9000.b
		trigger = {
			has_trait = zz_magister
		}
		custom_tooltip = {
			text = zz_valyira_magic_youre_a_wizard_harry
			zz_valyria_gain_spell_experience = {
				XPGAIN = 5
				XPTRACK = secrets_of_the_higher_mysteries
			}
			zz_random_gain_magic_spell = yes 
		}
	}
	option = {
		name = zz_valyria_magic.9000.z
		trigger = {
			NAND = {
				has_trait = zz_magister
				is_ai = no
			}
		}
		custom_tooltip = {
			text = burn_you_witch
			add_character_flag = no_magic
		}
	}
	option = {
		name = zz_valyria_magic.9000.zz
		trigger = {
			is_ai = yes 
		}
	}
}

zz_valyria_magic.2 = {
	hidden = yes
	scope = none
	trigger = {
	}
	immediate = {
		scope:zz_valyria_magic_learner = {
			every_relation = {
				type = zz_magic_master
				remove_relation_zz_magic_apprentice = scope:zz_valyria_magic_learner
			}
		}
	}
	option = {
		scope:zz_magic_master = {
			random_memory = {
				limit = {
					has_memory_category = magic
					NOT = {
						scope:zz_magic_learner = {
							any_memory = {
								has_memory_type = PREVPREV
							}
						}
					}
				}
				save_scope_as = zz_valyria_teach_mystery
				scope:zz_magic_learner = {
					save_scope_as = zz_valyria_mystery_magic_learner
					zz_valyria_gain_spell_experience = {
						XPGAIN = 15 
						XPTRACK = secrets_of_the_higher_mysteries
					}
				}
			}
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_01_mysteries_of_restoration }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_02_mysteries_of_transmogrification }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_03_mysteries_of_regeneration }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_04_mysteries_of_renewal }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_05_mysteries_of_replication }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_06_mysteries_of_draconic_rejuvenation }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_07_mysteries_of_enchanted_blood }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_08_mysteries_of_dragon_laying }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_09_mysteries_of_draconic_enhancement }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_10_mysteries_of_draconic_blood }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_11_mysteries_of_longevity }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_12_mysteries_of_vitality }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_13_mysteries_of_resilience }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_14_mysteries_of_fortitude }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_15_mysteries_of_fertility }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_16_mysteries_of_blood_control }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_17_mysteries_of_vital_consumption }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_18_mysteries_of_draconic_genetics }
			zz_valyria_magic_learning_gui_effect = { SPELL =  zz_valyria_magic_blood_magic_19_mysteries_of_sex_selection }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_01_mysteries_of_shadowy_steeds }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_02_mysteries_of_shadowy_daggers }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_03_mysteries_of_the_shadow_shield }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_04_mysteries_of_the_shadowy_cloak }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_05_mysteries_cloying_shadow }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_06_mysteries_of_feeble_daggers }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_07_mysteries_of_the_weakened_vigilience }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_shadow_magic_08_mysteries_of_the_revealed_shadows }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_01_mysteries_mental_domination }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_02_mysteries_of_dreaming_destinies }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_03_mysteries_of_dreams }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_04_mysteries_of_secrets }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_05_mysteries_of_personality_distortion }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_06_mysteries_of_education_reformation }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_07_mysteries_of_dreaming_fascination }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_08_mysteries_of_murderous_dream }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_09_mysteries_of_minor_scrying }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_10_mysteries_dreams_of_mystic_power }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_11_mysteries_penetrative_insight }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_12_mysteries_perceptive_insight }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_13_mysteries_secret_penetration }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_14_mysteries_secret_perception }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_15_mysteries_hidden_discernment }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_16_mysteries_secret_binding_own }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_17_mysteries_secret_binding_targeted }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_18_mysteries_secret_binding_known }

			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_19_mysteries_breach_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_20_mysteries_breach_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_21_mysteries_empower_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_22_mysteries_empower_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_23_mysteries_manipulate_participation_of_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_24_mysteries_manipulate_participation_of_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_25_mysteries_reveal_participation_of_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_26_mysteries_reveal_participation_of_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_27_mysteries_delay_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_28_mysteries_delay_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_29_mysteries_weaken_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_30_mysteries_weaken_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_31_mysteries_disrupt_hostile_schemes }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_dream_magic_32_mysteries_disrupt_schemes }

			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_01_mysteries_of_growth }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_02_mysteries_of_construction }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_03_mysteries_of_transmutation }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_04_mysteries_of_arms }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_05_mysteries_of_realm_fortification }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_alchemy_magic_06_mysteries_of_enchantment }

			
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_fire_magic_01_mysteries_of_striking_flame }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_fire_magic_02_mysteries_of_the_blasting_flame }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_fire_magic_03_mysteries_of_the_storm_of_fire }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_fire_magic_04_mysteries_of_flaming_purification }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_fire_magic_05_mysteries_of_flaming_blades }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_air_magic_01_mysteries_of_the_slicing_wind }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_air_magic_02_mysteries_of_the_tempestuous_winds }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_air_magic_03_mysteries_of_the_wall_of_the_wind }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_air_magic_04_mysteries_of_the_hurricane }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_water_magic_01_mysteries_of_the_crushing_waters }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_water_magic_02_mysteries_of_the_surging_torrent }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_water_magic_03_mysteries_of_endurance }
			zz_valyria_magic_learning_gui_effect = { SPELL = zz_valyria_magic_water_magic_04_mysteries_of_rhoyne }
		}
	}
}


zz_valyria_magic.1 = {
	hidden = yes
	scope = none
	trigger = {
	}
	immediate = {
		every_ruler = {
			limit = {
				has_trait = zz_magister
			}
			send_interface_toast = {
				if = { 
					limit = { 
						has_trait = born_under_a_red_comet
					}
					add_trait_xp = {
						trait = born_under_a_red_comet
						track = chosen_of_the_heavens
						value = 100
					}
					add_trait_xp = {
						trait = zz_magister
						track = drops_of_power
						value = 100
					}
				}
				zz_random_gain_magic_spell = yes 
				if = {
					limit = {
						has_variable = dragonlore
					}
					change_variable = {
						name = dragonlore
						add = 10
					}
				}
				else = {
					set_variable = {
						name = dragonlore
						value = 10
					}
				}

			}
		}
	}
}


namespace = zz_valyria_blackstone

zz_valyria_blackstone.001 = {
	type = character_event
	title = zz_valyria_blackstone.001.t
	desc = zz_valyria_blackstone.001.desc
	theme = university
	left_portrait = root


	immediate = {
	}

	trigger = {
		NOT ={
			has_character_flag = blackstone_learned
		}
	}

	option = {
		name = zz_valyria_blackstone.001.a
		trigger = {
		}
		custom_tooltip = {
			text = zz_valyria_blackstone.001.a.desc
			if = { 
				limit = { 
					exists = var:blackstone_xp
				}
				change_variable = { name = blackstone_xp add = 25}
			}
			else = { 
				set_variable = {
					name = blackstone_xp
					value = 25
				}
			}
		}
	}
	after = {
		if = { 
			limit = {
				exists = var:blackstone_xp
				var:blackstone_xp >= 100
			}
			add_character_flag = blackstone_learned
			trigger_event = {
				id = zz_valyria_blackstone.002
				days = 25
			}
		}
	}
}


zz_valyria_blackstone.002 = {
	type = character_event
	title = zz_valyria_blackstone.002.t
	desc = zz_valyria_blackstone.002.desc
	theme = university
	left_portrait = root


	immediate = {
		trigger_event = {
			id = zz_valyria_blackstone.003
			days = 35
		}
	}

	trigger = {
	}

	option = {
		name = zz_valyria_blackstone.002.a
		trigger = {
		}
		create_character_memory = {
			type = zz_valyria_secrets_blackstone_01
		}
		scope:new_memory = {
			set_variable = {
				name = learning_location
				value = root.location
			}
		}
	}
}
zz_valyria_blackstone.003 = {
	type = character_event
	title = zz_valyria_blackstone.002.t
	desc = zz_valyria_blackstone.002.desc
	theme = university
	left_portrait = root


	immediate = {
	}

	trigger = {
	}

	option = {
		name = zz_valyria_blackstone.002.a
		trigger = {
		}
		create_character_memory = {
			type = zz_valyria_secrets_blackstone_02
		}
		scope:new_memory = {
			set_variable = {
				name = learning_location
				value = root.location
			}
		}
	}
}

namespace = zz_valyria_the_doom

zz_valyria_the_doom.001 = {
	type = character_event
	title = zz_valyria_the_doom.001.t
	theme = university
	left_portrait = root
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_01
				}
				desc = zz_valyria_the_doom.0001.01.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_02
				}
				desc = zz_valyria_the_doom.0001.02.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_03
				}
				desc = zz_valyria_the_doom.0001.03.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_04
				}
				desc = zz_valyria_the_doom.0001.04.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_05
				}
				desc = zz_valyria_the_doom.0001.05.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = valyria_the_doom_06
				}
				desc = zz_valyria_the_doom.0001.06.desc
			}
			desc = zz_valyria_the_doom.0001.01.desc
		}
	}

	immediate = {
		random_list = { 
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_01
					}
				}
				add_character_flag = valyria_the_doom_01
			}
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_02
					}
				}
				add_character_flag = valyria_the_doom_02
			}
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_03
					}
				}
				add_character_flag = valyria_the_doom_03
			}
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_04
					}
				}
				add_character_flag = valyria_the_doom_04
			}
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_05
					}
				}
				add_character_flag = valyria_the_doom_05
			}
			1 = { 
				trigger = {
					NOT = {
						has_character_flag = valyria_the_doom_06
					}
				}
				add_character_flag = valyria_the_doom_06
			}
		}
	}

	trigger = {
		NOT ={
			has_character_flag = doom_learned
		}
	}

	option = {
		name = zz_valyria_the_doom.001.a
		trigger = {
		}
		custom_tooltip = {
			text = zz_valyria_the_doom.001.a.desc
			add_trait_force_tooltip = zz_magister
		}
	}
	after = {
		if = { 
			limit = {
				has_character_flag = valyria_the_doom_01
				has_character_flag = valyria_the_doom_02
				has_character_flag = valyria_the_doom_03
				has_character_flag = valyria_the_doom_04
				has_character_flag = valyria_the_doom_05
				has_character_flag = valyria_the_doom_06
			}
			add_character_flag = doom_learned
			trigger_event = {
				id = zz_valyria_the_doom.002
				days = 25
			}
		}
	}
}


zz_valyria_the_doom.002 = {
	type = character_event
	title = zz_valyria_the_doom.002.t
	desc = zz_valyria_the_doom.002.desc
	theme = university
	left_portrait = root


	immediate = {
	}

	trigger = {
	}

	option = {
		name = zz_valyria_the_doom.002.a
		trigger = {
		}
		if = {
			limit = {
				NOT = {
					has_trait = born_under_a_red_comet
				}
			}
			add_trait_force_tooltip = born_under_a_red_comet
			add_trait_xp = { 
				trait = born_under_a_red_comet
				track = chosen_of_the_heavens
				value = 25
			}
		}
		else = {
			add_trait_xp = { 
				trait = born_under_a_red_comet
				track = chosen_of_the_heavens
				value = 50
			}
		}
	}
}

namespace = zz_valyria_item_granting 
zz_valyria_item_granting.001 = {
	type = character_event
	title = zz_valyria_item_granting.001.t
	desc = zz_valyria_item_granting.001.desc
	theme = crown
	left_portrait = root


	immediate = {
	}

	trigger = {
	}

	option = {
		name = zz_valyria_item_granting.001.a
		trigger = {
		}
		cv_create_artifact_vs_torment_effect = { OWNER = ROOT } 
	}
}


namespace = zz_valyria_magic_court_mages_ritual


zz_valyria_magic_court_mages_ritual.001 = {
	type = character_event
	hidden = yes

	trigger = {
		NOT = { has_variable = drops_of_power_ritual_cooldown }
		liege = {
			exists = court_position:zz_valyria_court_mages_court_position
		}
		
		has_variable = active_drops_of_power_ritual
	}

	immediate = {
		# Set a cooldown, so it can only happen once every 6 months
		set_variable = {
			name = drops_of_power_ritual_cooldown
			days = 179
		}
		zz_valyria_gain_spell_experience = {
			XPGAIN = 1 
			XPTRACK = secrets_of_the_higher_mysteries
		}
		scope:liege = {
			zz_valyria_mana_gain = {
				MANAGAIN = 1
			}
			every_courtier_or_guest ={ 
				limit = {
					has_trait = zz_magister
				}
				zz_valyria_mana_gain = {
					MANAGAIN = 1
				}
			}
		}


		trigger_event = {
			id = zz_valyria_magic_court_mages_ritual.001
			months = 6
		}
	}
}


namespace = zz_valyria_magic_management

zz_valyria_magic_management.001 = {
	type = character_event
	window = zz_valyria_magic_character_event
	title = zz_valyria_magic_management.001.t
	desc = zz_valyria_magic_management.001.desc
	theme = dragon
	left_portrait = root
	right_portrait = scope:recipient
	immediate = {
		clear_variable_list ?= possible_characters
		if = { 
			limit = {
				has_trait = zz_magister
			}
			root = {
				add_to_variable_list = {
					name = possible_characters
					target = prev
				}
			}
		}
		every_living_mage = {
			limit = {
				liege_or_court_owner ?= root
			}
			root = {
				add_to_variable_list = {
					name = possible_characters
					target = prev
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			set_variable = {
				name = si_selected_character
				value = root
			}
			root = {
				set_variable = {
					name = si_selected_character
					value = prev
				}
			}
		}
	}
	widget = {
		is_shown = {
			root = {
				any_in_list = {
					variable = possible_characters
					count > 0
				}
			}
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}
	option = {
		name = zz_valyria_magic_management.001a
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:generalist_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:generalist_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}

	}
	option = {
		name = zz_valyria_magic_management.001b
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:blood_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:blood_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001c
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:shadow_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:shadow_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001d
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:dream_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:dream_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001e
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:alchemy_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:alchemy_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001f
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:fire_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:fire_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001g
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:air_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:air_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.001h
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						var:current_school_of_magic ?= flag:water_magic
					}
				}
			}
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:water_magic
				}
			}
		}
		else = {
			var:si_selected_character = {
				set_variable = {
					name = current_school_of_magic 
					value = flag:none
				}
			}
		}
	}
}

zz_valyria_magic_management.002 = {
	type = character_event
	window = zz_valyria_magic_character_event
	title = zz_valyria_magic_management.002.t
	desc = zz_valyria_magic_management.002.desc
	theme = dragon
	left_portrait = root
	right_portrait = scope:recipient
	immediate = {
		clear_variable_list ?= possible_characters
		if = { 
			limit = {
				has_trait = dragonrider
				OR = {
					has_trait = lifestyle_blademaster
					has_trait = lifestyle_reveler
					has_trait = lifestyle_hunter	
					has_trait = lifestyle_mystic
					has_trait = lifestyle_physician
					has_trait = lifestyle_herbalist
					has_trait = lifestyle_gardener 
				}
			}
			root = {
				add_to_variable_list = {
					name = possible_characters
					target = prev
				}
			}
		}
		every_courtier_or_guest = {
			limit = {
				has_trait = dragonrider
				OR = {
					has_trait = lifestyle_blademaster
					has_trait = lifestyle_reveler
					has_trait = lifestyle_hunter	
					has_trait = lifestyle_mystic
					has_trait = lifestyle_physician
					has_trait = lifestyle_herbalist
					has_trait = lifestyle_gardener 
				}
			}
			root = {
				add_to_variable_list = {
					name = possible_characters
					target = prev
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			set_variable = {
				name = si_selected_character
				value = root
			}
			root = {
				set_variable = {
					name = si_selected_character
					value = prev
				}
			}
		}
	}
	widget = {
		is_shown = {
			root = {
				any_in_list = {
					variable = possible_characters
					count > 0
				}
			}
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}
	option = {
		name = zz_valyria_magic_management.002a
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_blademaster
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.4
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002b
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_hunter
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.6
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002c
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_mystic
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.8
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002d
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_physician
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.10
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002e
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_herbalist
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.12
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002f
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_gardener
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.14
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.002g
		if = {
			limit = {
				var:si_selected_character = {
					has_trait = lifestyle_reveler
				}
			}
			var:si_selected_character = {
				trigger_event = { 
					id =  zz_agot_filler_dragon.2
				}
			}
		}
	}
}

zz_valyria_magic_management.003 = {
	type = character_event
	window = zz_valyria_magic_character_event
	title = zz_valyria_magic_management.003.t
	desc = zz_valyria_magic_management.003.desc
	theme = dragon
	left_portrait = root
	right_portrait = scope:recipient
	immediate = {
		clear_variable_list ?= possible_characters
		root = {
			add_to_variable_list = {
				name = possible_characters
				target = prev
			}
		}
		every_courtier_or_guest = {
			root = {
				add_to_variable_list = {
					name = possible_characters
					target = prev
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			set_variable = {
				name = si_selected_character
				value = root
			}
			root = {
				set_variable = {
					name = si_selected_character
					value = prev
				}
			}
		}
	}
	widget = {
		is_shown = {
			root = {
				any_in_list = {
					variable = possible_characters
					count > 0
				}
			}
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}
	option = {
		name = zz_valyria_magic_management.003a
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_necromancer
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_necromancer
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003b
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_mage
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_mage
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003c
		if = {
			limit = {
				var:si_selected_character = {
					NOR = {
						has_nickname = nick_the_witch
						has_nickname = nick_the_warlock
					}
				}
			}
			var:si_selected_character = {
				if  = { 
					limit = {
						is_female = yes 
					}
					give_nickname = nick_the_witch
				}
				else = {
					give_nickname = nick_the_warlock
				}
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003d
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_seer
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_seer
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003e
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_dreamer
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_dreamer
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003f
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_poet
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_poet
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003g
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_bard
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_bard
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003h
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_singer
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_singer
			}
		}
	}
	option = {
		name = zz_valyria_magic_management.003i
		if = {
			limit = {
				var:si_selected_character = {
					NOT = {
						has_nickname = nick_the_dragonknight_historic
					}
				}
			}
			var:si_selected_character = {
				give_nickname = nick_the_dragonknight_historic
			}
		}
	}
}