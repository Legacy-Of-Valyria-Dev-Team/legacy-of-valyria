namespace = agot_dragon_hatching

#### Replace event from AGOT to allow people with volcano holdings to use lava

agot_dragon_hatching.0014 = { # host catalyst event / back out?
	type = activity_event
	title = agot_dragon_hatching.0014.t
	desc = {
		first_valid = { # Type of hatching
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = hatching_type
							option = hatching_type_knowledge
						}
					}
				}
				desc = agot_dragon_hatching.0014.desc_opening_knowledge
			}
			desc = agot_dragon_hatching.0014.desc_opening_esoteric
		}
		first_valid = { # Level of catalyst
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = hatching_catalyst
							option = hatching_catalyst_minor
						}
					}
				}
				desc = agot_dragon_hatching.0014.desc_minor
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = hatching_catalyst
							option = hatching_catalyst_medium
						}
					}
				}
				desc = agot_dragon_hatching.0014.desc_medium
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = hatching_catalyst
							option = hatching_catalyst_major
						}
					}
				}
				desc = agot_dragon_hatching.0014.desc_major
			}
			desc = agot_dragon_hatching.0014.desc_massive
		}
	}
	theme = dragon

	immediate = {
		scope:activity.var:selected_egg = { save_scope_as = egg }
		scope:activity.var:ritual_leader_character = { save_scope_as = ritual_leader_character }
		if = {
			limit = {
				NOT = { scope:ritual_leader_character = root }
			}
			scope:ritual_leader_character = {
				save_scope_as = right_portrait
			}
		}
	}

	artifact = { # To display the artifact in the event-window
		target = scope:egg
		position = lower_center_portrait
	}

	left_portrait = {
		character = root
		animation = personality_rational
		triggered_animation = {
			trigger = {
				NOT = { exists = scope:right_portrait }
			}
			animation = throne_room_writer
		}
	}

	right_portrait = {
		character = scope:right_portrait
		animation = throne_room_writer
		triggered_animation = {
			trigger = {
				scope:activity = {
					has_activity_option = {
						category = hatching_type
						option = hatching_type_esoteric
					}
				}
			}
			animation = lantern
		}
	}

	option = { # Wood
		name = {
			trigger = {
				ai_rationality >= ai_boldness
			}
			text = agot_dragon_hatching.0014.opt.a_rational
		}
		name = {
			trigger = {
				ai_boldness > ai_rationality
			}
			text = agot_dragon_hatching.0014.opt.a_bold
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.a_tt
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:wood
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = { # Coal
		name = agot_dragon_hatching.0014.opt.b
		custom_tooltip = agot_dragon_hatching.0014.opt.b_ttplsnohasherror
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:coal
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = { # Oil
		name = agot_dragon_hatching.0014.opt.c
		trigger = {
			scope:activity = {
				has_activity_option = {
					category = hatching_type
					option = hatching_type_knowledge
				}
			}
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.c_tt
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:oil
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = { # Wildfire
		name = agot_dragon_hatching.0014.opt.d
		trigger = {
			scope:activity = {
				has_activity_option = {
					category = hatching_type
					option = hatching_type_esoteric
				}
			}
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.d_tt
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:wildfire
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = { # Lava
		name = agot_dragon_hatching.0014.opt.e
		trigger = {
			scope:activity.activity_location = {
				OR = {
					has_building_or_higher = dragonstone_01
					has_building_or_higher = valyria_volcano_01
					has_building_or_higher = valyria_volcano_02
					has_building_or_higher = valyria_volcano_03
					has_building_or_higher = valyria_volcano_04_01
					has_building_or_higher = valyria_volcano_05
					#has_building_or_higher = valyria_dead_volcano_01_01
					#has_building_or_higher = valyria_dead_volcano_02_01
				}
				
			}
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.e_tt
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:lava
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = { # Magnifying glass you weirdo
		name = agot_dragon_hatching.0014.opt.f
		trigger = {
			has_trait = eccentric
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.f_tt
		custom_tooltip = agot_dragon_hatching.0014.opt.warning
		scope:activity = {
			set_variable = {
				name = catalyst_type
				value = flag:magnifying_glass
			}
		}
		ai_chance = {
			base = 10
		}
		stress_impact = {
			eccentric = major_stress_impact_loss
		}
	}

	option = { # Backing out
		name = {
			trigger = {
				ai_boldness < 0
			}
			text = agot_dragon_hatching.0014.opt.leave_coward
		}
		name = {
			trigger = {
				ai_boldness >= 0
				ai_boldness > ai_rationality
			}
			text = agot_dragon_hatching.0014.opt.leave_bold
		}
		name = {
			trigger = {
				ai_boldness >= 0
				ai_rationality >= ai_boldness
			}
			text = agot_dragon_hatching.0014.opt.leave_rational
		}
		custom_tooltip = agot_dragon_hatching.0014.opt.leave_tt
		hidden_effect = {
			scope:activity = {
				set_variable = host_folded
				skip_activity_phase = yes
				every_attending_character = {
					limit = {
						NOT = { this = scope:host }
					}
					trigger_event = agot_dragon_hatching.0015
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}

	after = {
		if = {
			limit = {
				NOT = { scope:activity = { has_variable = host_folded } }
			}
			trigger_event = agot_dragon_hatching.0016
		}
	}
}