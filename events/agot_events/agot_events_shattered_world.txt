namespace = agot_shattered_world

scripted_effect remove_kingsguard_effect = {
	every_living_kingsguard = {
		save_scope_as = current_kingsguard
		remove_trait = kingsguard
		agot_kingsguard_destroy_artifacts = yes
		remove_kingsguard_effect = yes
	}
	title:e_the_iron_throne.holder = {
		add_character_flag = can_fire_kingsguard
		if = {
			limit = { exists = court_position:zz_kingsguard_court_position }
			every_court_position_holder = {
				type = zz_kingsguard_court_position
				revoke_court_position = {
					court_position = zz_kingsguard_court_position
				}
			}
			
		}
		if = {
			limit = { exists = court_position:zz_kingsguard_lord_commander_court_position}
			court_position:zz_kingsguard_lord_commander_court_position = {
				revoke_court_position = {
					court_position = zz_kingsguard_lord_commander_court_position
				}
			}
		}
	}
	title:e_the_iron_throne = {
		if = {
			limit = {
				exists = var:kingsguard_lord_commander
			}
			remove_variable = kingsguard_lord_commander
		}
		else_if = {
			limit = {
				exists = var:kingsguard_1
			}
			remove_variable = kingsguard_1
		}
		else_if = {
			limit = {
				exists = var:kingsguard_2
			}
			remove_variable = kingsguard_2
		}
		else_if = {
			limit = {
				exists = var:kingsguard_3
			}
			remove_variable = kingsguard_3
		}
		else_if = {
			limit = {
				exists = var:kingsguard_4
			}
			remove_variable = kingsguard_4
		}
		else_if = {
			limit = {
				exists = var:kingsguard_5
			}
			remove_variable = kingsguard_5
		}
		else_if = {
			limit = {
				exists = var:kingsguard_6
			}
			remove_variable = kingsguard_6
		}
	}
}

agot_shattered_world.0001 = { # Starter
	hidden = yes
	scope = none

	immediate = {
		agot_shattered_world_de_jure_kingdoms = yes

		every_ruler = {
			every_character_war = {
				limit = { always = yes }
				end_war = invalidated
			}
		}
		every_living_character = {
			limit = { is_imprisoned = yes }
			release_from_prison = yes
		}
		every_ruler = {
			limit = {
				has_government = lp_feudal_government
			}
			change_government = feudal_government
		}
		every_ruler = {
			every_ally = {
				break_alliance = prev
			}
		}

		if = {
			limit = { game_start_date = 8282.9.15 }
			agot_shattered_world_8284_scenario_cleanup = yes
		}

		set_global_variable = agot_startup_fire_councillors

		if = {
			limit = {
				OR = {
					has_game_rule = agot_shatter_duchies
					has_game_rule = agot_shatter_duchies_even
				}
			}
			remove_kingsguard_effect = yes
			agot_shattered_world_pk_de_jure = yes
			every_ruler = {
				limit = { NOT = { has_government = ruins_government} }
				trigger_event = agot_shattered_world.0002
			}
			agot_shattered_world_title_cleanup = yes
		}
		else_if = {
			limit = { has_game_rule = agot_shatter_kingdoms }
			remove_kingsguard_effect = yes
			agot_shattered_world_pk_de_jure = yes
			every_ruler = {
				limit = { NOT = { has_government = ruins_government} }
				trigger_event = agot_shattered_world.0003
			}
			agot_shattered_world_title_cleanup = yes
		}
		else_if = {
			limit = { has_game_rule = agot_shatter_petty_kingdoms }
			remove_kingsguard_effect = yes
			agot_shattered_world_pk_de_jure = yes
			agot_shattered_world_pk_kings = yes
			agot_shattered_world_title_cleanup = yes
			trigger_event = agot_shattered_world.0005
		}
		else_if = {
			limit = { has_game_rule = agot_shatter_empires }
			every_ruler = {
				limit = { NOT = { has_government = ruins_government} }
				trigger_event = agot_shattered_world.0004
			}
			agot_shattered_world_lp_kings = yes
			agot_shattered_world_title_cleanup = yes
		}
		remove_global_variable = agot_startup_fire_councillors

		every_ruler = { # Override default equal succession for Old Gods
			limit = {
				faith = faith:old_gods_south
				NOT = { has_realm_law = male_preference_law }
			}
			add_realm_law = male_preference_law
		}

		every_ruler = {
			limit = {
				NOT = { has_realm_law = crown_authority_0 }
			}
			add_realm_law_skip_effects = crown_authority_0
			remove_variable = crown_authority_cooldown
		}
	}
}

agot_shattered_world.0002 = { # Shatter Down To Counties
	hidden = yes
	type = character_event

	immediate = {
		# Destroy Titles
		every_held_title = {
			limit = {
				NOT = {
					OR = {
						this = title:d_the_wall
						this = title:k_the_wall
						this = title:k_the_most_devout
						this = title:d_the_silent_sisterhood
						holder = global_var:agot_artifact_keeper
						is_mercenary_company = yes
						is_landless_type_title = yes
					}
				}
				tier >= tier_duchy
			}
			holder = { destroy_title = prev }
		}

		# Split Exclaves
		root = {
			agot_shattered_world_split_exclaves = yes
		}
		# Split Counties if Counties - Even is Chosen
		if = {
			limit = { has_game_rule = agot_shatter_duchies_even }

			root = {
				agot_shattered_world_even_counties = yes
				if = { #do a second pass if first was unable to take all counties
					limit = {
						any_held_county = {
							count > 1
						}
					}
					add_to_global_variable_list = {
						name = shattered_world_i_hate_devs_list_and_need_to_lose_title
						target = root
					}
				}
			}
			every_in_global_list = {
				variable = shattered_world_i_hate_devs_list_and_need_to_lose_title
				agot_shattered_world_even_counties_second_pass = yes
			}
			title:c_castamere.holder = { #because fuck you castamere
				if = { #do a second pass if first was unable to take all counties
					limit = {
						any_held_county = {
							count > 1
						}
					}
					agot_shattered_world_even_counties_second_pass = yes
				}
			}
		}
	}
}

agot_shattered_world.0003 = { # Shatter Down To Duchies
	hidden = yes
	type = character_event

	immediate = {
		# Destroy Titles
		every_held_title = {
			limit = {
				NOT = {
					this = title:k_the_wall
					this = title:k_the_most_devout
				}
				tier >= tier_kingdom
			}
			holder = { destroy_title = prev }
		}

		# Get De Jure Vassals
		every_independent_ruler = {
			limit = {
				capital_province ?= {
					geographical_region = world_westeros_seven_kingdoms
				}
				primary_title = {
					tier = tier_duchy
				}
			}
			save_scope_as = liege_to_be
			primary_title = {
				every_dejure_vassal_title_holder = {
					if = {
						limit = {
							is_independent_ruler = yes
							NOT = { this = scope:liege_to_be }
							NOT = { primary_title = title:d_ruins }
							NOT = { primary_title = { tier = tier_duchy } }
						}
						save_scope_as = vassal_to_be

						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = change_fealty
							add_claim_on_loss = yes
						}
						scope:vassal_to_be = {
							change_liege = {
								liege = scope:liege_to_be
								change = scope:change_fealty
							}
						}
						resolve_title_and_vassal_change = scope:change_fealty
					}
				}
			}
		}
		# Split Exclaves
		root = {
			agot_shattered_world_split_exclaves = yes
		}
	}
}

agot_shattered_world.0004 = { # Shatter Down To Kingdoms
	hidden = yes
	type = character_event

	immediate = {
		# Destroy Empires
		every_held_title = {
			limit = {
				tier = tier_empire
			}
			holder = { destroy_title = prev }
		}
		# Split Exclaves - With Longer Range
		root = {
			agot_shattered_world_split_exclaves_longer_range = yes
		}

		# Get De Jure Vassals
		every_independent_ruler = {
			limit = {
				exists = capital_province
				capital_province ?= {
					geographical_region = world_westeros
				}
				primary_title = {
					tier >= tier_kingdom
				}
			}
			save_scope_as = liege_to_be
			primary_title = {
				every_dejure_vassal_title_holder = {
					if = {
						limit = {
							is_independent_ruler = yes
							NOT = { this = scope:liege_to_be }
							NOT = { primary_title = title:d_ruins }
						}
						save_scope_as = vassal_to_be

						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = change_fealty
							add_claim_on_loss = yes
						}
						scope:vassal_to_be = {
							change_liege = {
								liege = scope:liege_to_be
								change = scope:change_fealty
							}
						}
						resolve_title_and_vassal_change = scope:change_fealty
					}
				}
			}
		}
	}
}

agot_shattered_world.0005 = { # Shatter Down To Petty Kingdoms
	hidden = yes
	scope = none

	immediate = {
		every_ruler = {
			limit = {
				NOT = { has_government = ruins_government }
				primary_title.tier >= tier_empire
			}
			# Destroy Kingdoms
			every_held_title = {
				limit = {
					tier >= tier_empire
				}
				holder = { destroy_title = prev }
			}

			# Split Exclaves - With Longer Range
			agot_shattered_world_split_exclaves_longer_range = yes
		}

		# Get De Jure Vassals
		every_independent_ruler = {
			limit = {
				exists = capital_province
				primary_title = {
					tier = tier_kingdom
				}
			}
			save_scope_as = liege_to_be
			primary_title = {
				every_dejure_vassal_title_holder = {
					if = {
						limit = {
							primary_title.tier < tier_kingdom
							NOT = { this = scope:liege_to_be }
							NOT = { primary_title = title:d_ruins }
						}
						save_scope_as = vassal_to_be

						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = change_fealty
							add_claim_on_loss = yes
						}
						scope:vassal_to_be = {
							change_liege = {
								liege = scope:liege_to_be
								change = scope:change_fealty
							}
						}
						resolve_title_and_vassal_change = scope:change_fealty
					}
				}
			}
		}
	}
}