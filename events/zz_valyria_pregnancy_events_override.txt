namespace = pregnancy



# This event is always called on pregnancy start. Determines if the pregnancy will continue smoothly, if it will continue with complications, or be terminated prematurely.
#If either the birth goes smoothly, the mother grows sick, or the child grows sick, it will trigger the ordinary birth event (birth.0001). Otherwise a custom event will be triggered.

# by Linnéa Thimrén
pregnancy.0001 = {
	hidden = yes
	immediate = {
		#PREGNANCY COMPLICATION CALCULATIONS & FLAG-SETTING
		random_list = {
			200 = { #All goes smoothly!
				modifier = {
					location = {
						geographical_region = world_asshai
					}
					add = -500000
				}
				#Less likely if health is bad
				modifier = {
					health <= fine_health
					add = -10
				}
				modifier = {
					health <= poor_health
					add = -15
				}

				#More kids means less risk of complications!
				modifier = {
					add = 5
					any_child = {
						even_if_dead = yes
						count >= 2
					}
				}
				modifier = {
					add = 5
					any_child = {
						even_if_dead = yes
						count >= 4
					}
				}

				#More likely if you have sacred childbirth
				modifier = {
					factor = 2 # Religious doctrine focusing on providing a sanitary birthing chamber and supplies should have a substantial impact on birth complications.
					faith = {
						has_doctrine_parameter = safer_childbirths_active
					}
				}
				#More likely if the Dynasty has the Kin legacy
				modifier = {
					factor = 1.5 # So too should constant care of pregnant/birthing mothers.
					has_dynasty = yes
					dynasty = {
						has_dynasty_perk = kin_legacy_3
					}
				}

				#AGOT Added, guarantee if pre-configured
				modifier = {
					add = 10000
					has_character_flag = birth_will_go_smoothly
				}

				add_character_flag = {
					flag = birth_will_go_smoothly 
					days = 270
				}
			}
			#AGOT Added - Targaryen Scaly Baby 
			1 = {
				trigger = { #Mom or Dad are lizard people 
					OR = {
						AND = {
							has_dynasty = yes 
							dynasty = {
								has_dynasty_modifier = valyrian_heritage_dynasty_modifier
							}
						}
						scope:real_father = {
							AND = {
								has_dynasty = yes 
								dynasty = {
									has_dynasty_modifier = valyrian_heritage_dynasty_modifier
								}
							}
						}
					}
				}
				modifier = { #Close family ups the chance to balance free inbreeding 
					add = 5 #2%
					scope:mother = {
						any_close_or_extended_family_member = {
							this = 	scope:real_father
						}
					}
				}
				modifier = { #And extra for even closer family members
					add = 10 #5%
					scope:mother = {
						any_close_family_member = {
							this = scope:real_father
						}
					}
				}

				add_character_flag = {
					flag = birth_will_be_scaly
					days = 270
				}
			}
			10 = { #Pregnancy ends prematurely
				modifier = { 
					add = -200
						has_character_flag = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection_flag	
				}
				trigger_event = {
					id = pregnancy.2101
					days = { 80 120 }
				}
			}
			3 = { #Child dies during delivery (this triggers when the birth "should" have gone down, since we don't want to create the baby)
				#AGOT Added, guarantee if pre-configured
				modifier = {
					add = 10000
					has_character_flag = agot_birth_child_will_be_stillborn
				}
				modifier = { 
					add = -200
					has_character_flag = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection_flag	
				}
				trigger_event = {
					id = birth.3001
					days = { 180 200 }
				}
			}
			#AGOT Modified, childbirth rebalance
			2 = { #Mother dies
				modifier = { #to keep players from dying excessively
					add = -2
					is_ai = no
				}

				#AGOT Added, guarantee if pre-configured
				modifier = {
					add = 10000
					has_character_flag = agot_birth_mother_will_die
				}

				add_character_flag = { #Flags blocks other birth events
					flag = birth_mother_will_die
					days = 270
				}
			}
			2 = { #Mother and child dies (this triggers when the birth "should" have gone down, since we don't want to create the baby)
				modifier = { #to keep players from dying excessively
					add = -2
					is_ai = no
				}
				modifier = { 
					add = -2000
					OR = {
						has_character_flag = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection_flag
						has_character_flag = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection_flag
					}
					
				}
				trigger_event = {
					id = birth.3021
					days = { 180 200 }
				}
			}
			#AGOT Modified, childbirth rebalance
			20 = { #Sickly child (all other events happen as usual)
				modifier = {
					factor = 0.5 # Religious doctrine focusing on providing a sanitary birthing chamber and supplies should have a substantial impact on birth complications.
					faith = {
						has_doctrine_parameter = healthier_children_active
					}
				}
				#AGOT Added, guarantee if pre-configured
				modifier = {
					add = 10000
					has_character_flag = birth_child_will_become_sickly
				}
				add_character_flag = { #Flags blocks other birth events
					flag = birth_child_will_become_sickly
					days = 270
				}
			}
			5 = { #Ill mother (all other events happen as usual)
				modifier = { #to keep players from dying excessively
					add = -4
					is_ai = no
				}
				#AGOT Added, guarantee if pre-configured
				modifier = {
					add = 1000
					has_character_flag = birth_mother_will_become_ill
				}
				add_character_flag = { #Flags blocks other birth events
					flag = birth_mother_will_become_ill
					days = 270
				}
			}
			#AGOT added
			0 = {
				modifier = {
					add = 10000
					OR = {
						AND = {
							has_game_rule = agot_story_historical_events_historical_outcomes
							has_relation_historical_unfruitful_marriage = scope:real_father
						}
						has_relation_unfruitful_marriage = scope:real_father
					}
				}
				modifier = {
					add = 400
					has_game_rule = agot_story_historical_events_weighted_outcomes
					has_relation_historical_unfruitful_marriage = scope:real_father
				}
				modifier = {
					add = 10000
					agot_canon_children_should_block_pregnancy_trigger = yes
				}
				end_pregnancy = yes
				pregnancy_cleanup_effect = yes
				add_character_flag = {
					flag = blocked_pregnancy
					days = 2
				}
			}
		}
	}
}

namespace = birth 

birth.3001 = {
	type = character_event
	title = birth.3001.t
	desc = birth.3001.desc_other_child
	theme = death
	override_background = { reference = bedchamber}
	left_portrait = {
		character = root
		animation = grief
		outfit_tags = { nightgown }
	}
	right_portrait = {
		character = scope:father
		trigger = {
			exists = scope:father
		}
		animation = disbelief
	}

	trigger = {
		NOT = {
			has_character_flag = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection_flag
		}
		is_pregnant = yes
	}

	immediate = {
		play_music_cue = mx_cue_death
		create_character_memory = {
			type = child_stillborn
			participants = {
				mother = root
			}
		}
		hidden_effect = {
			random_dummy_gender_effect = yes
			end_pregnancy = yes
			#AGOT Added
			if = {
				limit = {
					has_character_flag = stillborn_girl
				}
				dummy_female = { save_scope_as = dummy_gender }
			}
			else_if = {
				limit = {
					has_character_flag = stillborn_boy
				}
				dummy_male = { save_scope_as = dummy_gender }
			}
		}
		if = {
			limit = {
				exists = scope:father
				scope:father = {
					is_alive = yes
				}
			}
			scope:father = {
				trigger_event = birth.3002
			}
		}
		custom_tooltip = birth.3001.a.tt
		pregnancy_cleanup_effect = yes
	}

	#NO NAMING WIDGET

	option = {
		name = birth.3001.a
	}
}

#BIRTH: Mother: Mother dies, child survives
birth.3011 = {
	type = character_event
	title = birth.3001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:child_2
				}
				desc = birth.3011.desc_twin
			}
			desc = birth.3011.desc
		}
		first_valid = {
			triggered_desc = {
				trigger = { is_landless_adventurer = yes }
				desc = birth.3011.adventurer
			}
			desc = birth.3011.landed
		}
	}
	theme = death
	override_background = { reference = bedchamber }
	left_portrait = {
		character = root
		animation = newborn
		outfit_tags = { nightgown }
	}
	lower_center_portrait = scope:child
	lower_left_portrait = scope:child_2

	trigger = {
		NOT = {
			has_character_flag = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection_flag
		}
		has_character_flag = birth_mother_will_die
	}

	immediate = {
		play_music_cue = mx_cue_death
		pregnancy_maintainance_effect = yes
	}

	#NAMING WIDGET
	widgets = {
		widget = {
			is_shown = {
				allow_naming_on_birth_of_child_trigger = { CHILD = scope:child }
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child = { save_scope_as = name_character_target } }
		}
		widget = {
			is_shown = {
				allow_naming_on_birth_of_child_trigger = { CHILD = scope:child_2 }
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child_2 = { save_scope_as = name_character_target } }
		}
	}

	option = {
		name = {
			trigger = { scope:child = { has_trait = twin } }
			text = birth.3011.twin.a
		}
		name = {
			trigger = { scope:child = { NOT = { has_trait = twin } } }
			text = birth.3011.a
		}

		if = {
			limit = {
				exists = scope:father
				scope:father = {
					is_alive = yes
				}
			}
			scope:father = {
				add_character_flag = {
					flag = sent_relevant_death_event
					days = 5
				}
				trigger_event = birth.3012
			}
		}
		hidden_effect = {
			remove_trait = pregnant
		}
		death = {
			death_reason = death_childbirth
		}
	}
}

birth.3021 = {
	type = character_event
	title = birth.3001.t
	desc = birth.3021.desc
	theme = death
	override_background = { reference = bedchamber }
	left_portrait = {
		character = root
		animation = pain
		outfit_tags = { nightgown }
	}

	trigger = {
		NOR = {
			has_character_flag = zz_valyria_magic_blood_magic_20_mysteries_of_maternal_protection_flag
			has_character_flag = zz_valyria_magic_blood_magic_21_mysteries_of_babe_protection_flag
		}
		is_pregnant = yes
	}

	immediate = {
		play_music_cue = mx_cue_death
		create_character_memory = {
			type = child_stillborn
			participants = {
				mother = root
			}
		}
		hidden_effect = {
			random_dummy_gender_effect = yes
			end_pregnancy = yes
		}
		custom_tooltip = birth.3001.a.tt
	}

	#NO NAMING WIDGET

	option = {
		name = birth.3021.a
		
		if = {
			limit = {
				exists = scope:father
				scope:father = {
					is_alive = yes
				}
			}
			scope:father = {
				add_character_flag = {
					flag = sent_relevant_death_event
					days = 5
				}
				trigger_event = birth.3022
			}
		}
		hidden_effect = {
			remove_trait = pregnant
		}
		death = {
			death_reason = death_childbirth
		}
	}
}